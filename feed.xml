<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://lahuman.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.5.2">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2017-11-14T12:00:47+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">Elasticsearch 5.x에서 Elasticsearch HQ 의 Query 기능 사용 시 400 에러 해결</title><link href="https://lahuman.github.io/elasticsearch_HQ_Query_fields_update/" rel="alternate" type="text/html" title="Elasticsearch 5.x에서 Elasticsearch HQ 의 Query 기능 사용 시 400 에러 해결" /><published>2017-11-14T00:00:00+09:00</published><updated>2017-11-14T00:00:00+09:00</updated><id>https://lahuman.github.io/elasticsearch_HQ_Query_fields_update</id><content type="html" xml:base="https://lahuman.github.io/elasticsearch_HQ_Query_fields_update/">&lt;h2 id=&quot;elasticsearch-5x에서-elasticsearch-hq-의-query-기능-사용-시-400-에러-해결&quot;&gt;Elasticsearch 5.x에서 Elasticsearch HQ 의 Query 기능 사용 시 400 에러 해결&lt;/h2&gt;

&lt;p&gt;어제 즐겁게 Elasticsearch HQ를 설치하고, 금일 Query를 이용하여 데이터를 조회하려고 했으나 계속 400 에러가 발생했다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;원인은 &lt;a href=&quot;https://github.com/elastic/kibana/issues/7541&quot;&gt;fields 가  stored_fields로 변경&lt;/a&gt;되면서 fileds를 파라미터로 넘길 경우 오류가 발생하였다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;간단하게 해결될 것 같아 fields의 이름을 stored_fields로 변경해보았더니, 결과는 나오지만 내가 넘긴 stored_fields의 값은 없이 처리가 되었다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-stored-fields.html&quot;&gt;Elasticsearch 의 문서를 확인하던 중 source filtering을 이용&lt;/a&gt;하라는 내용을 보고 이름을 다시 _source로 변경하고 나니 문제없이 데이터가 표출되었다.&lt;/p&gt;

&lt;p&gt;수정을 하고 나서 기쁜 마음으로 &lt;a href=&quot;https://github.com/royrusso/elasticsearch-HQ/pull/301&quot;&gt;Pull Request&lt;/a&gt;를 날렸다.&lt;/p&gt;

&lt;p&gt;도움이 되면 좋겠다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/elastic/kibana/issues/7541&quot;&gt;Rename fields parameter to stored_fields&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-stored-fields.html&quot;&gt;Elasticsearch Reference [5.6] » Search APIs » Request Body Search » Fields&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="elasticsearch" /><summary type="html">fields 를 더 이상 사용할 수 없어 발생한 문제</summary></entry><entry><title type="html">Elasticsearch 모니터링 툴 HEAD, HQ 설치 하기</title><link href="https://lahuman.github.io/elasticsearch_head_hq_install/" rel="alternate" type="text/html" title="Elasticsearch 모니터링 툴 HEAD, HQ 설치 하기" /><published>2017-11-13T00:00:00+09:00</published><updated>2017-11-13T00:00:00+09:00</updated><id>https://lahuman.github.io/elasticsearch_head_hq_install</id><content type="html" xml:base="https://lahuman.github.io/elasticsearch_head_hq_install/">&lt;h1 id=&quot;elasticsearch-모니터링-툴-head-hq-설치-하기&quot;&gt;Elasticsearch 모니터링 툴 HEAD, HQ 설치 하기&lt;/h1&gt;
&lt;p&gt;Elasticsearch의 모니터링을 위해서 가장 많이 사용하는 플러그인인 HEAD와 HQ가 5.x부터는 보안상의 이유로 Plugin 형식으로 제공되지 않는다.&lt;/p&gt;

&lt;h2 id=&quot;elasticsearch-설정-변경&quot;&gt;elasticsearch 설정 변경&lt;/h2&gt;
&lt;p&gt;기존과 달리 외부 서버와의 통신이기 때문에 CORS(Cro Origin Resource Sharing)를 허용하도록 약간의 수정이 필요하다.&lt;a href=&quot;https://www.elastic.co/kr/blog/running-site-plugins-with-elasticsearch-5-0&quot;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim $ELASTICSEARCH_INSTALL/config/elasticsearch.yml

# CORS 항목 추가
http.cors.enabled: true
http.cors.allow-origin: &quot;*&quot;
http.cors.allow-headers: Authorization
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;elastic-head-설치-하기2&quot;&gt;elastic-head 설치 하기&lt;a href=&quot;https://github.com/mobz/elasticsearch-head&quot;&gt;2&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;여러 설치 방법이 있지만, 가장 간단한 docker를 이용한 설치를 진행하겠다.&lt;br /&gt;
독커가 설치&lt;a href=&quot;https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-using-the-convenience-script&quot;&gt;4&lt;/a&gt; 되어 있다면 다음 command 만 날리면 끝난다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -p 9100:9100 mobz/elasticsearch-head:5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;이후 9100 포트로 접근하면 elsaticsearch 의 주소를 넣는 곳에 주소를 넣으면 바로 연동이 된다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;elastic-hq-설치-하기&quot;&gt;elastic-hq 설치 하기&lt;/h2&gt;
&lt;p&gt;소스를 다음 위치에서 &lt;a href=&quot;https://github.com/royrusso/elasticsearch-HQ/tree/feature/ES_5.x_support&quot;&gt;다운로드&lt;/a&gt; 한다.&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://github.com/royrusso/elasticsearch-HQ/archive/feature/ES_5.x_support.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;압축을 풀고 Nodejs 설치를 한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unzip ES_5.x_support.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;서버를 띄우기 위해 Node.js를 설치&lt;a href=&quot;https://github.com/nodesource/distributions&quot;&gt;5&lt;/a&gt; 해야 한다.&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
sudo apt-get install -y nodejs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;설치가 완료되면 elastic-hq가 grunt로 되어 있기 때문에 gruint-cli를 설치&lt;a href=&quot;https://gruntjs.com/getting-started&quot;&gt;6&lt;/a&gt; 해야 한다.&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo npm install -g grunt-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;elstic-hq 5.x 압축을 푼 디렉터리에서 npm install과 grunt dist 처리를 한다. &lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install
grunt dist
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;웹 서버 기동은 여러 방법이 있지만, 간단하게 Python을 이용한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python -m SimpleHTTPServer 8000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/kr/blog/running-site-plugins-with-elasticsearch-5-0&quot;&gt;Elasticsearch 5.0에서 사이트 플러그인 실행&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mobz/elasticsearch-head&quot;&gt;git-hub elasticsearch-head&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/royrusso/elasticsearch-HQ/tree/feature/ES_5.x_support&quot;&gt;git-hub elasticsearch-HQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#install-using-the-convenience-script&quot;&gt;Docker-ce install&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nodesource/distributions&quot;&gt;Node.js install&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gruntjs.com/getting-started&quot;&gt;GRUNT Getting started&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="elasticsearch" /><category term="kibana" /><summary type="html">5.x 부터는 보안상의 이슈로 플러그인에서 제외</summary></entry><entry><title type="html">Elasticsearch, Kibana 설치 &amp;amp; 설정</title><link href="https://lahuman.github.io/elasticsearch_kibana_install_setting/" rel="alternate" type="text/html" title="Elasticsearch, Kibana 설치 &amp; 설정" /><published>2017-11-09T00:00:00+09:00</published><updated>2017-11-09T00:00:00+09:00</updated><id>https://lahuman.github.io/elasticsearch_kibana_install_setting</id><content type="html" xml:base="https://lahuman.github.io/elasticsearch_kibana_install_setting/">&lt;h1 id=&quot;elasticsearch-kibana-설치--설정&quot;&gt;Elasticsearch, Kibana 설치 &amp;amp; 설정&lt;/h1&gt;
&lt;p&gt;Elasticsearch는 분산형 RESTful 검색 및 분석 엔진입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;기본 개념
    &lt;ol&gt;
      &lt;li&gt;NRT(Near Realtime) - 검색 플랫폼&lt;/li&gt;
      &lt;li&gt;클러스터 - 하나 이상의 노드(서버)가 모인것&lt;/li&gt;
      &lt;li&gt;노드 - 클러스터에 포함된 단일 서버&lt;/li&gt;
      &lt;li&gt;인덱스 - 비슷한 특성을 가진 문서 모음&lt;/li&gt;
      &lt;li&gt;타입 - 색인에서 지정하는 유형&lt;/li&gt;
      &lt;li&gt;도큐먼트 - 문서의 색인화의 기본단위&lt;/li&gt;
      &lt;li&gt;샤드 &amp;amp; 리플리카&lt;/li&gt;
    &lt;/ol&gt;
    &lt;ul&gt;
      &lt;li&gt;샤드 =&amp;gt; 색인을 조각으로 분할&lt;/li&gt;
      &lt;li&gt;리플리카 =&amp;gt; 샤드의 복제&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;elasticsearch-설치&quot;&gt;Elasticsearch 설치&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;최소 사양-ORACLE JDK 8이상&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/system-config.html&quot;&gt;기본 시스템 설정 처리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/downloads/elasticsearch&quot;&gt;elasticsearch download&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;압축 해제
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvf elasticsearch-5.x.x.tar.gz
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;설정 변경
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim  $INSTALL_PATH/config/elasticsearch.yml
# 외부 접속 IP로 변경
network.host: {IP}
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;실행
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$INSTALL_PATH/bin/elasticsearch
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;elasticsearch-api&quot;&gt;Elasticsearch API&lt;/h2&gt;
&lt;h3 id=&quot;클러스터-상태-확인&quot;&gt;클러스터 상태 확인&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XGET localhost:9200/{index 명}/_cat/health?v
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;노드-목록-확인&quot;&gt;노드 목록 확인&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XGET localhost:9200/{index 명}/_cat/nodes?v
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;모든-index-나열&quot;&gt;모든 INDEX 나열&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XGET localhost:9200/{index 명}/_cat/indices?v
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;index-생성mappingsjson-샘플&quot;&gt;INDEX 생성(&lt;a href=&quot;https://github.com/ahmia/ahmia-index/blob/master/mappings.json&quot;&gt;mappings.json 샘플&lt;/a&gt;)&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XPUT -i &quot;localhost:9200/{index 명}/&quot; -H 'Content-Type: application/json' -d &quot;{@./mappings.json}&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;index-field-확인&quot;&gt;INDEX FIELD 확인&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XGET localhost:9200/{index 명}/_settings,_mappings?pretty
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;index-삭제&quot;&gt;INDEX 삭제&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XDELETE localhost:9200/{index 명} -H &quot;Accept: application/json&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;kibans-설치&quot;&gt;Kibans 설치&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/downloads/kibana&quot;&gt;Kibana download&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;압축 해제
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvf kibana-5.x.x-linux-x86_64.tar.gz
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;설정 변경
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim $INSTALL_PATH/config/kibana.yml
# 변경내역
# server.host 외부에서 접근하기 위하여 0.0.0.0 으로 설정
server.host: &quot;0.0.0.0&quot;
# elasticsearch url 설정
elasticsearch.url: &quot;http://10.0.2.15:9200&quot;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;실행
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$INSTALL_PATH/bin/kibana
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;web 접속
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://ADDRESS:5601
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;INDEX Pattern 설정 후 결과 보기&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html?baymax=KR-ES-getting-started&amp;amp;elektra=landing-page&quot;&gt;Elasticsearch Reference&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/guide/kr/elasticsearch/reference/5.4/gs-basic-concepts.html&quot;&gt;Elasticsearch Reference 5.4 한글판&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="elasticsearch" /><category term="kibana" /><summary type="html">설치가 정말 쉽다. 압축만 풀면 끝! 설정은 잘 알아야 함</summary></entry><entry><title type="html">tor onion 도메인 검색 Bot</title><link href="https://lahuman.github.io/20171108-phase/" rel="alternate" type="text/html" title="tor onion 도메인 검색 Bot" /><published>2017-11-08T00:00:00+09:00</published><updated>2017-11-08T00:00:00+09:00</updated><id>https://lahuman.github.io/20171108-phase</id><content type="html" xml:base="https://lahuman.github.io/20171108-phase/">&lt;h1 id=&quot;deep-web-dark-web-이라-불리는-접속하기-어려운-사이트&quot;&gt;Deep Web, Dark Web 이라 불리는 접속하기 어려운 사이트&lt;/h1&gt;

&lt;p&gt;첫번째 과제로 onion 도메인 수집하는 방안이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;역시 좋은 세상에 github에 이미 &lt;a href=&quot;https://github.com/ahmia/ahmia-crawler.git&quot;&gt;검색 봇을 구현한 사람&lt;/a&gt;이 있다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;감사합니다&quot;&gt;감사합니다.&lt;/h2&gt;</content><category term="단상" /><summary type="html">첫번째 업무가 왔다.</summary></entry><entry><title type="html">MYSQL의 Storage Engines 에서 가장 많이 사용되는 MyISAM과 InnoDB 장/단점</title><link href="https://lahuman.github.io/Mysql_MyISAM_problem/" rel="alternate" type="text/html" title="MYSQL의 Storage Engines 에서 가장 많이 사용되는 MyISAM과 InnoDB 장/단점" /><published>2017-11-07T00:00:00+09:00</published><updated>2017-11-07T00:00:00+09:00</updated><id>https://lahuman.github.io/Mysql_MyISAM_problem</id><content type="html" xml:base="https://lahuman.github.io/Mysql_MyISAM_problem/">&lt;h1 id=&quot;myisma-vs-innodb&quot;&gt;MyISMA VS InnoDB&lt;/h1&gt;

&lt;h2 id=&quot;1-myisma&quot;&gt;1. MyISMA&lt;/h2&gt;
&lt;p&gt;MyISMA 의 특징은 non-transactional-safe(트랜잭션 기능 제공 안 함)와 데이터 모델 디자인이 단순하다는 것이다.&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;장점&quot;&gt;장점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;단순한 디자인으로 인해 따라서 Select 작업 속도가 빠르고 많은 읽기 작업에 적합하다.&lt;/li&gt;
  &lt;li&gt;Full-text 인덱싱이 가능하여 검색하고 하는 내용에 대한 복합 검색도 가능하다.&lt;/li&gt;
  &lt;li&gt;테이블 단위로 물리 파일이 존재하여 백업 &amp;amp; 복구가 쉽다.
    &lt;ol&gt;
      &lt;li&gt;.frm - 테이블 정의 파일&lt;/li&gt;
      &lt;li&gt;.MYD - 테이블 데이터 파일&lt;/li&gt;
      &lt;li&gt;.MYI - 테이블 인덱스 파일&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;단점&quot;&gt;단점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Table-Level Lock&lt;/strong&gt; 사용으로 쓰기 작업이 느리고 다음과 같은 문제가 있다.
    &lt;ol&gt;
      &lt;li&gt;SELECT (진행 중),  Update(대기 중) 일 경우에 &lt;strong&gt;해당 테이블에 대한 SELECT 작업도 함께 LOCK이 걸린다.&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 무결성이 보장되지 않는다.&lt;/li&gt;
  &lt;li&gt;트랜젝션 기능 제공 안 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-innodb&quot;&gt;2. InnoDB&lt;/h2&gt;
&lt;p&gt;InnoDB는 트랜잭션 기능을 제공하고 Row-level locking, 외래 키 지원, 장애 복구 등의 다양한 기능을 지원한다.&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;장점-1&quot;&gt;장점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Row-level Lock&lt;/strong&gt; 사용으로 변경 작업이 빠르고 해당 ROW를 제외한 동시 처리가 가능하다.&lt;/li&gt;
  &lt;li&gt;데이터 무결성 보장한다.&lt;/li&gt;
  &lt;li&gt;제약조건, 외래 키 생성, 동시성 제어 등 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;단점-1&quot;&gt;단점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Full-text 인덱싱 불가능하다.&lt;/li&gt;
  &lt;li&gt;MyISAM에 비해 시스템 자원을 많이 사용한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;참조&quot;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/MyISAM&quot;&gt;MyISMA WIKI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ojava.tistory.com/25&quot;&gt;Mysql Storage Engine의 양대산맥! MyISAM vs InnoDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/myisam-storage-engine.html&quot;&gt;15.2 The MyISAM Storage Engine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="MYSQL" /><category term="Storage" /><summary type="html">MyISMA을 써야할 때와 쓰지 말아야 할때를 알아야 한다.</summary></entry><entry><title type="html">월요일 아침은 힘들어…</title><link href="https://lahuman.github.io/20171106-phase/" rel="alternate" type="text/html" title="월요일 아침은 힘들어..." /><published>2017-11-06T00:00:00+09:00</published><updated>2017-11-06T00:00:00+09:00</updated><id>https://lahuman.github.io/20171106-phase</id><content type="html" xml:base="https://lahuman.github.io/20171106-phase/">&lt;h1 id=&quot;매주-월요일에-겪는-몇가지-일들&quot;&gt;매주 월요일에 겪는 몇가지 일들&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;배가 아프다.&lt;/li&gt;
  &lt;li&gt;몽롱한 정신 상태&lt;/li&gt;
  &lt;li&gt;진행하던 일 따라가기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;주 원인은 &lt;strong&gt;1&lt;/strong&gt; 번 같다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;배가 아파 화장실을 들락날락 하니 집중도가 떨어지는 듯…&lt;/p&gt;

&lt;h2 id=&quot;주말동안-안먹던-음식을-먹었나&quot;&gt;주말동안 안먹던 음식을 먹었나?&lt;/h2&gt;</content><category term="단상" /><summary type="html">매주를 시작하는 월요일은 날 힘들게 한다.</summary></entry><entry><title type="html">[TIP]TOMCAT 설정</title><link href="https://lahuman.github.io/TOMCAT_SETTING/" rel="alternate" type="text/html" title="[TIP]TOMCAT 설정" /><published>2017-11-03T00:00:00+09:00</published><updated>2017-11-03T00:00:00+09:00</updated><id>https://lahuman.github.io/TOMCAT_SETTING</id><content type="html" xml:base="https://lahuman.github.io/TOMCAT_SETTING/">&lt;h1 id=&quot;tomcat-설정을-알아보자&quot;&gt;TOMCAT 설정을 알아보자&lt;/h1&gt;

&lt;p&gt;TOMCAT은 JAVA WAS(Web Application  Server)에서 가장 많이 사용되고 있다.&lt;a href=&quot;https://plumbr.io/blog/java/most-popular-java-application-servers-2017-edition&quot;&gt;1&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;많이 사용되는 이유는 OpenSource(무료)며,  많은 Committers의 참여로 주기적인 패치가 이루어지고 쉬운 설치 JAVA 언어와의 좋은 궁합 등이 있다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Tomcat을 운영에서 사용하기 위하여 몇 가지 설정 변경이 필요하다.&lt;/p&gt;

&lt;h2 id=&quot;tomcat-logging&quot;&gt;Tomcat Logging&lt;/h2&gt;

&lt;p&gt;Tomcat Logger는 JULI(Java Logging Implimentation)이라는 자체 구현체를 제공한다.&lt;br /&gt;
기본적으로 Apache Commons Logging 기반으로 구현되어 있고(java.util.logging 사용)  extra 패키지를 통해 Log4j, logback 등으로 변경이 가능하다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기본 설정은 $CATALINA_BASE/conf/logging.properties 파일을 로딩하여 적용한다.&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;logging-종류&quot;&gt;Logging 종류&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;JAVA Logging API : Application당 로깅 설정을 제어하기 위해 java.util.logging 기반의 구현체 JULI 사용 - localhost.yyyy-MM-dd.log 형식의 파일명을 가짐&lt;/li&gt;
  &lt;li&gt;Servlets logging API : javax.servlet.ServletContext.log(…)를 통해 메시지를  때 사용 - manager.yyyy-MM.dd.log 형식의 파일명을 가짐&lt;/li&gt;
  &lt;li&gt;Console : tomcat 운영시 출력되는 STDERR/STDOUT - catalina.out 형식의 파일명을 가짐&lt;/li&gt;
  &lt;li&gt;Access Logging : AccessLogValve 또는 ExtendedAccessLogValve에서 생성되는 로그 - access_log.yyyy-MM-dd.txt 형식의 파일명을 가짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sessing&quot;&gt;Sessing&lt;/h2&gt;
&lt;p&gt;HTTP 세션을 생성 관리해주는 sessiong manager로 Context안에 설정이 안 되어 있는 경우 자동으로 기본 설정값에 의해 생성된다.(기본값 : org.apache.catalina.session.StandardManager)&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Manager classname=&quot;org.apache.catalina.session.StandardManager&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;session-manager-종류&quot;&gt;Session Manager 종류&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;StandardMnager : 기본 설정. 한 개의 instance를 사용하는 경우만 적용 가능 - org.apache.catalina.session.StandardManager&lt;/li&gt;
  &lt;li&gt;PersistentManager : 디스크 또는 DB에 세션을 Persist. 세션 스와핑과 장애 대처(fault tolerance) - org.apache.catalina.session.PersistenManager&lt;/li&gt;
  &lt;li&gt;DeltaManager : All-to-All 방식 Session Replication 기능 구현 - org.apache.catalina.session.DeltaManager&lt;/li&gt;
  &lt;li&gt;BackupManager : Primary-Secondary Sessiont Replication 기능을 구현 - org.apache.catalina.session.BackupManager
&lt;a href=&quot;https://tomcat.apache.org/tomcat-8.5-doc/config/manager.html&quot;&gt;2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tomcat-clustering&quot;&gt;Tomcat Clustering&lt;/h2&gt;

&lt;p&gt;Tomcat Clustering을 위해서는 $CATALINA_BASE/conf/server.xml의 &lt;Engine&gt; 또는 &lt;Host&gt; 에 다음과 같은 설정을 한다.&lt;/Host&gt;&lt;/Engine&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Cluster className=&quot;org.apache.catalina.ha.tcp.SimpleTcpCluster&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;아래는 설정 샘플&lt;a href=&quot;https://www.lesstif.com/pages/viewpage.action?pageId=46366798&quot;&gt;3&lt;/a&gt;이다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Cluster className=&quot;org.apache.catalina.ha.tcp.SimpleTcpCluster&quot;
                channelSendOptions=&quot;8&quot;&amp;gt;
  &amp;lt;Manager className=&quot;org.apache.catalina.ha.session.DeltaManager&quot;
          expireSessionsOnShutdown=&quot;false&quot;
          notifyListenersOnReplication=&quot;true&quot;/&amp;gt;

   &amp;lt;!-- 멀티캐스트 포트(45564) 필요에 따라 변경 --&amp;gt;
 &amp;lt;Channel className=&quot;org.apache.catalina.tribes.group.GroupChannel&quot;&amp;gt;
   &amp;lt;Membership className=&quot;org.apache.catalina.tribes.membership.McastService&quot;
               address=&quot;228.0.0.4&quot;
               port=&quot;45564&quot;
               frequency=&quot;500&quot;
               dropTime=&quot;3000&quot;/&amp;gt;
   &amp;lt;!-- replication 메시지 수신 포트는 4000 - 4100 사이 --&amp;gt;
   &amp;lt;Receiver className=&quot;org.apache.catalina.tribes.transport.nio.NioReceiver&quot;
             address=&quot;auto&quot;
             port=&quot;4000&quot;
             autoBind=&quot;100&quot;
             selectorTimeout=&quot;5000&quot;
             maxThreads=&quot;6&quot;/&amp;gt;

   &amp;lt;Sender className=&quot;org.apache.catalina.tribes.transport.ReplicationTransmitter&quot;&amp;gt;
     &amp;lt;Transport className=&quot;org.apache.catalina.tribes.transport.nio.PooledParallelSender&quot;/&amp;gt;
   &amp;lt;/Sender&amp;gt;
   &amp;lt;Interceptor className=&quot;org.apache.catalina.tribes.group.interceptors.TcpFailureDetector&quot;/&amp;gt;
   &amp;lt;Interceptor className=&quot;org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor&quot;/&amp;gt;
 &amp;lt;/Channel&amp;gt;

 &amp;lt;Valve className=&quot;org.apache.catalina.ha.tcp.ReplicationValve&quot;
        filter=&quot;&quot;/&amp;gt;
 &amp;lt;Valve className=&quot;org.apache.catalina.ha.session.JvmRouteBinderValve&quot;/&amp;gt;

 &amp;lt;!-- war 를 하나에 반영하면 클러스터에 자동으로 배포되는 FarmWarDeployer 기능시에만 필요
 &amp;lt;Deployer className=&quot;org.apache.catalina.ha.deploy.FarmWarDeployer&quot;
           tempDir=&quot;/tmp/war-temp/&quot;
           deployDir=&quot;/tmp/war-deploy/&quot;
           watchDir=&quot;/tmp/war-listen/&quot;
           watchEnabled=&quot;false&quot;/&amp;gt;
   --&amp;gt;

 &amp;lt;ClusterListener className=&quot;org.apache.catalina.ha.session.ClusterSessionListener&quot;/&amp;gt;
&amp;lt;/Cluster&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;session-cluster&quot;&gt;session Cluster&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;DeltaManager : Small cluster&lt;/li&gt;
  &lt;li&gt;BackupManager : Large cluster&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/jieunsys/ss-56543446&quot;&gt;Enterprise 환경에서 Tomcat 운영하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://plumbr.io/blog/java/most-popular-java-application-servers-2017-edition&quot;&gt;2017년기준 JAVA 어플리케이션 서버 사용율&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tomcat.apache.org/tomcat-8.5-doc/config/manager.html&quot;&gt;Tomcat8 기준 세션 설정&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.lesstif.com/pages/viewpage.action?pageId=46366798&quot;&gt;Tcomat 세션 클러스터링 설정&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="TOMCAT" /><summary type="html">몇몇 주요 설정을 알아보자</summary></entry><entry><title type="html">Sandbox를 이용한 Malware 테스트</title><link href="https://lahuman.github.io/20171102-phase/" rel="alternate" type="text/html" title="Sandbox를 이용한 Malware 테스트" /><published>2017-11-02T00:00:00+09:00</published><updated>2017-11-02T00:00:00+09:00</updated><id>https://lahuman.github.io/20171102-phase</id><content type="html" xml:base="https://lahuman.github.io/20171102-phase/">&lt;h1 id=&quot;새로운-팀의-진행되었던-업무에-대하여-리뷰를-받았다&quot;&gt;새로운 팀의 진행되었던 업무에 대하여 리뷰를 받았다.&lt;/h1&gt;

&lt;p&gt;2명이 개발한 시스템이고, 생각보다 많은 기술들이 들어가 있었다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;잘 알지 못하는 기술들을 많이 배우는 시간이었다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Sandbox를 이용하여 악성 코드 판단을 하는 기술이 있다는 것을 어제 알게 되었다&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;앞으로 기대도 되고 걱정도 된다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ask-leo.com/whats_the_difference_between_a_sandbox_and_a_virtual_machine.html&quot;&gt;참고 URL&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;괜찮아-잘될꺼야&quot;&gt;괜찮아 잘될꺼야!&lt;/h2&gt;</content><category term="단상" /><summary type="html">보안 파트에서는 많이 사용되는 기술인다.</summary></entry><entry><title type="html">새로운 시작은 늘 불안하다.</title><link href="https://lahuman.github.io/20171101-phase/" rel="alternate" type="text/html" title="새로운 시작은 늘 불안하다." /><published>2017-11-01T00:00:00+09:00</published><updated>2017-11-01T00:00:00+09:00</updated><id>https://lahuman.github.io/20171101-phase</id><content type="html" xml:base="https://lahuman.github.io/20171101-phase/">&lt;h1 id=&quot;일단-무엇을-할지에-대한-자세한-논의가-필요한-상태&quot;&gt;일단 무엇을 할지에 대한 자세한 논의가 필요한 상태!&lt;/h1&gt;

&lt;p&gt;기본적으로 머신러닝을 한다는 이야기는 들었으나, 정확하게 무엇을 하는지는 모른다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;앞으로 어떻게 될지는 모르겠지만 열심히 해보면 무언가 결과가 나오겠지.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;40대가 다가오면서 많은 고민이 있다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내가 잘하고 있는 것인지도 모르고 앞으로 얼마나 더 할 수 있을지도 모르겠다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그냥 시간만 지나가는지도…&lt;/p&gt;</content><category term="단상" /><summary type="html">불안감은 빨리 떨처버리자!</summary></entry><entry><title type="html">내일 부터는 새팀으로 간다.</title><link href="https://lahuman.github.io/20171031-phase/" rel="alternate" type="text/html" title="내일 부터는 새팀으로 간다." /><published>2017-10-31T00:00:00+09:00</published><updated>2017-10-31T00:00:00+09:00</updated><id>https://lahuman.github.io/20171031-phase</id><content type="html" xml:base="https://lahuman.github.io/20171031-phase/">&lt;h1 id=&quot;지금-팀장과-업무-스타일이-많이-달라서-이야기가-많았다&quot;&gt;지금 팀장과 업무 스타일이 많이 달라서 이야기가 많았다.&lt;/h1&gt;

&lt;p&gt;기본적으로는 팀장의 뜻을 따라서 열심히 일하려고 노력 하였으나, 팀원에 대한 존중과 배려라고는 없는 사람과 일하는 것은 정신 건강에도 좋지 않았다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;과거의 영광에서 벗어나지 못하고, 구시대적 발상으로 팀원들을 괴롭히는 사람으로만 보이는 팀장과 작별을 고한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;새로운 팀에서 적응하고 열심히 하자.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1년-넘게-있으면서-많은-일이-있었다-잘-있어라&quot;&gt;1년 넘게 있으면서 많은 일이 있었다. 잘 있어라…&lt;/h2&gt;</content><category term="단상" /><summary type="html">결국 나가는 구나...</summary></entry></feed>
