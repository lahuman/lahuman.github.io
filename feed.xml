<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.3">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2023-11-29T05:32:22+00:00</updated><id>https://lahuman.github.io/feed.xml</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">2023년도 주요 프로젝트 내용과 프로젝트의 성과</title><link href="https://lahuman.github.io/2023_project/" rel="alternate" type="text/html" title="2023년도 주요 프로젝트 내용과 프로젝트의 성과" /><published>2023-11-27T00:00:00+00:00</published><updated>2023-11-27T00:00:00+00:00</updated><id>https://lahuman.github.io/2023_project</id><content type="html" xml:base="https://lahuman.github.io/2023_project/">&lt;h1 id=&quot;2023년도-수행했던-주요-프로젝트-내용과-프로젝트의-성과&quot;&gt;2023년도 수행했던 주요 프로젝트 내용과 프로젝트의 성과&lt;/h1&gt;

&lt;p&gt;입사 후 진행 한 22년 4월 부터 진행된 O모O모의 개발 총괄을 맡았습니다. 
O모O모는 2022년 11월에 서비스를 시작하였고, 초기 매타버스 기반(유니티-외주)에서 웹 기반(내재화)의 커뮤니티로 변화를 꾀하며  &lt;code class=&quot;highlighter-rouge&quot;&gt;2023년 5월에 10만 회원을 돌파&lt;/code&gt; 후, 23년 11월 기준 약 &lt;code class=&quot;highlighter-rouge&quot;&gt;25만명의 회원이 사용하는 서비스&lt;/code&gt;로 성장했습니다.&lt;/p&gt;

&lt;p&gt;회사에서 처음으로 클라우드 기반의 개발로 진행하였고, 외부에서 입사한 동료들과의 함께 하는 첫  프로젝트였습니다.&lt;/p&gt;

&lt;p&gt;초기 프로젝트를 진행할 때, 이전 회사인 GSSHOP에서 진행하였던 애자일 방식의 개발을 도입하였습니다.
저의 경우는 팀원으로만 참여하였던 애자일 방식에서 처음으로 스크럼에 마스터가 되어서 진행하였습니다.&lt;/p&gt;

&lt;p&gt;진행 방식으로는 매일 아침 스크럼 미팅을 하고, 매 2주간 스프린트를 진행하였습니다. 
스프린트가 종료 되면 회고를 하고 그라운드 룰을 함께 만들어가며 동료들과 진행하였습니다.&lt;/p&gt;

&lt;p&gt;JIRA와 Confluence, Slack 기반으로 업무, 지식공유, 소통을 하였습니다. 
다들 처음에는 어색해하였지만, 2번의 스프린트(4주)가 지나자 익숙해지며 좋은 결과를 만들어 갈 수 있었습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고 내용 : &lt;a href=&quot;https://lahuman.github.io/going_scrum/&quot;&gt;합시다, 스크럼&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;NODEJS를 처음 사용하는 동료를 위해서 코드 리뷰를 통한 성장을 지원하고, 제가 가진 지식을 기반으로 추가적인 학습 시간과 학습 내용을 공유 하는 시간을 매 스프린트 회고마다 가졌습니다.&lt;/p&gt;

&lt;p&gt;Backend 개발시 유지보수를 고려해서 typescript 기반의 프레임워크인 Nestjs로 진행하고 필요한 Boilerplate code를 제공하였습니다.
마찬가지로 관리자 페이지 역시 Reactjs + MUI로 구성을 개발 할 수 있도록 Boilerplate code를 작성하였습니다.&lt;/p&gt;

&lt;p&gt;또한 프로젝트 막바지에는 클라우드 엔지니어와 함께 AWS 기반의 CI/CD를 code commit 기반으로 구성하고, 
 개발서버에서 운영서버까지의 소스코드의 파이프라인에 대하여 함께 논의하며 구축하였습니다.&lt;/p&gt;

&lt;p&gt;결론적으로 O모O모의 성과는 좋았고, 이는 저 혼자의 힘으로 해낼 수 없는 일이었습니다.
저를 믿고 따라준 동료들과 함께여서 좋은 성과를 내었다고 2023년을 회고합니다.&lt;/p&gt;</content><author><name></name></author><category term="O모O모" /><category term="role" /><category term="scrum" /><summary type="html">2023년도 회고 &amp; 경험</summary></entry><entry><title type="html">지금 기분이 태도가 되지 않게</title><link href="https://lahuman.github.io/20231117/" rel="alternate" type="text/html" title="지금 기분이 태도가 되지 않게" /><published>2023-11-17T00:00:00+00:00</published><updated>2023-11-17T00:00:00+00:00</updated><id>https://lahuman.github.io/20231117</id><content type="html" xml:base="https://lahuman.github.io/20231117/">&lt;h1 id=&quot;기분이-태도가-되지-않게&quot;&gt;&lt;a href=&quot;https://www.yes24.com/Product/Goods/90872322&quot;&gt;기분이 태도가 되지 않게&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;책을 읽고 반성하는 하루 입니다.&lt;/p&gt;

&lt;p&gt;년중 행사처럼 쓰는 말이지만, 불평 불만을 줄이도록 노력해야겠습니다.&lt;/p&gt;

&lt;p&gt;특히 통제할 수 없는 불평 불만은 하지 않도록 조심해야겠습니다.&lt;/p&gt;

&lt;p&gt;책은 명상을 하듯이 조금씩 곱씹으면 읽기 좋습니다.&lt;/p&gt;</content><author><name></name></author><category term="독서" /><summary type="html">도서 후기</summary></entry><entry><title type="html">내가 생각하는 개발자란?</title><link href="https://lahuman.github.io/what_is_developer/" rel="alternate" type="text/html" title="내가 생각하는 개발자란?" /><published>2023-10-20T00:00:00+00:00</published><updated>2023-10-20T00:00:00+00:00</updated><id>https://lahuman.github.io/what_is_developer</id><content type="html" xml:base="https://lahuman.github.io/what_is_developer/">&lt;h1 id=&quot;문제를-해결하는-사람&quot;&gt;문제를 해결하는 사람&lt;/h1&gt;

&lt;p&gt;신입 개발자 때 목표는,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;코딩을 잘한다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;10년쯤 지났을 때 목표는,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;좋은 품질의 코드를 작성한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;지금의 내 목표는,&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;가치 있는 코드&lt;/code&gt;(기술)로 문제를 해결한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;나에게-가치-있는-코드란&quot;&gt;나에게 가치 있는 코드란?&lt;/h1&gt;

&lt;h2 id=&quot;최소한의-코드-품질을-유지하면서-더-큰-가치를-만들-수-있는-요구-사항을-찾아-구현하고-주어진-일정을-지킨다&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;최소한의 코드 품질을 유지&lt;/code&gt;하면서 &lt;code class=&quot;highlighter-rouge&quot;&gt;더 큰 가치를 만들 수 있는 요구 사항을 찾아 구현&lt;/code&gt;하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;주어진 일정을 지킨다&lt;/code&gt;&lt;/h2&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;good-cheap-fast-triangle&quot;&gt;Good, Cheap, Fast Triangle&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/good_cheap_fast_triangle.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;서비스의 가치&lt;/code&gt;를 높이고, &lt;code class=&quot;highlighter-rouge&quot;&gt;품질을 유지&lt;/code&gt;하면서, 시기와 상황에 따라 &lt;code class=&quot;highlighter-rouge&quot;&gt;적절한 균형점&lt;/code&gt;을 잡아는 노력 필요&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;최소한의-코드-품질을-유지&quot;&gt;최소한의 코드 품질을 유지&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;적절한 코드 품질을 지키는 것은 늘 어렵다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;하지만, 최소한의 코드 품질을 지키기 위한 노력은 필요하다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;명확하고 간결한 코드(읽기 쉬운 코드)&lt;/li&gt;
  &lt;li&gt;코드 스타일 가이드 준수&lt;/li&gt;
  &lt;li&gt;단위 테스트&lt;/li&gt;
  &lt;li&gt;모듈화(추상화)&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;더-큰-가치를-만들-수-있는-요구-사항을-찾아-구현&quot;&gt;더 큰 가치를 만들 수 있는 요구 사항을 찾아 구현&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;협업 그리고 이해&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;고객의 피드백 수집&lt;/li&gt;
  &lt;li&gt;지속적인 개선&lt;/li&gt;
  &lt;li&gt;실험과 반복&lt;/li&gt;
  &lt;li&gt;아이디어 공유 및 브레인스토밍&lt;/li&gt;
  &lt;li&gt;동료 및 피드백 수신&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;주어진-일정을-지킨다&quot;&gt;주어진 일정을 지킨다&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;모든건 일정 안에서 이루어져야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;우선 순위 설정&lt;/li&gt;
  &lt;li&gt;MVP(Minimum Viable Product) 구축&lt;/li&gt;
  &lt;li&gt;일정 관리 / 일일 계획&lt;/li&gt;
  &lt;li&gt;시간 관리 / 일정 조정&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;또한-개발은-코드만이-아니다&quot;&gt;또한 개발은 코드만이 아니다.&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;개발자의 진정한 역할은 코드만 만드는 게 아니라, &lt;code class=&quot;highlighter-rouge&quot;&gt;문제의 본질&lt;/code&gt;을 찾고 동료들과 함께 해결하는 전반적인 일입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;코드는 우리(개발자)가 문제를 해결하는 도구 중 하나 입니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;어떤 문제를 해결&lt;/code&gt;하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;어떤 가치를 창출&lt;/code&gt;하며 &lt;code class=&quot;highlighter-rouge&quot;&gt;어떤 일을 할지 결정&lt;/code&gt; 해야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;늘 생각하고 있던 내용인데, 아래 내용을 읽고 얼마 제 생각을 정리 하며 작성하게 되었습니다. 위에 내용도 포함이 되어 있고 더 상세하게 잘 정리 되어 있는 내용입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://velog.io/@teo/collaboration&quot;&gt;협업을 잘하는 개발자가 되어보자 - 프로그래머가 아니라 문제 해결사가 되자!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="developer" /><summary type="html">중요한건 코드보다 문제 해결!</summary></entry><entry><title type="html">채팅 서비스 만들기 설계 정리</title><link href="https://lahuman.github.io/chatting_service/" rel="alternate" type="text/html" title="채팅 서비스 만들기 설계 정리" /><published>2023-10-15T00:00:00+00:00</published><updated>2023-10-15T00:00:00+00:00</updated><id>https://lahuman.github.io/chatting_service</id><content type="html" xml:base="https://lahuman.github.io/chatting_service/">&lt;h1 id=&quot;상품을-기준으로-사용자간-채팅을-할-수-있도록-설계-합니다&quot;&gt;상품을 기준으로 사용자간 채팅을 할 수 있도록 설계 합니다.&lt;/h1&gt;

&lt;h2 id=&quot;설계&quot;&gt;설계&lt;/h2&gt;

&lt;p&gt;상품을 확인하고, 판매자에게 채팅을 요청 했을때 아래와 같은 동작을 합니다.&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt; 
sequenceDiagram;
    actor 구매자;
    구매자-&amp;gt;&amp;gt;+서버: 상품 구매 채팅;
    activate 서버;
    Note right of 서버: 상품 판매 여부 및 사용자 검수;
    actor 판매자;
    서버-&amp;gt;&amp;gt;+판매자: 채팅 메시지 전달;
    deactivate 서버;
    서버-&amp;gt;&amp;gt;-구매자: 채팅 메시지 전달;
&lt;/div&gt;

&lt;p&gt;상품에 대한 검수를 아래과 같이 처리 하고 나면, 채팅을 전달합니다.&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt; 
graph TD;
    A[상품 판매 채팅 검수] --&amp;gt; B{채팅방 존재};
    B --&amp;gt;|Y| H;
    B --&amp;gt;|N| D{상품 &amp;amp; 판매자 &amp;amp; 구매자 확인};
    D --&amp;gt; |Y| F(채팅방 생성);
    D --&amp;gt; |N| E[오류 메시지 전달];
    F --&amp;gt; H(채팅 전달);
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;채팅방이 존재 하지 않고, 상품이 판매 완료인 경우 새로운 채팅방을 생성할 수 없습니다.&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;테이블-구조&quot;&gt;테이블 구조&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/chatting_erd.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;채팅방명은 &lt;code class=&quot;highlighter-rouge&quot;&gt;상품ID-판매자ID-구매자ID&lt;/code&gt;로 유일한 값을 가지게 됩니다.&lt;/p&gt;

&lt;p&gt;또한 마지막 판매자 구매자의 마지막 읽은 채팅ID를 가지고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;샘플을-모두-적성하였으나-코드가-너무-번잡-스러워서-정리후-올릴-예정입니다&quot;&gt;샘플을 모두 적성하였으나, 코드가 너무 번잡 스러워서 정리후 올릴 예정입니다!&lt;/h2&gt;</content><author><name></name></author><category term="chatting" /><summary type="html">당근 마켓 클론 채팅 생성</summary></entry><entry><title type="html">일하기 싫다.</title><link href="https://lahuman.github.io/20231012/" rel="alternate" type="text/html" title="일하기 싫다." /><published>2023-10-12T00:00:00+00:00</published><updated>2023-10-12T00:00:00+00:00</updated><id>https://lahuman.github.io/20231012</id><content type="html" xml:base="https://lahuman.github.io/20231012/">&lt;h1 id=&quot;이해-관계자와의-소통이-쉽지-않네요&quot;&gt;이해 관계자와의 소통이 쉽지 않네요.&lt;/h1&gt;

&lt;p&gt;주말에는 개인 개발이나 신나게 해야겠습니다.&lt;/p&gt;

&lt;p&gt;힘들땐 개발만큰 재미난게 없네요.&lt;/p&gt;

&lt;p&gt;주말이나 연휴동안 개인 프로젝트 개발만 신나게 했습니다.&lt;/p&gt;</content><author><name></name></author><category term="PM" /><summary type="html">개발이 싫은게 아니라, 지금 하는 업무가 싫다.</summary></entry><entry><title type="html">2. 휴일 확인 REST API</title><link href="https://lahuman.github.io/holiday_api_02/" rel="alternate" type="text/html" title="2. 휴일 확인 REST API" /><published>2023-10-11T00:00:00+00:00</published><updated>2023-10-11T00:00:00+00:00</updated><id>https://lahuman.github.io/holiday_api_02</id><content type="html" xml:base="https://lahuman.github.io/holiday_api_02/">&lt;h1 id=&quot;휴일-확인-api&quot;&gt;휴일 확인 API&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;해당 API에서는 미래 년도 3년치의 데이터만 제공합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;년도-기준-공휴일-정보-제공&quot;&gt;년도 기준 공휴일 정보 제공&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;주소 : https://lahuman.vercel.app/api/holidays/${year}&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;예제&quot;&gt;예제&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-XGET&lt;/span&gt; https://lahuman.vercel.app/api/holidays/2025
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;holidays&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;1월1일&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250101
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;설날&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250128
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;설날&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250129
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;설날&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250130
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;삼일절&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250301
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;대체공휴일&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250303
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;부처님오신날&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250505
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;대체공휴일&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250506
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;현충일&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250606
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;광복절&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20250815
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;추석&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20251005
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;추석&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20251006
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;추석&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20251007
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;대체공휴일&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20251008
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;한글날&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20251009
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;기독탄신일&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: 20251225
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;날짜-기준-휴일-여부&quot;&gt;날짜 기준 휴일 여부&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;단순하게 휴일 여부(주말 포함)만 확인합니다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;주소 : https://lahuman.vercel.app/api/isHoliday/${date}&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;예제-1&quot;&gt;예제&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-XGET&lt;/span&gt; https://lahuman.vercel.app/api/isHoliday/20250505
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;holiday&quot;&lt;/span&gt;:true&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;마치며&quot;&gt;마치며&lt;/h2&gt;

&lt;p&gt;이번에 작업을 하면서 batch 처리를 git action을 사용해보았는데, 세상이 참 좋다는 생각을 했습니다.&lt;/p&gt;

&lt;p&gt;무료로 사용할 수 있는 것들이 정말 많아졌네요!&lt;/p&gt;</content><author><name></name></author><category term="holiday" /><category term="api" /><summary type="html">개발 완료! 사용법 문서</summary></entry><entry><title type="html">1. 휴일 확인 REST API 설계</title><link href="https://lahuman.github.io/holiday_api_01/" rel="alternate" type="text/html" title="1. 휴일 확인 REST API 설계" /><published>2023-10-06T00:00:00+00:00</published><updated>2023-10-06T00:00:00+00:00</updated><id>https://lahuman.github.io/holiday_api_01</id><content type="html" xml:base="https://lahuman.github.io/holiday_api_01/">&lt;h1 id=&quot;휴일-여뷰를-확인해주는-api를-매번-찾느니-하나-만들자&quot;&gt;휴일 여뷰를 확인해주는 API를 매번 찾느니, 하나 만들자!&lt;/h1&gt;

&lt;h2 id=&quot;임시-공휴일-등-매년-변경되는-휴일은-어떻게-알-수-있는데&quot;&gt;임시 공휴일 등, 매년 변경되는 휴일은 어떻게 알 수 있는데?&lt;/h2&gt;

&lt;p&gt;공공 데이터 포털에서 제공하는 오픈 API인 &lt;a href=&quot;https://www.data.go.kr/tcs/dss/selectApiDataDetailView.do?publicDataPk=15012690&quot;&gt;한국천문연구원_특일 정보&lt;/a&gt; 를 활용하면 해당 년도의 휴일을 가져올 수 있습니다. 
이를 이용해서 최근 2년치 휴일 정보를 업데이트 할 예정입니다&lt;/p&gt;

&lt;h2 id=&quot;어떻게-구성-할-껀데&quot;&gt;어떻게 구성 할 껀데?&lt;/h2&gt;

&lt;p&gt;크게 2가지 API로 제공 예정입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;년도 기준 휴일 정보 제공&lt;/li&gt;
  &lt;li&gt;년월일 기준 휴일 여부 제공&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;응답 형식은 JSON 형식으로 제공 예정입니다.&lt;/p&gt;

&lt;h2 id=&quot;어디에-데이터를-적재할껀데&quot;&gt;어디에 데이터를 적재할껀데?&lt;/h2&gt;

&lt;p&gt;따로 서버를 구성하지 않고 이전 프로젝트에서 사용한 fly.io의 pocketbase를 활용할 예정입니다.&lt;/p&gt;

&lt;p&gt;firebase를 이용해보려고 했지만, document에 접근 하기 위해서는 권한 설정이 필요해서 이번엔 pocketbase로 처리 합니다.&lt;/p&gt;

&lt;h2 id=&quot;어떻게-동작하는데&quot;&gt;어떻게 동작하는데?&lt;/h2&gt;

&lt;p&gt;매일 1회 아래와 같이 공공 데이터 포털에서 데이터를 조회 후 새로 적재 예정입니다.&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt; 
graph TD;
    A[휴일] --&amp;gt;|공공데이터포털| B(가져오기);
    B --&amp;gt; C{성공};
    C --&amp;gt;|성공| D(올해/내년 데이터 조회);
    C --&amp;gt;|실패| E[종료];
    D --&amp;gt; F(올해 / 내년 데이터 삭제);
    F --&amp;gt; G(올해 / 내년 데이터 적재);
    G --&amp;gt; E;
&lt;/div&gt;

&lt;h2 id=&quot;데이터-적재를-실행을-어디서-할껀데&quot;&gt;데이터 적재를 실행을 어디서 할껀데?&lt;/h2&gt;

&lt;p&gt;github의 action을 이용해서 일일 배치를 만들어볼 예정입니다.&lt;/p&gt;

&lt;h2 id=&quot;언어는-무엇을-사용할껀데&quot;&gt;언어는 무엇을 사용할껀데?&lt;/h2&gt;

&lt;p&gt;이번에 1.0으로 릴리즈한 &lt;a href=&quot;https://bun.sh/&quot;&gt;bun&lt;/a&gt;을 활용해볼 예정입니다!&lt;/p&gt;</content><author><name></name></author><category term="holiday" /><category term="api" /><summary type="html">프로젝트마다 한번씩 사용하는 휴일 처리를 API로 제공하자!</summary></entry><entry><title type="html">Pocketbase</title><link href="https://lahuman.github.io/pocketbase/" rel="alternate" type="text/html" title="Pocketbase" /><published>2023-09-22T00:00:00+00:00</published><updated>2023-09-22T00:00:00+00:00</updated><id>https://lahuman.github.io/pocketbase</id><content type="html" xml:base="https://lahuman.github.io/pocketbase/">&lt;h1 id=&quot;간단하게-pocketbase를-flyio에-올리는-방법을-설명합니다&quot;&gt;간단하게 Pocketbase를 fly.io에 올리는 방법을 설명합니다.&lt;/h1&gt;

&lt;h2 id=&quot;flyio-설치-및-가입&quot;&gt;fly.io 설치 및 가입&lt;/h2&gt;

&lt;h3 id=&quot;1-설치&quot;&gt;1. 설치&lt;/h3&gt;

&lt;p&gt;다음 명령어로 쉽게 설치가 가능합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Windows:&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;iwr https://fly.io/install.ps1 &lt;span class=&quot;nt&quot;&gt;-useb&lt;/span&gt; | iex
&lt;span class=&quot;c&quot;&gt;# Linux&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; https://fly.io/install.sh | sh
&lt;span class=&quot;c&quot;&gt;# Mac&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install flyctl
&lt;span class=&quot;c&quot;&gt;# or&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; https://fly.io/install.sh | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-가입&quot;&gt;2. 가입&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;웹 브라우저가 뜨고 신규 가입을 진행합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;flyctl auth signup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-로그인&quot;&gt;3. 로그인&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;가입 정보로 로그인 처리&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;flyctl auth login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-파일-생성&quot;&gt;docker 파일 생성&lt;/h2&gt;

&lt;p&gt;fly.io 에서 실행될 dockerfile을 생성합니다.&lt;/p&gt;

&lt;h3 id=&quot;1-작업-디렉터리-생성&quot;&gt;1. 작업 디렉터리 생성&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 작업 디렉터리 생성&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir project
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;project
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-docker-파일-생성&quot;&gt;2. docker 파일 생성&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;2023.09.26 기준 &lt;code class=&quot;highlighter-rouge&quot;&gt;0.18.8&lt;/code&gt;이 최신 버전입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
FROM alpine:latest

ARG &lt;span class=&quot;nv&quot;&gt;PB_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.18.8

RUN apk add &lt;span class=&quot;nt&quot;&gt;--no-cache&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    unzip &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    ca-certificates &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    openssh

&lt;span class=&quot;c&quot;&gt;# download and unzip PocketBase&lt;/span&gt;
ADD https://github.com/pocketbase/pocketbase/releases/download/v&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PB_VERSION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/pocketbase_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PB_VERSION&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;_linux_amd64.zip /tmp/pb.zip
RUN unzip /tmp/pb.zip &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; /pb/

EXPOSE 8080

&lt;span class=&quot;c&quot;&gt;# start PocketBase&lt;/span&gt;
CMD &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/pb/pocketbase&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;serve&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;--http=0.0.0.0:8080&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-fly-앱-생성&quot;&gt;3. fly 앱 생성&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;fly launch
Creating app &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /Users/k/project
Scanning &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;code
Detected a Dockerfile app
? Choose an app name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;leave blank to generate one&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: you2
automatically selected personal organization: Daniel
Some regions require a paid plan &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;bom, fra, maa&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
See https://fly.io/plans to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;up a plan.

? Choose a region &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;deployment: Tokyo, Japan &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;nrt&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
App will use &lt;span class=&quot;s1&quot;&gt;'nrt'&lt;/span&gt; region as primary

Created app &lt;span class=&quot;s1&quot;&gt;'you2'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;organization &lt;span class=&quot;s1&quot;&gt;'personal'&lt;/span&gt;
Admin URL: https://fly.io/apps/you2
Hostname: you2.fly.dev
? Would you like to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;up a Postgresql database now? No
? Would you like to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;up an Upstash Redis database now? No
Wrote config file fly.toml
? Would you like to deploy now? No &lt;span class=&quot;c&quot;&gt;# fly.toml 파일만 생성하고, 실제 deploy 하지 않는다.&lt;/span&gt;
Validating /Users/k/DEV/pocketBase/project/fly.toml
Platform: machines
✓ Configuration is valid
Your app is ready! Deploy with &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;flyctl deploy&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 생성된 fly.toml 파일에서 자동 정지 부분을 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;로 수정합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;you2&quot;&lt;/span&gt;
primary_region &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;nrt&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;build]
  &lt;span class=&quot;nv&quot;&gt;PB_VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.18.8&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# mounts 추가&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mounts]
  destination &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/pb/pb_data&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pb_data&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;http_service]
  internal_port &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 8080
  force_https &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
  &lt;/span&gt;auto_stop_machines &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false
  &lt;/span&gt;auto_start_machines &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
  &lt;/span&gt;min_machines_running &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
  processes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;app&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# 추가&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;http_service.concurrency]
    &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;requests&quot;&lt;/span&gt;
    soft_limit &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 500
    hard_limit &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 550
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-fly-배포&quot;&gt;4. fly 배포&lt;/h3&gt;

&lt;p&gt;먼저 디스크를 생성 합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;fly volumes create pb_data &lt;span class=&quot;nt&quot;&gt;--size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
 Warning! Individual volumes are pinned to individual hosts. You should create two or more volumes per application. You will have downtime &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;you only create one. Learn more at https://fly.io/docs/reference/volumes/
? Do you still want to use the volumes feature? Yes
Some regions require a paid plan &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;bom, fra, maa&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
See https://fly.io/plans to &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;up a plan.

? Select region: Tokyo, Japan &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;nrt&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        ID: vol_dfdfaefedfzz
      Name: pb_data
       App: you2
    Region: nrt
      Zone: fe01
   Size GB: 1
 Encrypted: &lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;Created at: 22 Sep 23 02:31 UTC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 배포 합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;fly deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 다음 주소로 접근하면 접근이 됩니다.&lt;/p&gt;

&lt;p&gt;https://{앱명}.fly.dev/&lt;/p&gt;

&lt;h2 id=&quot;관리자-화면-접근&quot;&gt;관리자 화면 접근&lt;/h2&gt;

&lt;p&gt;가장 먼저 다음의 관리자 화면에서 비밀번호를 설정하세요!&lt;/p&gt;

&lt;p&gt;https://{앱명}.fly.dev/_&lt;/p&gt;

&lt;p&gt;이후 활용 하면 되니다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pocketbase.io/&quot;&gt;PocketBase&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.to/marselit/build-and-deploy-a-pocketbase-project-oi4&quot;&gt;Build and deploy a Pocketbase project with Docker and Fly.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mycodings.fly.dev/blog/2023-09-09-build-my-own-pocketbase-server-on-flyio&quot;&gt;PocketBase 활용법 1탄. 나만의 pocketbase 서버 만들기 in Fly.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="pocketbase" /><category term="opensource" /><summary type="html">토이프로젝트의 API는 이걸로 끝!</summary></entry><entry><title type="html">평가 시스템 구축</title><link href="https://lahuman.github.io/human_rating/" rel="alternate" type="text/html" title="평가 시스템 구축" /><published>2023-09-21T00:00:00+00:00</published><updated>2023-09-21T00:00:00+00:00</updated><id>https://lahuman.github.io/human_rating</id><content type="html" xml:base="https://lahuman.github.io/human_rating/">&lt;h1 id=&quot;평가-시스템-구축&quot;&gt;평가 시스템 구축&lt;/h1&gt;

&lt;h2 id=&quot;why&quot;&gt;Why??&lt;/h2&gt;

&lt;p&gt;평가의 당위성은 개인 및 조직의 성과 향상, 개발 기회 제공, 조직 문화 강화, 리더십 발전 등 다양한 이점을 제공하며, 이를 통해 조직의 효율성과 효과성을 향상시킬 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;360도 피드백: 평가는 주로 360도 피드백 과정의 일부로 활용됩니다. 이는 개별 직원의 역량과 성과를 면밀히 평가하고 발전시키기 위한 방법입니다. 평가를 통해 다양한 관점에서의 피드백을 얻어 자신의 강점과 약점을 파악할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;객관성과 균형성: 평가는 주관적인 평가와 달리 객관적인 데이터를 제공할 수 있습니다. 여러 동료의 의견을 종합하면 개인적인 편향을 줄이고 조직 내에서 공평한 평가가 이루어질 가능성이 높아집니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;성과 개선: 평가는 개인 및 팀의 성과를 개선하기 위한 중요한 당위성을 가집니다. 동료의 피드백을 통해 개인과 팀이 어떻게 더 나은 방향으로 나아갈 수 있는지에 대한 힌트를 얻을 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;개발 기회 제공: 평가는 개인 개발과 성장을 위한 기회를 제공합니다. 동료들의 의견을 토대로 개인적인 학습과 발전 계획을 수립하고 향상된 역량을 개발할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;조직 문화 강화: 평가는 조직 내 협력과 업무 환경을 개선하는데 도움을 줄 수 있습니다. 동료 간 소통과 협력을 강화하고 조직 문화의 개선에 기여할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리더십 개발: 리더나 매니저에 대한 평가는 리더십 스킬의 발전을 위해 중요합니다. 동료들의 평가를 통해 리더는 자신의 리더십 스타일을 평가하고 개선할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;사용-기술&quot;&gt;사용 기술&lt;/h2&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pocketbase.io/&quot;&gt;PocketBase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://pocketbase.io/&quot;&gt;PocketBase&lt;/a&gt;는 실시간 구독, 내장된 인증 관리, 편리한 대시보드 UI, 간단한 REST 방식의 API를 갖춘 임베디드 데이터베이스(SQLite)로 구성된 오픈 소스 백엔드입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;web&quot;&gt;WEB&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nextjs.org/&quot;&gt;nextjs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://vercel.com/&quot;&gt;vercel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://nextjs.org/&quot;&gt;nextjs&lt;/a&gt;로 개발하고 &lt;a href=&quot;https://vercel.com/&quot;&gt;vercel&lt;/a&gt;에 배포 했습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;마치며&quot;&gt;마치며,&lt;/h2&gt;

&lt;p&gt;동료들에게 나에 대한 평가를 요청 드렸습니다&lt;/p&gt;

&lt;p&gt;결과는&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/human_rating.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;평균 3.5를 넘어서 아직까진 잘하고 있구나라는 생각을 하게 되네요! :)&lt;/p&gt;

&lt;h2 id=&quot;바로가기&quot;&gt;바로가기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lahuman/human-rating&quot;&gt;UI 소스코드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="rating" /><summary type="html">평가가 왜 필요할까요?</summary></entry><entry><title type="html">Redis scan 사용법</title><link href="https://lahuman.github.io/redis_scan/" rel="alternate" type="text/html" title="Redis scan 사용법" /><published>2023-09-14T00:00:00+00:00</published><updated>2023-09-14T00:00:00+00:00</updated><id>https://lahuman.github.io/redis_scan</id><content type="html" xml:base="https://lahuman.github.io/redis_scan/">&lt;h1 id=&quot;redis-scan-사용-삽질기&quot;&gt;Redis scan 사용 삽질기&lt;/h1&gt;

&lt;p&gt;redis는 싱글쓰레드 구조로 &lt;code class=&quot;highlighter-rouge&quot;&gt;keys&lt;/code&gt;의 사용을 지양합니다.&lt;/p&gt;

&lt;p&gt;따라서 대부분의 가이드에서 &lt;a href=&quot;https://redis.io/commands/scan/&quot;&gt;SCAN&lt;/a&gt;을 사용하도록 합니다.&lt;/p&gt;

&lt;p&gt;대량의 자료가 있는 redis에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;scan&lt;/code&gt;을 이용할 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt; 와 &lt;code class=&quot;highlighter-rouge&quot;&gt;cursor&lt;/code&gt;를 잘 조절해야 합니다.&lt;/p&gt;

&lt;p&gt;아래와 같이 loop를 돌면서 조회를 처리 해야 모든 데이터를 확인 가능합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ioredis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a Redis client&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Replace with your Redis server's host&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// Replace with your Redis server's port&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Function to find keys matching a pattern&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findKeysMatchingPattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Start with cursor '0'&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;matchingKeys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Perform the SCAN operation with the specified pattern&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'MATCH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Update the cursor and add the matching keys to the array&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;matchingKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Continue until cursor is '0'&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;matchingKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Example usage&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'user:*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Replace with your desired pattern&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;findKeysMatchingPattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Matching Keys:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Error:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Close the Redis connection when done&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ioredis&lt;/code&gt;모듈에서는 위의 처리를 &lt;a href=&quot;https://github.com/redis/ioredis#streamify-scanning&quot;&gt;Streamify Scanning&lt;/a&gt;이라는 메소드를 제공하여 좀 더 단순하게 처리 하도록 지원합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ioredis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// Function to find keys matching a pattern&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findKeysMatchingPattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scanStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'string'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resultKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resultKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'end'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Example usage&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'user:*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Replace with your desired pattern&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;findKeysMatchingPattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Matching Keys:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Error:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Close the Redis connection when done&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;



&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;기본적인 &lt;code class=&quot;highlighter-rouge&quot;&gt;scan&lt;/code&gt; 명령어를 이용해서 처리 하는 방법과, &lt;code class=&quot;highlighter-rouge&quot;&gt;stream&lt;/code&gt;을 이용하는 방법을 상황에 따라 적절하게 사용하면 좋을듯 합니다! :)&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.kakao.com/2016/03/11/redis-scan/&quot;&gt;Redis의 SCAN은 어떻게 동작하는가?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://redis.io/commands/scan/&quot;&gt;SCAN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/redis/ioredis#streamify-scanning&quot;&gt;Streamify Scanning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="redis" /><category term="scan" /><category term="scanstream" /><summary type="html">scanStream으로 변경 처리</summary></entry></feed>