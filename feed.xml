<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://lahuman.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.8.4">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2019-01-27T12:35:37+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html"></title><link href="https://lahuman.github.io/2019-01-23-vue_method_this/" rel="alternate" type="text/html" title="" /><published>2019-01-27T12:35:37+09:00</published><updated>2019-01-27T12:35:37+09:00</updated><id>https://lahuman.github.io/2019-01-23-vue_method_this</id><content type="html" xml:base="https://lahuman.github.io/2019-01-23-vue_method_this/">&lt;h1 id=&quot;how-to-fix-this-is-undefined-in-vue&quot;&gt;How to fix “this is undefined” in Vue.&lt;/h1&gt;

&lt;p&gt;Vue를 써보고 있는데, Vue 안에 method를 선언하고 this를 호출하니 undefined가 발생하였다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export default {
  methods: {
    sayHello: () =&amp;gt; {
    	this.val = 'hello';
    	console.log(this.val);
    }
  },
  data() {
	  return {
	  	val: ''
	  }
  }
}

#### 결과
this is undefined
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;원인을 찾아 보니 다음과 같은 내용을 확인했다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you try to access this from inside of an arrow function that’s on a Vue component, you’ll get an error because this doesn’t exist!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Vue 구성 요소에있는 화살표 함수 내부에서 this에 액세스하려고 하면 존재하지 않기 때문에 오류가 발생합니다!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Vue 구성 요소 안에서 this를 사용하려면 화살표 함수를 사용하지 말아야 한다는 내용이다. 다음과 같이 수정하면 잘 동작한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export default {
  methods: {
    sayHello() {
    	this.val = 'hello';
    	console.log(this.val);
    }
  },
  data() {
	  return {
	  	val: ''
	  }
  }
}

#### 결과
hello
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;화살표 함수는 익명 함수를 만들때 사용하며, 다음과 같은 이유로 사용됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;보다 짧고 응축된 구문&lt;/li&gt;
  &lt;li&gt;향상된 가독성&lt;/li&gt;
  &lt;li&gt;this 주변상황에서 취해진다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vue의 method 내부에서 사용하는 것은 크게 문제가 없지만, method 자체를 화살표 함수로 선언할 경우 this를 사용할 수 없다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Vue 내부에서 화살표 함수 사용 예
data() {
  return {
    match: 'This is a message',
  };
},
computed: {
  filteredMessages(messages) {
    console.log(this); // Our Vue component
    
    const filteredMessages = messages.filter(
      // References our Vue Component
      (message) =&amp;gt; message.includes(this.match)
    );
    
    return filteredMessages;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://michaelnthiessen.com/this-is-undefined/&quot;&gt;How to fix “this is undefined” in Vue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title type="html">How To Use Winston to Log Node.js Applications</title><link href="https://lahuman.github.io/winston_app-root-path/" rel="alternate" type="text/html" title="How To Use Winston to Log Node.js Applications" /><published>2019-01-21T00:00:00+09:00</published><updated>2019-01-21T00:00:00+09:00</updated><id>https://lahuman.github.io/winston_app-root-path</id><content type="html" xml:base="https://lahuman.github.io/winston_app-root-path/">&lt;h1 id=&quot;how-to-use-winston-to-log-nodejs-applications&quot;&gt;How To Use Winston to Log Node.js Applications&lt;/h1&gt;

&lt;p&gt;간단하게 설정만 작성하는 것으로 원본자료 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-winston-to-log-node-js-applications&quot;&gt;How To Use Winston to Log Node.js Applications&lt;/a&gt;을 보세요.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var appRoot = require('app-root-path');
var winston = require('winston');

// define the custom settings for each transport (file, console)
var options = {
  file: {
    level: 'info',
    filename: `${appRoot}/logs/app.log`,
    handleExceptions: true,
    json: true,
    maxsize: 5242880, // 5MB
    maxFiles: 5,
    colorize: false,
  },
  console: {
    level: 'debug',
    handleExceptions: true,
    json: false,
    colorize: true,
  },
};

// instantiate a winston.createLogger with the settings defined above
var logger = winston.createLogger({
  transports: [
    new winston.transports.File(options.file),
    new winston.transports.Console(options.console)
  ],
  exitOnError: false, // do not exit on handled exceptions
});

// create a stream object with a 'write' function that will be used by `morgan`
logger.stream = {
  write: function(message, encoding) {
    // use the 'info' log level so the output will be picked up by both transports (file and console)
    logger.info(message);
  },
};

module.exports = logger;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;요렇게 설정만 해놓아도 기본으로 사용이 가능하다.&lt;/p&gt;

&lt;p&gt;추가로 알게된 &lt;a href=&quot;https://www.npmjs.com/package/app-root-path&quot;&gt;App Root Path Module&lt;/a&gt; 도 꽤 유용해보인다.&lt;/p&gt;

&lt;p&gt;app의 root path를 제공하여 다음과 같이 사용할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#1 
var appRoot = require('app-root-path');
var myModule = require(appRoot + '/lib/my-module.js');

#2
var reqlib = require('app-root-path').require;
var myModule = reqlib('/lib/my-module.js');

#3
// In app.js
global.reqlib = require('app-root-path').require;
 
// In lib/module/component/subcomponent.js
var myModule = reqlib('/lib/my-module.js');

#4
var myModulePath = require('app-root-path').resolve('/lib/my-module.js');
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;좋은게 많은데 몰라서 못쓴다.&lt;/p&gt;

&lt;p&gt;공부 많이 좀 해야겠다. 요즘 게을러져서 공부도 안하고 그냥 날로 먹을라고 한다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-winston-to-log-node-js-applications&quot;&gt;How To Use Winston to Log Node.js Applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/app-root-path&quot;&gt;App Root Path Module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="nodejs" /><category term="winston" /><summary type="html">winston 설정을 하다 찾은 추가 모듈까지 설명</summary></entry><entry><title type="html">구글 콜라보에서 제공하는 주피터 노트북</title><link href="https://lahuman.github.io/20190119/" rel="alternate" type="text/html" title="구글 콜라보에서 제공하는 주피터 노트북" /><published>2019-01-19T00:00:00+09:00</published><updated>2019-01-19T00:00:00+09:00</updated><id>https://lahuman.github.io/20190119</id><content type="html" xml:base="https://lahuman.github.io/20190119/">&lt;p&gt;#함께 일하시는 분이 주피터 노트북을 사용하는 것을 보았다.&lt;/p&gt;

&lt;p&gt;요청사항에 대하여 크롤링하고 간단하게 화면에 통계를 뽑는 것을 주피터를 이용하여 뚝딱 하는 모습을 보았다.&lt;/p&gt;

&lt;p&gt;존멋! 나도 해보고 싶어서 요청 드려서 배웠다.&lt;/p&gt;

&lt;p&gt;일단 &lt;a href=&quot;https://colab.research.google.com&quot;&gt;구글 콜라보&lt;/a&gt;에서 새로운 프로젝트를 생성한다.&lt;/p&gt;

&lt;p&gt;필요한 모듈의 설치는 느낌펴(!)를 붙여서 설치하며 절차 지향적으로 프로그램을 작성한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#모듈 설치
!pip install pandas
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;값을 확인하고 싶으면 그냥 해당 변수를 쓴다(약간 matlab 같은 느낌이다.)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;a = &quot;hello&quot;
# 이렇게 하면 출력 된다.
a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파이썬을 이용한 머신러닝, 딥러닝 실전 개발 입문 이라는 책에서 나오는 예제를 돌려 보았다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
from sklearn import svm
xor_data = [
    #P, Q, result
    [0,0,0],
    [0,1,1],
    [1,0,1],
    [1,1,0]
]

data = []
label = []
for row in xor_data:
  p = row[0]
  q = row[1]
  r = row[2]
  data.append([p,q])
  label.append(r)

clf = svm.SVC()
clf.fit(data, label)

pre = clf.predict(data)
print(&quot;예측결과&quot;, pre)

ok = 0; total = 0
for idx , answer in enumerate(label):
  p = pre[idx]
  if p == answer: 
    ok += 1
  total += 1
  
print(&quot;정답율:&quot;, ok, '/', total, &quot;=&quot;, ok/total)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;잘된다. 자주 써주마!&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jupyter.org/&quot;&gt;주피터&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://colab.research.google.com&quot;&gt;구글 콜라보&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="단상" /><summary type="html">이거물건일세!</summary></entry><entry><title type="html">사람이 점점 뻔뻔하고 말이 너무 많아진다.</title><link href="https://lahuman.github.io/20190112/" rel="alternate" type="text/html" title="사람이 점점 뻔뻔하고 말이 너무 많아진다." /><published>2019-01-12T00:00:00+09:00</published><updated>2019-01-12T00:00:00+09:00</updated><id>https://lahuman.github.io/20190112</id><content type="html" xml:base="https://lahuman.github.io/20190112/">&lt;p&gt;#누구 이야기냐고? 나야…&lt;/p&gt;

&lt;p&gt;요즘 함께 일하는 분에게 되도 않는 조언을 하고 있다.&lt;/p&gt;

&lt;p&gt;말하고 나서 뒤돌아서면, 괜한 오지랍 같다.&lt;/p&gt;

&lt;p&gt;내 앞가림이나 잘하고 살자.&lt;/p&gt;

&lt;p&gt;그리고 말좀 적게 해라 이놈아!!!&lt;/p&gt;

&lt;h2 id=&quot;넌-말이-너무-많아&quot;&gt;넌 말이 너무 많아&lt;/h2&gt;</content><category term="단상" /><summary type="html">잘 익은 벼일수록 고개를 숙인다는데...</summary></entry><entry><title type="html">이번에 진행한 refactoring 코드 일부 공유</title><link href="https://lahuman.github.io/refactoring_javascript/" rel="alternate" type="text/html" title="이번에 진행한 refactoring 코드 일부 공유" /><published>2019-01-10T00:00:00+09:00</published><updated>2019-01-10T00:00:00+09:00</updated><id>https://lahuman.github.io/refactoring_javascript</id><content type="html" xml:base="https://lahuman.github.io/refactoring_javascript/">&lt;h1 id=&quot;이번에-함께-일하시는-분의-코드를-리펙토링하며-의견을-나누었다&quot;&gt;이번에 함께 일하시는 분의 코드를 리펙토링하며 의견을 나누었다.&lt;/h1&gt;

&lt;p&gt;이번에 함께 일하는 분의 코드 리펙토링을 진행 하였다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;linkClass=331531&amp;amp;barcode=9791160500783&quot;&gt;유지보수 가능한 코딩의 기술 자바편&lt;/a&gt;의 내용을 기준으로 리펙토링을 하였다.&lt;/p&gt;

&lt;p&gt;하나의 메소드를 15라인을 넘지 않도록 하고 결과를 확인하니, 너무 세분화 하여 쪼갠 느낌이다.&lt;/p&gt;

&lt;p&gt;하나의 메소드는 하나의 역활만 하도록 하고, 중복된 코드가 없도로 했다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const __DEFAULT_SELECTBOX_STR = &quot;선택해주세요&quot;;
const __ORDER_SELECT_BOX = ['cls-l', 'cls-m', 'cls-s', 'cls-d'];

const removeAllOptions = (isRemove, target) =&amp;gt; {
    if(isRemove){
        target.find('option').remove();
        target.append(new Option(__DEFAULT_SELECTBOX_STR, &quot;&quot;));
    }
}

const resetSubSelectBoxOption = (target_id) =&amp;gt; {
    let target_obj;
    let isResetSelectBox = false;
    __ORDER_SELECT_BOX.forEach(v =&amp;gt; {
        target_obj = $(&quot;#&quot;+v);
        if(v === target_id){
            isResetSelectBox = true;
        }
        removeAllOptions(isResetSelectBox, target_obj);
    });
}

const setClassification = (target, val, level) =&amp;gt; {
    callClassification({'upper_prd_cls_cd' : val, 'cls_lvl_no' : level}, (res)=&amp;gt;{
        res.forEach(element =&amp;gt; {
            target.append(new Option(element.PRD_CLS_NM, element.PRD_CLS_CD));
        });
    }); 
}

const setSubSelectBoxOption = ($target, val, level) =&amp;gt; {
    resetSubSelectBoxOption($target.attr(&quot;id&quot;));
    if (val === &quot;&quot;) return;
    setClassification($target, val, level);
}

const setInitValue4SelectBox = (target, i) =&amp;gt; {
    removeAllOptions(true, target);
    if (i === 0){
        setClassification(target, &quot;&quot;, 1);
    }
}

const bindEventOnSelectBox = (target, i) =&amp;gt; {
    if (i !== (__ORDER_SELECT_BOX.length-1)) {
        target.change(function() {
            setSubSelectBoxOption($(&quot;#&quot;+__ORDER_SELECT_BOX[i+1]), $(this).val(), (i+2));
        });
    }
}

const initSelectBox = () =&amp;gt; {
    __ORDER_SELECT_BOX.forEach((o, i) =&amp;gt; {
        let target = $(&quot;#&quot;+o);
        setInitValue4SelectBox(target, i);
        bindEventOnSelectBox(target, i);
    });  
    
}

$(document).ready(function() {
    initSelectBox();  
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mergely.com/TFa7VWc4/&quot;&gt;전체 diff로 원본 소스와 리펙토링된 소스 비교&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이후 처리로 ESLINT와 TDD를 샘플링 해볼 예정이다.&lt;/p&gt;

&lt;h2 id=&quot;한걸음-한걸음씩&quot;&gt;한걸음 한걸음씩&lt;/h2&gt;</content><category term="refactoring" /><summary type="html">잘해서라기 보다는 이런 방식의 리팩토링을 한다는 차원에서의 공유</summary></entry><entry><title type="html">2019년에는 어떤 프로젝트를 해볼까?</title><link href="https://lahuman.github.io/20190105/" rel="alternate" type="text/html" title="2019년에는 어떤 프로젝트를 해볼까?" /><published>2019-01-05T00:00:00+09:00</published><updated>2019-01-05T00:00:00+09:00</updated><id>https://lahuman.github.io/20190105</id><content type="html" xml:base="https://lahuman.github.io/20190105/">&lt;h1 id=&quot;sci에-게제할-논문을-작성-중인데-이건-어렵다&quot;&gt;SCI에 게제할 논문을 작성 중인데 이건… 어렵다.&lt;/h1&gt;

&lt;p&gt;내 능력 밖의 일을 억지로 하고 있는거 같다.&lt;/p&gt;

&lt;p&gt;글쓰기도 못하고 능력도 부족한데 어찌 저찌 해가고 있는거 같다.&lt;/p&gt;

&lt;p&gt;다른 프로젝트로 무엇을 만들어 볼지 생각 중이다.&lt;/p&gt;

&lt;p&gt;재미있는 아이디어가 몇개 있긴 한데 구현이 쉬운게 없다.&lt;/p&gt;

&lt;p&gt;걍 한 두시간 뚝딱해서 만들만한 일을 하고 싶은데 뭐가 있을까?&lt;/p&gt;

&lt;h2 id=&quot;2019년도-재미있게-보내자&quot;&gt;2019년도 재미있게 보내자!&lt;/h2&gt;</content><category term="단상" /><summary type="html">올해 계획까진 아니고 뭘해볼지 딩굴 딩굴 거리는 중</summary></entry><entry><title type="html">ORA-21561 OID generation failed</title><link href="https://lahuman.github.io/ora-21561_OID_generation_failed/" rel="alternate" type="text/html" title="ORA-21561 OID generation failed" /><published>2019-01-04T00:00:00+09:00</published><updated>2019-01-04T00:00:00+09:00</updated><id>https://lahuman.github.io/ora-21561_OID_generation_failed</id><content type="html" xml:base="https://lahuman.github.io/ora-21561_OID_generation_failed/">&lt;h1 id=&quot;ora-21561-oid-generation-failed&quot;&gt;ORA-21561 OID generation failed&lt;/h1&gt;

&lt;p&gt;어제까지 문제가 없었는데 갑지가 node에서 Oracle 연결시 다음과 같이 오류가 발생 하였다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; node ./bin/www
ORA-21561: OID generation failed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;검색을 해보니 호스트네임의 문제라고 한다.&lt;/p&gt;

&lt;p&gt;다음과 같이 해주면 처리가 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;127.0.0.1 $(hostname)&quot; | sudo tee -a /etc/hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 /etc/hosts에 한줄이 추가 되고 재기동 하면 접속에 성공했다는 메시지를 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; node ./bin/www
Connection was successful!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;하루에-하나-이상은-배우는-구나&quot;&gt;하루에 하나 이상은 배우는 구나!&lt;/h3&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/joeferner/node-oracle/issues/47&quot;&gt;Error : ORA-21561 OID generation failed #47&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="oracle" /><summary type="html">hostname을 추가 해야 하는 오류</summary></entry><entry><title type="html">[CentOS]서버 시작시 서비스 함께 시작 하기</title><link href="https://lahuman.github.io/server_start_with_service/" rel="alternate" type="text/html" title="[CentOS]서버 시작시 서비스 함께 시작 하기" /><published>2019-01-02T00:00:00+09:00</published><updated>2019-01-02T00:00:00+09:00</updated><id>https://lahuman.github.io/server_start_with_service</id><content type="html" xml:base="https://lahuman.github.io/server_start_with_service/">&lt;h1 id=&quot;서버-시작시-서비스-시작-하기&quot;&gt;서버 시작시 서비스 시작 하기&lt;/h1&gt;

&lt;p&gt;사용하는 웹 서비스를 서버가 재시작 되었을때, 자동으로 시작하고 싶을때 사용하는 방법이다.&lt;/p&gt;

&lt;p&gt;간단하가 스크립트를 &lt;strong&gt;/etc/rc.d/rc.local&lt;/strong&gt;에 등록하면 서버가 재기동 되었을때, 해당 스크립트가 1회 동작을 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 최초 한번은 rc.local에 실행권한을 줘야 한다.
$&amp;gt; chmod +x /etc/rc.d/rc.local

# 이후 rc.local 파일의 하단에 원하는 스크립트를 삽입 한다.
$&amp;gt; vi /etc/rc.d/rc.local
... rc.local 파일
# 스크립트 추가
nohup java -jar /home/lahuman/hello.jar &amp;amp; &amp;gt; /dev/null
... 종료

# 재기동 후 테스트
$&amp;gt; reboot now
... 재기동 후

# 서비스 확인
$&amp;gt; ps -ef | grep hello
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;추가로 실행이 root 계정으로 실행이 된다.&lt;/p&gt;

&lt;p&gt;만약 다른 계정으로 실행을 하고 싶으면/rc.local에 스크립트를 &lt;strong&gt;su 계정 -c ‘명령어’&lt;/strong&gt; 로 추가 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; vi /etc/rc.d/rc.local
... rc.local 파일
# 스크립트 추가
su lahuman -c 'nohup java -jar /home/lahuman/hello.jar &amp;amp; &amp;gt; /dev/null'
... 종료
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://serverfault.com/questions/422950/execute-script-from-rc-local-as-user-instead-of-root&quot;&gt;Execute script from rc.local as user instead of root&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.centos.org/forums/viewtopic.php?t=62865&quot;&gt;how to make /etc/rc.local run after OS first rebooted when installed with kickstart?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="centos" /><category term="startup" /><summary type="html">root가 아닌 계정으로 실행하기는 옵션</summary></entry><entry><title type="html">Maven 배포시 Local Jar 파일과 함께 하기!</title><link href="https://lahuman.github.io/maven_build_with_local_jar/" rel="alternate" type="text/html" title="Maven 배포시 Local Jar 파일과 함께 하기!" /><published>2018-12-31T00:00:00+09:00</published><updated>2018-12-31T00:00:00+09:00</updated><id>https://lahuman.github.io/maven_build_with_local_jar</id><content type="html" xml:base="https://lahuman.github.io/maven_build_with_local_jar/">&lt;h1 id=&quot;오랜만에-java로-개발-했다&quot;&gt;오랜만에 JAVA로 개발 했다.&lt;/h1&gt;

&lt;p&gt;Node에서 Oracle JDBC에 연결을 하려는데 기존 버젼과 충돌이 발생하였다.&lt;/p&gt;

&lt;p&gt;이를 해결하기 위해 기존 버젼을 변경에 따르는 사이드 임펙트를 알지 못하기에, JAVA를 이용하기로 하였다.&lt;/p&gt;

&lt;p&gt;문제는 MAVEN에서 ojdbc 관련해서 dependency를 설정해도 가져오지를 못했다.
&lt;del&gt;망할 오라클이 문제인가…&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;우여곡절 끝에 해당 jar 파일을 다운 받아 dependency를 다음과 같이 설정 하였다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# pom.xml
...생략
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;oracle&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;ojdbc6&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;11.2.0.3&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt;
    &amp;lt;systemPath&amp;gt;file://${project.basedir}/lib&amp;lt;systemPath&amp;gt;
&amp;lt;/dependency&amp;gt;
...생략
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 처리 할 경우, 패키징을 할때 해당 jar 파일이 함께 배포 되지 않는다.&lt;/p&gt;

&lt;p&gt;이럴때 쉬운 방법으로 로컬 저장소를 이용하면 된다.&lt;/p&gt;

&lt;p&gt;먼저 pom.xml에 로컬 저장소를 다음과 같이 추가한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# pom.xml
...생략
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;oracle&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;ojdbc6&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;11.2.0.3&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
...생략
&amp;lt;repositories&amp;gt;
    &amp;lt;repository&amp;gt;
        &amp;lt;id&amp;gt;local-repository&amp;lt;/id&amp;gt;
        &amp;lt;name&amp;gt;local repository&amp;lt;/name&amp;gt;
        &amp;lt;url&amp;gt;file://${project.basedir}/lib&amp;lt;/url&amp;gt;
    &amp;lt;/repository&amp;gt;
&amp;lt;/repositories&amp;gt;
...생략
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 해당 디렉토리에 jar를 다음과 같은 형태로 추가 한다.&lt;/p&gt;
&lt;figure class=&quot;half&quot;&gt;
	&lt;img src=&quot;/assets/img/post_img/local_repository.png&quot; /&gt;
	&lt;figcaption&gt;Local Repository&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 아래과 같은 형식으로 디렉토리 구조를 만들어야 한다.
lib/
  {groupId}/
    {ojdbc6}/
      {version}/
        ojdbc6-11.2.0.3.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막으로, 신나게 패키징을 하려는데 무료 IntelliJ를 써서 제대로 지원이 안되나 보다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn install spring-boot:repackage

... 생략
[ERROR] Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:2.1.1.RELEASE:repackage (default-cli) on project simple-api: Execution default-cli of goal org.springframework.boot:spring-boot-maven-plugin:2.1.1.RELEASE:repackage failed: Source file must be provided -&amp;gt; [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이걸 해결 하기 위해서 &lt;strong&gt;RUN &amp;gt; Edit Configuration&lt;/strong&gt; 창을 열어서 &lt;strong&gt;Maven Run&lt;/strong&gt;을 추가 했다.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
	&lt;img src=&quot;/assets/img/post_img/run_edit_configuration.png&quot; /&gt;
	&lt;figcaption&gt;RUN &amp;gt; Edit Configuration&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;명령어에 mvn을 넣으면 안된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;U&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;옵션은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;로컬&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리포지토리&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사용시&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;추가하는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;옵션이다&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repackage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;U&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;오늘의-삽질-끝&quot;&gt;오늘의 삽질 끝~&lt;/h3&gt;

&lt;h3 id=&quot;새해복-많이-받자&quot;&gt;새해복 많이 받자!&lt;/h3&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/17115471/intellij-mvn-package-is-behaving-differently-that-command-line&quot;&gt;IntelliJ mvn package is behaving differently that command line&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://seongtak-yoon.tistory.com/69&quot;&gt;[Maven] local jar를 dependency 추가하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="maven" /><category term="jar" /><summary type="html">이게 뭐라고 3시간 걸렸다.</summary></entry><entry><title type="html">겨울이 정말 싫다.</title><link href="https://lahuman.github.io/20181229-phase/" rel="alternate" type="text/html" title="겨울이 정말 싫다." /><published>2018-12-29T00:00:00+09:00</published><updated>2018-12-29T00:00:00+09:00</updated><id>https://lahuman.github.io/20181229-phase</id><content type="html" xml:base="https://lahuman.github.io/20181229-phase/">&lt;h1 id=&quot;올-겨울은-혼자-있어서-그런지-유난히-춥다&quot;&gt;올 겨울은 혼자 있어서 그런지 유난히 춥다.&lt;/h1&gt;

&lt;p&gt;이번주 수요일부터 들이 닥친 한파로 많이 춥다.&lt;/p&gt;

&lt;p&gt;아침에 밖에 나가다가 수도 계량기 밑으로 물이 얼어 있어서 엄청 놀라 계량기를 확인해봤는데 다행이 계량기가 언건 아니었다.
(아마도 이슬이 언거 같다.)&lt;/p&gt;

&lt;p&gt;겨울을 좋아하지 않지만 올해는 유난히 춥다.&lt;/p&gt;

&lt;p&gt;해야할것도 있지만 집중도 못하고 이러고 있다.&lt;/p&gt;

&lt;h2 id=&quot;슬프다&quot;&gt;슬프다.&lt;/h2&gt;</content><category term="단상" /><summary type="html">추워서 밖에 나가는 일 자체게 부담된다.</summary></entry></feed>
