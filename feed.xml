<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.3">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2023-04-26T01:35:24+00:00</updated><id>https://lahuman.github.io/feed.xml</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">속이 좁아 속이…</title><link href="https://lahuman.github.io/20230426/" rel="alternate" type="text/html" title="속이 좁아 속이..." /><published>2023-04-26T00:00:00+00:00</published><updated>2023-04-26T00:00:00+00:00</updated><id>https://lahuman.github.io/20230426</id><content type="html" xml:base="https://lahuman.github.io/20230426/">&lt;h1 id=&quot;나란-사람은-속이-좁다&quot;&gt;나란 사람은 속이 좁다&lt;/h1&gt;

&lt;p&gt;원래 간장종지 만한 속마음이었는데, 지금은 밥그릇 정도로 커졌다.&lt;/p&gt;

&lt;p&gt;그나마, 커졌는데 여전히 좁다.&lt;/p&gt;

&lt;p&gt;태생이 좁게 태어난건지, 욕심이 많아서 그런건지 잘 바뀌지 않는다.&lt;/p&gt;</content><author><name></name></author><category term="단상" /><summary type="html">나는 속이 좁다.</summary></entry><entry><title type="html">데이터베이스 용어 사전 구축 - 01</title><link href="https://lahuman.github.io/meta_system_01/" rel="alternate" type="text/html" title="데이터베이스 용어 사전 구축 - 01" /><published>2023-04-25T00:00:00+00:00</published><updated>2023-04-25T00:00:00+00:00</updated><id>https://lahuman.github.io/meta_system_01</id><content type="html" xml:base="https://lahuman.github.io/meta_system_01/">&lt;h1 id=&quot;데이터베이스-용어-사전-구축---01&quot;&gt;데이터베이스 용어 사전 구축 - 01&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;데이터베이스 단어 표준은 데이터베이스 관련 용어와 용어 사용을 표준화하는 시스템입니다. 데이터베이스 단어 표준은 데이터베이스 관련 문서, 코드, 메타데이터 등에서 사용되는 용어의 일관성과 품질을 향상시켜 데이터베이스 개발, 관리, 운영 등의 업무를 원활하게 수행할 수 있도록 도와줍니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;왜-단어용어-표준이-필요-할까&quot;&gt;왜 단어(용어) 표준이 필요 할까?&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;일관성 있는 용어 사용: 설계 과정에서 사용되는 용어는 다양한 이해관계자들이 이해할 수 있는 공통 용어를 사용해야 합니다. 만약 이해관계자들이 서로 다른 용어를 사용하게 된다면, 의사소통이 원활하지 않아서 설계 결과물의 품질이 떨어질 수 있습니다. 따라서 단어 표준을 사용하여 일관성 있는 용어 사용을 유지하면, 설계 결과물의 품질을 높일 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;설계 문서의 가독성 개선: 설계 문서는 다양한 이해관계자들이 함께 사용하는 문서입니다. 이러한 이유로 설계 문서는 읽기 쉽고 이해하기 쉬운 문서여야 합니다. 만약 설계 문서에서 서로 다른 용어가 사용된다면, 문서의 가독성이 떨어져 이해관계자들이 설계 결과물을 이해하는 데 어려움을 겪을 수 있습니다. 따라서 단어 표준을 사용하여 설계 문서의 가독성을 개선할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 모델링 일관성 유지: 데이터 모델링은 설계 과정에서 가장 중요한 부분입니다. 데이터 모델링에서는 다양한 개체와 속성, 관계 등이 정의되며, 이러한 요소들은 후속적인 개발 과정에서 매우 중요한 역할을 합니다. 만약 데이터 모델링에서 일관성 없는 용어가 사용된다면, 후속적인 개발 과정에서 데이터 모델링과 관련된 문제가 발생할 가능성이 높아집니다. 따라서 단어 표준을 사용하여 데이터 모델링의 일관성을 유지할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유지보수성 향상: 설계는 소프트웨어 개발의 초기 단계이며, 이후에는 유지보수가 필요합니다. 만약 설계에서 일관성 없는 용어가 사용된다면, 유지보수 단계에서 문제가 발생할 가능성이 높아집니다. 따라서 단어 표준을 사용하여 유지보수성을 향상시킬 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;표준-규칙&quot;&gt;표준 규칙&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;한글/영문은 가능하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;명사&lt;/code&gt;를 사용
    &lt;ul&gt;
      &lt;li&gt;상품, 금액, 갯수, 여부&lt;/li&gt;
      &lt;li&gt;product, price, count, yn&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영문명은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Full 단어&lt;/code&gt;로 표시&lt;/li&gt;
  &lt;li&gt;테이블의 경우 도메인_역할_타입
    &lt;ul&gt;
      &lt;li&gt;타입(접미사) : m : main, d : data, h : history&lt;/li&gt;
      &lt;li&gt;상품 도메인의 아이템 역할의 메인의 경우 : 상품_아이템_메인 =&amp;gt; product_item_m&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;표준 테이블 기본 항목
    &lt;ul&gt;
      &lt;li&gt;등록자, 등록일, 등록시스템, 수정자, 수정일, 수정시스템, 사용여부&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="meta" /><category term="system" /><summary type="html">단어, 도메인, 용어 관리 시스템 구축</summary></entry><entry><title type="html">nestjs에서 사용자 정의 validate 구현하기</title><link href="https://lahuman.github.io/nestjs_custom_validate/" rel="alternate" type="text/html" title="nestjs에서 사용자 정의 validate 구현하기" /><published>2023-04-24T00:00:00+00:00</published><updated>2023-04-24T00:00:00+00:00</updated><id>https://lahuman.github.io/nestjs_custom_validate</id><content type="html" xml:base="https://lahuman.github.io/nestjs_custom_validate/">&lt;h1 id=&quot;nestjs에서-사용자-정의-validate-구현하기&quot;&gt;nestjs에서 사용자 정의 validate 구현하기&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/class-validator&quot;&gt;class-validator&lt;/a&gt;에서는 많은 validation 조건을 제공하여 줍니다. 하지만 사용자 정의 옵션이 필요할 때가 있는데, 이때 설정이 생각보다 복잡하네요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;validatorconstraintinterface-구현-하기&quot;&gt;&lt;a href=&quot;https://github.com/typestack/class-validator#custom-validation-classes&quot;&gt;ValidatorConstraintInterface&lt;/a&gt; 구현 하기&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/class-validator&quot;&gt;class-validator&lt;/a&gt;는 &lt;a href=&quot;https://github.com/typestack/class-validator#custom-validation-classes&quot;&gt;ValidatorConstraintInterface&lt;/a&gt; interface를 구현해서 사용자 정의 validation 처리를 합니다.&lt;/p&gt;

&lt;p&gt;아래는 구현된 예제 입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidatorConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidatorConstraintInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidationArguments&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'class-validator'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ValidatorConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'customText'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CustomTextLength&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidatorConstraintInterface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidationArguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// for async validations you must return a Promise&amp;lt;boolean&amp;gt; here&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;defaultMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidationArguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// here you can provide default error message if validation failed&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Text ($value) is too short or too long!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;사용-예제&quot;&gt;사용 예제&lt;/h2&gt;

&lt;p&gt;아래는 Post 클래스의 사용자 정의 validate를 사용하는 예제입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Validate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'class-validator'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CustomTextLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./CustomTextLength'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Post&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CustomTextLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Title is too short or long!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nestjs에-적용-하기&quot;&gt;nestjs에 적용 하기&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;위와 같이 설정 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Injectable&lt;/code&gt;을 사용하면 오류를 확인 할 수 있습니다. &lt;a href=&quot;https://stackoverflow.com/questions/60062318/how-to-inject-service-to-validator-constraint-interface-in-nestjs-using-class-va&quot;&gt;How to inject service to validator constraint interface in nestjs using class-validator?&lt;/a&gt;를 참고 하면 아래와 같은 컨테이너 처리를 추가 해야 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Custom Validate&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ValidatorConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidatorConstraintInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'class-validator'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UsersService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./user.service'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Injectable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/common'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ValidatorConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'isUserAlreadyExist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Injectable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this is needed in order to the class be injected into the module&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IsUserAlreadyExist&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidatorConstraintInterface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;usersService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UsersService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;usersService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// UserModule &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/common'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UsersController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./user.controller'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UsersService&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./user.service'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IsUserAlreadyExist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./user.validator'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;controllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UsersController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;providers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IsUserAlreadyExist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UsersService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;imports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// main.ts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NestFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;useContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fallbackOnErrors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 설정하면 inject이 정상적으로 처리 되는 것을 확인 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;약간 복잡해 보이는 설정인데, 한줄씩 코드로 보면 어렵지 않습니다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/60062318/how-to-inject-service-to-validator-constraint-interface-in-nestjs-using-class-va&quot;&gt;How to inject service to validator constraint interface in nestjs using class-validator?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="nestjs" /><category term="validate" /><summary type="html">쉬운 듯 어려움</summary></entry><entry><title type="html">nestjs에서 registerAsync 사용시 isGlobal 설정</title><link href="https://lahuman.github.io/nestjs_registerAsync_isGlobal/" rel="alternate" type="text/html" title="nestjs에서 registerAsync 사용시 isGlobal 설정" /><published>2023-04-18T00:00:00+00:00</published><updated>2023-04-18T00:00:00+00:00</updated><id>https://lahuman.github.io/nestjs_registerAsync_isGlobal</id><content type="html" xml:base="https://lahuman.github.io/nestjs_registerAsync_isGlobal/">&lt;h1 id=&quot;nestjs에서-registerasync-사용시-isglobal-설정&quot;&gt;nestjs에서 registerAsync 사용시 isGlobal 설정&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;useFactory에 &lt;code class=&quot;highlighter-rouge&quot;&gt;isGlobal&lt;/code&gt;을 설정 했지만, 동작 하지 않아서 테스트 해보다 보니 위치가 아래와 같습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;imports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ConfigModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;envFilePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.env.local'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.env'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;isGlobal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;throttler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;CacheModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;isGlobal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 여기에 들어가야 한다.&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;imports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConfigModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConfigService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;useFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;configService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ConfigService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;configService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cacheConfig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 여기에 넣었다가 실패..&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;controllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;providers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppModule&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NestModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;별것도 아닌데 하루 종일 삽질 했네요.&lt;/p&gt;</content><author><name></name></author><category term="nestjs" /><category term="registerAsync" /><category term="isGlobal" /><summary type="html">isGobal 설정 삽질기</summary></entry><entry><title type="html">한 입 크기로 잘라 먹는 리액트</title><link href="https://lahuman.github.io/react_book_review/" rel="alternate" type="text/html" title="한 입 크기로 잘라 먹는 리액트" /><published>2023-04-16T00:00:00+00:00</published><updated>2023-04-16T00:00:00+00:00</updated><id>https://lahuman.github.io/react_book_review</id><content type="html" xml:base="https://lahuman.github.io/react_book_review/">&lt;h1 id=&quot;도서-서평&quot;&gt;도서 서평&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;이벤트로 도서를 받게 되었습니다. 강의로도 유명한 책이라 기대를 하고 읽었습니다. 내용은 초심자를 위한 내용으로 자바스크립트와 리액트를 처음 시작하시는 분이 보시면 좋을 내용입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/react_book.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;책-내용-요약&quot;&gt;책 내용 요약&lt;/h2&gt;

&lt;h3 id=&quot;12장-자바스크립트-기초--실전&quot;&gt;1,2장 자바스크립트 기초 &amp;amp; 실전&lt;/h3&gt;

&lt;p&gt;자바스크립트의 기초부터 시작합니다. 기초부터 시작하기 때문에 이미 알고 있는 내용이라면 빠르게 훑어보기를 추천 합니다.&lt;/p&gt;

&lt;p&gt;자바스크립트 실전에는 많이 사용되는 문법과 팁에 대하여 설명하고 있기 때문에 처음 자바스크립트를 시작하는 분들에게는 읽어 두면 좋은 내용입니다.&lt;/p&gt;

&lt;h3 id=&quot;3장-nodejs&quot;&gt;3장 Node.js&lt;/h3&gt;

&lt;p&gt;Node.js, npm, vscode 설치 방법이 간단하게 정리 되어 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;4-5-6장-리액트&quot;&gt;4, 5, 6장 리액트&lt;/h3&gt;

&lt;p&gt;4장부터는 리액트의 내용이 시작됩니다. 
사실 1~3장을 알고 있는 독자라면 4장부터 읽는 것을 추천 드립니다. 
리액트의 동작 원리와 구조 그리고 컴포넌트와 hook 등을 설명하고 예제를 보여줍니다.&lt;/p&gt;

&lt;h3 id=&quot;7-8-9-10장-프로젝트&quot;&gt;7, 8, 9, 10장 프로젝트&lt;/h3&gt;

&lt;p&gt;4~6장에서 배운 내용을 기반으로 간단한 toy 프로젝트를 진행합니다. 
프로젝트를 진행하면서 최적화에 대하여도 설명을 합니다.&lt;/p&gt;

&lt;h3 id=&quot;11장-배포&quot;&gt;11장 배포&lt;/h3&gt;

&lt;p&gt;파이어 베이스로 빌드 배포 하는 내용을 간략하게 다룹니다.&lt;/p&gt;

&lt;h2 id=&quot;총평&quot;&gt;총평&lt;/h2&gt;

&lt;p&gt;처음 자바스크립트와 리액트를 배우는 사람이 보기 좋은 책으로 추천 합니다. 다른 책들이 리액트에만 집중해서 다루었다면 이 책은 자바스크립트의 기초 부터 프로젝트 배포까지 폭넓게 다루었습니다.&lt;/p&gt;

&lt;p&gt;만약 회사 내에서 신입분들과 리액트 스터디를 하게 된다면 이 책으로 진행하면 좋겠다는 생각을 했습니다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://product.kyobobook.co.kr/detail/S000201352991&quot;&gt;도서-한입 크기로 잘라 먹는 리액트(React.js)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/winterlood-react-basic/&quot;&gt;강의-한입 크기로 잘라 먹는 리액트(React.js)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="리액트" /><category term="도서" /><summary type="html">도서 서평</summary></entry><entry><title type="html">이직 1년 5개월만에 작성하는 회고</title><link href="https://lahuman.github.io/20230412/" rel="alternate" type="text/html" title="이직 1년 5개월만에 작성하는 회고" /><published>2023-04-12T00:00:00+00:00</published><updated>2023-04-12T00:00:00+00:00</updated><id>https://lahuman.github.io/20230412</id><content type="html" xml:base="https://lahuman.github.io/20230412/">&lt;h1 id=&quot;이직-1년-후-회고&quot;&gt;이직 1년 후 회고&lt;/h1&gt;

&lt;p&gt;지난 1년 5개월 동안 GSSHOP에서 삼성화재로 이직한 후를 회고해봅니다.&lt;/p&gt;

&lt;p&gt;2021년 12월 1일에 입사하였습니다. 금융사에서 꿈을 키워나가기 위해 선택한 곳이었습니다. 내 팀을 조성하고, 팀원들과 함께 성장할 수 있는 환경을 만들어보고 싶었습니다.&lt;/p&gt;

&lt;p&gt;현재 팀원은 초기 3명에서 12명까지 늘어났고, 이전에는 주로 JAVA 프로젝트만 진행하던 곳에서는 처음으로 Node.js와 React.js를 활용한 프로젝트를 진행하고 있습니다.&lt;/p&gt;

&lt;p&gt;아쉬운 부분도 있었고, 힘든 부분도 있었지만, 적어도 한 걸음씩 나아가고 있다고 생각합니다.&lt;/p&gt;</content><author><name></name></author><category term="단상" /><category term="이직" /><category term="회고" /><summary type="html">1년이 지났을때 작성하려고 했지만, 정신이 없어서 이제 작성하네요.</summary></entry><entry><title type="html">github action으로 jekyll 빌드와 배포 하기</title><link href="https://lahuman.github.io/githubaction_jekyll_build/" rel="alternate" type="text/html" title="github action으로 jekyll 빌드와 배포 하기" /><published>2023-04-11T00:00:00+00:00</published><updated>2023-04-11T00:00:00+00:00</updated><id>https://lahuman.github.io/githubaction_jekyll_build</id><content type="html" xml:base="https://lahuman.github.io/githubaction_jekyll_build/">&lt;h1 id=&quot;github-action으로-jekyll-빌드와-배포-하기&quot;&gt;github action으로 jekyll 빌드와 배포 하기&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;다음의 단계로 배포 처리를 합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;mermaid&quot;&gt; 
graph TD;
    A[GITHUB] --&amp;gt;|설정| B(개인토큰발급);
    B --&amp;gt; C(Repository);
    C --&amp;gt;|설정| D(secret key 등록);
    D --&amp;gt;|파일생성| E(/.github/workflows/build.yml);
    E --&amp;gt; F(자동빌드배포);
&lt;/div&gt;

&lt;h2 id=&quot;설정--개인-토큰-발급&quot;&gt;설정 &amp;gt; 개인 토큰 발급&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/setting_token.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;프로필 사진&lt;/code&gt;을 클릭 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Settings&lt;/code&gt; 선택&lt;/li&gt;
  &lt;li&gt;아래 메뉴에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Developer settings&lt;/code&gt; 선택&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Personal access tokens&lt;/code&gt; 선택&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Create New tokens&lt;/code&gt; 선택 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;tokens (classic)&lt;/code&gt; 선택&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/create_token.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;이름을 설정하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;Expiration&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;No Expiration&lt;/code&gt;으로 설정
    &lt;ul&gt;
      &lt;li&gt;만료일을 설정 시 추후 변경 필요함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Select scopes&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;repo&lt;/code&gt; 선택
    &lt;ul&gt;
      &lt;li&gt;repository에 읽고 쓰고 등의 처리를 위해 필요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Generated Token&lt;/code&gt; 버튼 클릭으로 토큰 생성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/copy_token.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;토큰 복사
    &lt;ul&gt;
      &lt;li&gt;토큰 값은 다시 확인이 불가하니 꼭 잘 저장 해야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/repository_settings.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;원천 소스가 되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Repository&lt;/code&gt;로 이동&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Secrets and variables&lt;/code&gt; 선택&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Secrets&lt;/code&gt; 탭에 &lt;code class=&quot;highlighter-rouge&quot;&gt;New Repository Secret&lt;/code&gt; 선택&lt;/li&gt;
  &lt;li&gt;Name을 &lt;code class=&quot;highlighter-rouge&quot;&gt;JEKYLL_MOON&lt;/code&gt;로 만들고 Secret에 생성된 토큰 값을 붙여 넣음&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/github_workflows.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;root에 &lt;code class=&quot;highlighter-rouge&quot;&gt;.github/workflows&lt;/code&gt; 디렉토리를 생성후 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll_build-and_push.yml&lt;/code&gt; 파일을 생성&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Jekyll build and deploy&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build_and_deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;    
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Checkout source repository&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v2&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set up Node&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-node@v3&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;node-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;16.14.2&lt;/span&gt;
        
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set up Ruby&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby/setup-ruby@v1&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2.7&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3.x 로 설정시 오류 발생하여 2.7로 고정&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Cache Ruby gems&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/cache@v2&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;vendor/bundle&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$-gems-$&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;restore-keys&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;no&quot;&gt;$-gems-&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install dependencies&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;bundle config path vendor/bundle&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;bundle install --jobs 4 --retry 3&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Build Jekyll site&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec jekyll build&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deploy to target repository&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;personal_token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 생성한 token 정보 설정&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;publish_dir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./_site&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;user_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;github-actions[bot]'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;user_email&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;github-actions[bot]@users.noreply.github.com'&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;publish_branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 대상 repository branch 정보&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;external_repository&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;lahuman/lahuman.github.io'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 대상 repository&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파일 저장이 완료 되면 아래와 같이 github action이 실행됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/github_action.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2017년부터 운영 중이던 github 블로그의 빌드와 배포를 &lt;code class=&quot;highlighter-rouge&quot;&gt;github action&lt;/code&gt;을 이용해서 처리 했습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;알고 있었는데, 시도하는게 어려웠습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;오늘은 뒤로 후퇴하는게 아닌 앞으로 한 걸음 내딛었다고 생각되네요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/peaceiris/actions-gh-pages#readme&quot;&gt;actions-gh-pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="github" /><category term="jekyll" /><category term="action" /><summary type="html">github에서 commit 되면 정적 페이지 빌드와 배포 처리</summary></entry><entry><title type="html">react 에서 build 이후에 환경(dev, product 등)에 따른 상수 처리</title><link href="https://lahuman.github.io/react_env_after_build/" rel="alternate" type="text/html" title="react 에서 build 이후에 환경(dev, product 등)에 따른 상수 처리" /><published>2023-04-07T00:00:00+00:00</published><updated>2023-04-07T00:00:00+00:00</updated><id>https://lahuman.github.io/react_env_after_build</id><content type="html" xml:base="https://lahuman.github.io/react_env_after_build/">&lt;h1 id=&quot;react-에서-build-이후에-환경dev-product-등에-따른-상수-처리&quot;&gt;react 에서 build 이후에 환경(dev, product 등)에 따른 상수 처리&lt;/h1&gt;

&lt;p&gt;일반적으로 React에서의 상수는 .env를 활용해서 관리합니다.&lt;/p&gt;

&lt;p&gt;하지만, 환경에 따라 상수를 변경해야 한다면 어떻게 처리해야 할까요?&lt;/p&gt;

&lt;p&gt;정답은 build 이후에 환경 변수를 주입 할수 있게 설계 하면 됩니다.&lt;/p&gt;

&lt;p&gt;React에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; 이라는 디렉토리가 있고 이는 정적 파일을 보관하는 곳입니다. 또한 이 디렉토리에 있는 파일들은 빌드 시 자동으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; 디렉토리에 복사 되며, 브라우저에서 접근이 가능한 파일로 사용이 됩니다.&lt;/p&gt;

&lt;h3 id=&quot;전역-상수-파일-생성&quot;&gt;전역 상수 파일 생성&lt;/h3&gt;

&lt;p&gt;먼저 환경 변수는 전역값으로 처리 하기 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 전역 객체에 &lt;code class=&quot;highlighter-rouge&quot;&gt;env&lt;/code&gt;키를 이용해서 저장 합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// root 디렉토리에 키 값과 벨류 키값을 가진 _env-config.js 파일 생성&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;REACT_APP_API&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;V_REACT_APP_API&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 환경에 따라 변하지 않는 값은 여기에 넣습니다. &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;REACT_APP_API&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://lahuman.github.io
&lt;span class=&quot;nv&quot;&gt;REACT_APP_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;lahuman
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;indexhtml-수정&quot;&gt;index.html 수정&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; 디렉토리의 &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;을 아래와 같이 수정합니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
...
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;
      You need to enable JavaScript to run this app.
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 추가하는 부분 START --&amp;gt;&lt;/span&gt; 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%PUBLIC_URL%/env-config.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 추가하는 부분 END --&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;유틸-생성&quot;&gt;유틸 생성&lt;/h3&gt;

&lt;p&gt;상수를 불러오는 유틸을 만듭니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// env.ts&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;로컬 개발환경에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;window.env&lt;/code&gt;가 없을 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;process.env&lt;/code&gt;의 상수를 호출하도록 합니다.&lt;/p&gt;

&lt;h3 id=&quot;소스코드에서-사용-예제&quot;&gt;소스코드에서 사용 예제&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./env&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;App&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;REACT_APP_API&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;REACT_APP_API&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;REACT_APP_USER&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;배포&quot;&gt;배포&lt;/h3&gt;

&lt;p&gt;이후 배포시 &lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt; 명령어를 이용해서 원하는 값으로 변경합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 변경하려는 값이 환경 변수에 있다는 가정하에 아래와 같이 처리 합니다. &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 아래 명령어는 빌드 이후 실행되기 때문에, build된 디렉토리 밑으로 env-config.js 파일을 생성합니다. &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;_env-config.js  | sed &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s|V_REACT_APP_API|&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;REACT_APP_API&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;|g&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /build/env-config.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;결과-확인&quot;&gt;결과 확인&lt;/h3&gt;

&lt;iframe src=&quot;//codesandbox.io/embed/react-evn-after-build-ydqmw9?fontsize=14&amp;amp;hidenavigation=1&amp;amp;theme=dark&quot; style=&quot;width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;&quot; title=&quot;react_evn_after_build&quot; allow=&quot;accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking&quot; sandbox=&quot;allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;예제-코드-보기&quot;&gt;&lt;a href=&quot;https://codesandbox.io/s/react-evn-after-build-ydqmw9?file=/src/App.tsx&quot;&gt;예제 코드 보기&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bobbyhadz.com/blog/typescript-property-does-not-exist-on-type-window&quot;&gt;Property does not exist on type Window in TypeScript [Fixed]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="env" /><category term="react" /><summary type="html">.env로만 처리는 안되어 util을 만들어야 합니다</summary></entry><entry><title type="html">Scrum 101</title><link href="https://lahuman.github.io/scrum_101/" rel="alternate" type="text/html" title="Scrum 101 " /><published>2023-04-06T00:00:00+00:00</published><updated>2023-04-06T00:00:00+00:00</updated><id>https://lahuman.github.io/scrum_101</id><content type="html" xml:base="https://lahuman.github.io/scrum_101/">&lt;h1 id=&quot;스크럼-101&quot;&gt;&lt;strong&gt;스크럼 101&lt;/strong&gt;&lt;/h1&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/hiouN4Nagu9YTJ&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/lahuman1/101-256992956&quot; title=&quot;스크럼 101&quot; target=&quot;_blank&quot;&gt;스크럼 101&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/lahuman1&quot; target=&quot;_blank&quot;&gt;Daniel Lim&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.yes24.com/Product/Goods/115632480&quot;&gt;출근했더니 스크럼 마스터가 된 건에 관하여 - 니시무라 나오토&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;애자일-소프트웨어&quot;&gt;애자일 소프트웨어&lt;/h1&gt;

&lt;h3 id=&quot;애자일-선언문&quot;&gt;&lt;a href=&quot;https://agilemanifesto.org/iso/ko/manifesto.html&quot;&gt;애자일 선언문&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;목적을 달성하기 위해 모든 관계자가 긴밀하게 협조&lt;/li&gt;
  &lt;li&gt;한번에 전체를 완성하기 보다 조금씩 만들되, 조기에 동작시켜 피드백 받음&lt;/li&gt;
  &lt;li&gt;사용자나 관계자의 피드백을 바탕으로 결과물과 계획을 지속적으로 보완&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;스크럼&quot;&gt;스크럼&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;가치와 위험도, 필요성을 기준으로 요구사항을 정렬&lt;/li&gt;
  &lt;li&gt;순서대로 구현하며 성과를 극대화&lt;/li&gt;
  &lt;li&gt;정해진 시간 안에 작업을 완료 - 타임박스(timebox)&lt;/li&gt;
  &lt;li&gt;현재 상태와 문제점을 명확하게 밝힘 - 투명성(transparency)&lt;/li&gt;
  &lt;li&gt;개발할 제품과 진척에 이상은 없는지 수시로 확인 - 점검(inspection)&lt;/li&gt;
  &lt;li&gt;더 나은 방법으로 작업 방식 개선 - 보완(adaptation)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;3가지-역할-5가지-활동-3가지-산출물&quot;&gt;3가지 역할, 5가지 활동, 3가지 산출물&lt;/h1&gt;

&lt;p&gt;스크럼을 프레임워크라고 부르는 특징&lt;/p&gt;

&lt;h3 id=&quot;스크럼가이드--한글pdf&quot;&gt;&lt;a href=&quot;https://scrumguides.org/scrum-guide.html&quot;&gt;스크럼가이드&lt;/a&gt; :: &lt;a href=&quot;https://scrumguides.org/docs/scrumguide/v2020/2020-Scrum-Guide-Korean.pdf&quot;&gt;한글PDF&lt;/a&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;산출물-1-프로덕트-백로그&quot;&gt;산출물 #1 프로덕트 백로그&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;구현하고 싶은 것을 목록으로 만듦&lt;/li&gt;
  &lt;li&gt;항목은 언제든지 추가, 삭제 가능&lt;/li&gt;
  &lt;li&gt;우선순위에 맞춰 정렬&lt;/li&gt;
  &lt;li&gt;우선순위가 높은 항목부터 작업량을 추정&lt;/li&gt;
  &lt;li&gt;정기적으로 항목의 순서나 내용, 작업량을 보완&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;사용자-스토리&quot;&gt;사용자 스토리&lt;/h4&gt;

&lt;p&gt;제품의 요구 사항을 &lt;code class=&quot;highlighter-rouge&quot;&gt;사용자&lt;/code&gt; 관점에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;누가&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;어떤 목적으로&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;무엇을 하길 원한다&lt;/code&gt;와 같은 형식으로 작성&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;역할-1-프로덕트-오너&quot;&gt;역할 #1 프로덕트 오너&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;제품의 What을 담당&lt;/li&gt;
  &lt;li&gt;제품의 가치 극대화&lt;/li&gt;
  &lt;li&gt;1개의 제품에 1명의 프로덕트 오너&lt;/li&gt;
  &lt;li&gt;프로덕트 백로그 관리(우선순위, 완료)&lt;/li&gt;
  &lt;li&gt;개발자와 상의하되 간섭 X&lt;/li&gt;
  &lt;li&gt;이해관계자와 협업&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;프로덕트-오너-업무&quot;&gt;프로덕트 오너 업무&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;거시적 관점 계획&lt;/li&gt;
  &lt;li&gt;제품의 비전 명확히 하고 주변과 공유&lt;/li&gt;
  &lt;li&gt;제품을 만드는데 소요되는 예산 관리&lt;/li&gt;
  &lt;li&gt;프로덕트 백로그 최신 상태 업데이트&lt;/li&gt;
  &lt;li&gt;다른 사람이 프로덕트 백로그를 이해할 수 있도록 설명&lt;/li&gt;
  &lt;li&gt;이해관계자와 프로덕트 백로그를 검토하고, 납기나 구현 순서 상의&lt;/li&gt;
  &lt;li&gt;프로덕트 백로그의 각 항목이 완료 되었는지 점검&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;역할-2-디밸로퍼&quot;&gt;역할 #2 디밸로퍼&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;제품의 How를 담당&lt;/li&gt;
  &lt;li&gt;제품을 동작하게 만듦&lt;/li&gt;
  &lt;li&gt;팀원은 3 ~ 9명 정도 적절&lt;/li&gt;
  &lt;li&gt;팀원의 역량이 곧 제품 개발 능력&lt;/li&gt;
  &lt;li&gt;특수 목적의 보조 팀을 두지 않는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;기능횡단팀cross-functional-team&quot;&gt;기능횡단팀(cross functional team)&lt;/h3&gt;
&lt;p&gt;스크럼 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;요구 분석팀&lt;/code&gt; 이나, &lt;code class=&quot;highlighter-rouge&quot;&gt;테스트 팀&lt;/code&gt; 같이 특정 업무만 전담하는 보조팀을 두지 않습니다.&lt;/p&gt;

&lt;h3 id=&quot;자기-관리화self-managing&quot;&gt;자기 관리화(self-managing)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;개발자 스스로 책임지고 개발 완료&lt;/li&gt;
  &lt;li&gt;개발팀 내의 의사 결정은 개발자 상호 간의 합의&lt;/li&gt;
  &lt;li&gt;작업 방식에 대한 외부 간섭 X&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;활동-1-스프린트&quot;&gt;활동 #1 스프린트&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트를 짧은 주기로 나눠서 진행&lt;/li&gt;
  &lt;li&gt;각 주기는 같은 간격이며 1달을 넘기지 않는다&lt;/li&gt;
  &lt;li&gt;하나의 주기를 스프린트라 부름&lt;/li&gt;
  &lt;li&gt;스크럼의 활동 중 가장 큰 덩어리로 다른 4가지 활동을 포함&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;활동-2-스프린트-플래닝&quot;&gt;활동 #2 스프린트 플래닝&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;질주 계획&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;개발계획 수립을 위한 착수 회의&lt;/li&gt;
  &lt;li&gt;스프린트 기간동안 할 일을 계획&lt;/li&gt;
  &lt;li&gt;Why: 왜 하는지 생각 - &lt;strong&gt;목표&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;What: 무엇을 할지 생각 - &lt;strong&gt;일감 선택 &amp;amp; 구체화&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;How: 어떻게 할지 생각 - &lt;strong&gt;스프린트 백로그&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;산출물-2-스프린트-백로그&quot;&gt;산출물 #2 스프린트 백로그&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;프로덕트 백로그에서 작업 항목 선택&lt;/li&gt;
  &lt;li&gt;실행 가능하게 작업을 구체화&lt;/li&gt;
  &lt;li&gt;작업을 추가하거나 삭제&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;하루안에 끝나는 크기로 분할&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;산출물-3-인크리먼트&quot;&gt;산출물 #3 인크리먼트&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;이전 스프린트의 결과물에 이번 스프린트의 작업 결과가 더한 개발의 증가분 의미하며, 결과물은 소프트웨어이고 스프린트 종료 시점에 점검하도록 동작 가능한 상태여야 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;개발자는 백로그를 작업한 결과로 동작하는 제품을 만듦&lt;/li&gt;
  &lt;li&gt;이전 스프린트의 결과물에 이번 스프린트의 결과물이 더해 짐&lt;/li&gt;
  &lt;li&gt;결과물은 릴리스 여부와 상관없이 동작하고 점검받을 수 있어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;완료-조건예제&quot;&gt;완료 조건(예제)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;위키 문서에 제품 명세 등록, 위키 문서에 관련 자료 등록&lt;/li&gt;
  &lt;li&gt;리포지터리에 소스 코드 등록&lt;/li&gt;
  &lt;li&gt;모든 public 메소드의 테스트 코드 구현, 모든 테스트 코드 성공&lt;/li&gt;
  &lt;li&gt;소스코드를 빌드하고 시연&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;활동-3-데일리-스크럼&quot;&gt;활동 #3 데일리 스크럼&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;진행 상황 점검 활동&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;목표 달성에 문제가 없는지 진행 사항 점검&lt;/li&gt;
  &lt;li&gt;문제를 해결하기보다는 문제가 발생한 상황에 집중&lt;/li&gt;
  &lt;li&gt;매일 하되, 15분의 타임 박스를 지켜야 함&lt;/li&gt;
  &lt;li&gt;이야기가 길어지면 회의를 따로 잡음&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;질문에-답하며-상황-공유&quot;&gt;질문에 답하며 상황 공유&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;스프린트가 순항하고 있는지, 작업의 진척에는 문제가 없는지, 도와줘야 할 일이 무엇인지 점검&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;스프린트 목표를 달성하기 위해 어제 할 일은 무엇인가?&lt;/li&gt;
  &lt;li&gt;스프린트 목표를 달성하기 위해서 오늘 할 일은 무엇인가?&lt;/li&gt;
  &lt;li&gt;스프린트 목표를 달성하는 데 방해가 되거나 도움이 필요한 일은 무엇인가?&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;활동-4-스프린트-리뷰&quot;&gt;활동 #4 스프린트 리뷰&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;스프린트 리뷰를 할 때, 제품의 이해관계자인 &lt;code class=&quot;highlighter-rouge&quot;&gt;스테이크홀더&lt;/code&gt;가 초대되며, 작업된 결과물을 점검하면서 그에 대한 피드백을 얻음&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;프로덕트 오너가 주관하고 이해관계자가 참석&lt;/li&gt;
  &lt;li&gt;개발자가 만든 결과물을 이해관계자에게 시연&lt;/li&gt;
  &lt;li&gt;피드백을 받고 프로덕트 백로그를 재점검&lt;/li&gt;
  &lt;li&gt;완성된 것과 완성되지 않은 것을 구분&lt;/li&gt;
  &lt;li&gt;전체 진행 상황과 남을 작업을 점검&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;시연과-피드백-이외에-해야-할-일&quot;&gt;시연과 피드백 이외에 해야 할 일&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;제품과 비즈니스 환경에 대해 설명&lt;/li&gt;
  &lt;li&gt;스프린트 중에 완료하지 못한 것을 설명&lt;/li&gt;
  &lt;li&gt;스프린트 중에 직면했던 어려움과 해결 과정 설명&lt;/li&gt;
  &lt;li&gt;프로덕트 백로그에 새로 추가할 게 있는지 논의&lt;/li&gt;
  &lt;li&gt;예상되는 잠재위험에 대해 논의&lt;/li&gt;
  &lt;li&gt;현재 진척 상황을 감안하여 작업 완료 시점이나 릴리즈 날짜를 예측&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;활동-5-스프린트-레트로스펙티브회고&quot;&gt;활동 #5 스프린트 레트로스펙티브(회고)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;일하는 방식을 개선&lt;/li&gt;
  &lt;li&gt;사람, 관계, 프로세스, 툴의 관점에서 스프린트 점검&lt;/li&gt;
  &lt;li&gt;버그를 고치기보다 버그를 유발하는 작업 방식에 집중&lt;/li&gt;
  &lt;li&gt;한 번에 너무 많은 것을 고치려 하지 않음&lt;/li&gt;
  &lt;li&gt;잘된 점과 안된  점을 정리&lt;/li&gt;
  &lt;li&gt;다음 스프린트에서 실천할 항목을 뽑음&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;역할-3-스크럼-마스터&quot;&gt;역할 #3 스크럼 마스터&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;스크럼이라는 프레임워크가 자리 잡게 도움&lt;/li&gt;
  &lt;li&gt;일하는 데 방해되는  요소 제거&lt;/li&gt;
  &lt;li&gt;봉사하는 마음으로 팀을 지원(&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%84%9C%EB%B2%88%ED%8A%B8_%EB%A6%AC%EB%8D%94%EC%8B%AD&quot;&gt;서번트 리더쉽&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;퍼실리테이터와 코치 역할 겸비&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;업무 할당이나 진척 관리 하지 않음&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;스크럼-마스터가-하는-추가적인-일&quot;&gt;스크럼 마스터가 하는 추가적인 일&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로덕트 오너와 개발자에게 애자일 개발과 스크럼을 알려줌&lt;/li&gt;
  &lt;li&gt;스프린트 플래닝이나 스프린트 회고 진행을 도움&lt;/li&gt;
  &lt;li&gt;프로덕트 오너와 개발자의 커뮤니케이션 도움&lt;/li&gt;
  &lt;li&gt;프로덕트 오너와 개발자의 생산성이 높아지도록 변화를 꾀함&lt;/li&gt;
  &lt;li&gt;프로덕트 백로그와 스프린트 백로그를 잘 쓰는 방법을 알려줌&lt;/li&gt;
  &lt;li&gt;프로덕트 백로그와 스프린트 백로그를 잘 관리하는 방법을 알려줌&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;스크럼의-5가지-가치&quot;&gt;스크럼의 5가지 가치&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;확약 : 목표를 달성하기 위해 전력을 다할 것을 굳게 약속&lt;/li&gt;
  &lt;li&gt;전념 : 목표를 달성하기 위해 각자가 맡은 일에 집중&lt;/li&gt;
  &lt;li&gt;공개 : 모든 상황과 문제를 투명하게 공유&lt;/li&gt;
  &lt;li&gt;존중 : 팀원의 역량과 존재 가치를 존중&lt;/li&gt;
  &lt;li&gt;용기 : 옳은 일을 한다는 용기로 어려움 극복&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;qa&quot;&gt;Q&amp;amp;A&lt;/h1&gt;

&lt;p&gt;토론해보아요~&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;스크럼은-종착지를-알아야-달릴-수-있다&quot;&gt;스크럼은 종착지를 알아야 달릴 수 있다.&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;목표 : 실현해 주기를 바라는 것은 무엇인가?&lt;/li&gt;
  &lt;li&gt;과제 : 달성해 주기를 바르는 것은 무엇인가?&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;엘리베이터-피치-인셉션-덱&quot;&gt;엘리베이터 피치 &lt;a href=&quot;https://agilewarrior.wordpress.com/2010/11/06/the-agile-inception-deck/&quot;&gt;인셉션 덱&lt;/a&gt;&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;투자자가 엘리베이터에서 내리기 전의 아주 짧은 시간(15 ~ 30초) 안에 제품을 설명하는 기법&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;[영업의 달인]은 (projectNm)&lt;/li&gt;
  &lt;li&gt;[실시간으로 고객 정보를 확인] 하고 싶은 (need, oppertunity)&lt;/li&gt;
  &lt;li&gt;[영업 사원]을 위한 (target customer)&lt;/li&gt;
  &lt;li&gt;[업무 지원 앱]입니다. (product category)&lt;/li&gt;
  &lt;li&gt;이 제품은 [외근 중에도 업무]를 할 수 있는데 (key benefit, reason to buy)&lt;/li&gt;
  &lt;li&gt;[이전 영업 지원 시스템]과는 달리 (competitive, alternative)&lt;/li&gt;
  &lt;li&gt;[최신 정보 알림 기능]이 차별화 포인트 입니다. (primary differentiation)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;프로덕트-백로그-1-요구-사항-열거&quot;&gt;프로덕트 백로그 #1 요구 사항 열거&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;제품의 &lt;code class=&quot;highlighter-rouge&quot;&gt;각종 요구 사항&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;개선 사항&lt;/code&gt;, 개발에 필요한 &lt;code class=&quot;highlighter-rouge&quot;&gt;단순 작업&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;기능&lt;/th&gt;
      &lt;th&gt;목적&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
      &lt;th&gt;예상견적&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;일일보고&lt;/td&gt;
      &lt;td&gt;최신 정보를 수집하여 영업 전략을 세움&lt;/td&gt;
      &lt;td&gt;일별로 방문 고객, 일시, 담당자, 제안 정보 입력&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;로그인&lt;/td&gt;
      &lt;td&gt;대외비 정보 보호를 위함&lt;/td&gt;
      &lt;td&gt;사원번호와 비밀번호로 인증&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;프로덕트-백로그-2-사용자-스토리&quot;&gt;프로덕트 백로그 #2 사용자 스토리&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;스토리&lt;/th&gt;
      &lt;th&gt;시연방법&lt;/th&gt;
      &lt;th&gt;견적&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;난 영업사원인데 / 고객의 상황을 일일 보고로 기록하는 기능이 필요해 / 그건 최신 정보를 수집하여 영업 전략을 세우기 위해서야&lt;/td&gt;
      &lt;td&gt;고객 정보 화면에서 방문 일시와 방문자, 상담 내용, 보고 내용을 등록한다. 확인 화면에서는…&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;난 보안관리자 인데 / 사용자 제한 하는 기능이 필요해. / 그건 대외비 정보가 외부로…&lt;/td&gt;
      &lt;td&gt;인증 전에 업무 화면에 들어가면 로그인 화면이 표시..&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;사용자-스토리-1&quot;&gt;사용자 스토리&lt;/h3&gt;

&lt;p&gt;누가(who), 무엇을(what), 왜(why) 하고 싶은지를 쓰면 되는데, 
&lt;code class=&quot;highlighter-rouge&quot;&gt;난 [어떤 사용자]인데 / [어떤 기능]이 필요해 / 그건 [어떤 일을 달성] 하기 위해서야.&lt;/code&gt; 와 같은 표현 합니다.&lt;/p&gt;

&lt;h3 id=&quot;일감-분류&quot;&gt;일감 분류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;진짜 중요함&lt;/li&gt;
  &lt;li&gt;좀 중요함&lt;/li&gt;
  &lt;li&gt;필요함&lt;/li&gt;
  &lt;li&gt;있으면 좋고 없어도 그만&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;일감-기준-작업량-추정&quot;&gt;일감 기준 작업량 추정&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;쉽게 끝낼 수 있을 것 같다 ( 소 )&lt;/li&gt;
  &lt;li&gt;손이 많이 갈 것 같다 ( 중 )&lt;/li&gt;
  &lt;li&gt;꽤 애를 먹을 것 같다 ( 대 )&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;작업량-가늠-방안스토리-포인트-활용&quot;&gt;작업량 가늠 방안(스토리 포인트 활용)&lt;/h3&gt;
&lt;p&gt;1,2,3,4,8,13,21,34… 과 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;피보나치 수&lt;/code&gt;를 활용&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;벨로시티velocity&quot;&gt;벨로시티(velocity)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;한 스프린트에서 끝낼 수 있는 포인트 수&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;언제-끝나는가&quot;&gt;언제 끝나는가&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;구현할 기능의 포인트 총합 / 벨로시티 = 필요한 스프린트 횟수&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;어떤-결과물이-나오는가&quot;&gt;어떤 결과물이 나오는가&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;벨로시트 * 스프린트 횟수 = 구현할 수 있는 포인트의 총합&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;### 스크럼의 3가지 역할
스크럼 오너, 스크럼 마스터, 개발자&lt;/p&gt;

&lt;h3 id=&quot;5가지-활동&quot;&gt;5가지 활동&lt;/h3&gt;
&lt;p&gt;스프린트, 스프린트 계획, 데일리 스크럼, 스프린트 리뷰, 스프린트 회고&lt;/p&gt;

&lt;h3 id=&quot;3가지-산출물&quot;&gt;3가지 산출물&lt;/h3&gt;
&lt;p&gt;프로덕트 백로그, 스프린트 백로그, 증가분&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/Product/Goods/115632480&quot;&gt;출근했더니 스크럼 마스터가 된 건에 관하여 - 니시무라 나오토&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="scrum" /><summary type="html">출근했더니 스크럼 마스터가 된 건에 관하여를 읽고</summary></entry><entry><title type="html">nestjs에서 swagger사용시, generic 타입에 대한 response schema 처리</title><link href="https://lahuman.github.io/nestjs_swagger_generic/" rel="alternate" type="text/html" title="nestjs에서 swagger사용시, generic 타입에 대한 response schema 처리" /><published>2023-03-22T00:00:00+00:00</published><updated>2023-03-22T00:00:00+00:00</updated><id>https://lahuman.github.io/nestjs_swagger_generic</id><content type="html" xml:base="https://lahuman.github.io/nestjs_swagger_generic/">&lt;h1 id=&quot;package-lockjson에서-nexus-repository-변경시-처리-방법&quot;&gt;package-lock.json에서 Nexus Repository 변경시 처리 방법&lt;/h1&gt;

&lt;p&gt;페이징 처리시 다음의 DTO를 사용하고 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Pagination&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ApiProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ApiProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;page_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ApiProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;paginationResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaginationResultInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다른 부분의 표현은 문제가 없는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;generic&lt;/code&gt; 타입인 &lt;code class=&quot;highlighter-rouge&quot;&gt;public results: T[];&lt;/code&gt;를 제대로 표현하지 못해서 아쉬움을 느끼고 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://aalonso.dev/blog/how-to-generate-generics-dtos-with-nestjsswagger-422g&quot;&gt;How to generate Generics DTOs with nestjs/swagger&lt;/a&gt;를 찾아서 적용하니 잘 표현 되네요.&lt;/p&gt;

&lt;p&gt;적용 방법은 아래와 같습니다.&lt;/p&gt;

&lt;p&gt;우선 신규 &lt;code class=&quot;highlighter-rouge&quot;&gt;ApiOkResponsePaginated&lt;/code&gt; 데코레이터를 추가 합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ApiOkResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;getSchemaPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ApiExtraModels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ApiProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/swagger'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaginationResultInterface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./pagination.results.interface'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;applyDecorators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/common'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Pagination&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 중요! ApiProperty 를 사용하지 않음&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ApiProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;page_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ApiProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;paginationResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PaginationResultInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paginationResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 데코레이터 추가&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ApiOkResponsePaginated&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DataDto&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unknown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;dataDto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DataDto&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;applyDecorators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ApiExtraModels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Pagination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataDto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ApiOkResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;allOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;$ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getSchemaPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Pagination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'array'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;$ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getSchemaPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataDto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막으로 아래와 같이 사용하려는 컨트롤러에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;@ApiResponse&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;@ApiOkResponsePaginated&lt;/code&gt; 를 사용합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ApiOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'아이템 상품 목록 조회'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ApiOkResponsePaginated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ItmPrdMRO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ApiOkResponsePaginated와 함께 사용할 generic 타입 지정&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'prd/list'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getItmPrdMPaginate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FindByCondDto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;itmPrdMService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItmPrdMPaginate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설정을 하고 결과를 확인하면 아래와 같이 원하는 response schema를 확인 할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;page_total&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;total&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;admAdminMIdNm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;itmDcd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;imgPath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;itmWearDcdNm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;avlbStrtDt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;avlbEndDt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;appItmNm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;itmNm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;prdAmt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;modDtm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aalonso.dev/blog/how-to-generate-generics-dtos-with-nestjsswagger-422g&quot;&gt;How to generate Generics DTOs with nestjs/swagger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="repository" /><category term="node" /><summary type="html">applyDecorators 를 이용해서 처리 하면 되네요!</summary></entry></feed>