<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://lahuman.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.8.4">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2019-10-18T21:48:45+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">NodeJS에서 Mongoose를 이용해서 MongoDB 사용하기</title><link href="https://lahuman.github.io/mongodb_mongoose/" rel="alternate" type="text/html" title="NodeJS에서 Mongoose를 이용해서 MongoDB 사용하기" /><published>2019-10-15T00:00:00+09:00</published><updated>2019-10-15T00:00:00+09:00</updated><id>https://lahuman.github.io/mongodb_mongoose</id><content type="html" xml:base="https://lahuman.github.io/mongodb_mongoose/">&lt;h1 id=&quot;nodejs에서-mongoose를-이용해서-mongodb-사용하기&quot;&gt;NodeJS에서 Mongoose를 이용해서 MongoDB 사용하기&lt;/h1&gt;

&lt;h2 id=&quot;1-mongodb-42와-robot3-연동-오류&quot;&gt;#1 MongoDB 4.2와 RoboT3 연동 오류&lt;/h2&gt;

&lt;p&gt;어제부터 Docker를 이용해서 MongoDB 4.2를 설치하고 Robo 3T로 접근을 하는데 다음과 같은 오류가 계속 발생하고 있었다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;network error while attempting to run command 'saslstart' on host 'localhost:27017'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;검색을 해보았는데 여러 가지 이유가 나와서, 다른 이미지로 설치도 하고 계정을 추가도 해보는 등의 여러 삽질을 하였다.
하지만 해결을 못해서 전전 긍긍 되고 있었는데, 드디어 원인을 알았다.&lt;/p&gt;

&lt;p&gt;바로 Robo 3T 버그 였다. 내가 사용하던 1.2.1 에서 발생하는 문제로 1.3.1로 업그레이드 하니 해결 되었다.&lt;/p&gt;

&lt;h3 id=&quot;문제-해결-이슈&quot;&gt;&lt;a href=&quot;https://github.com/Studio3T/robomongo/issues/1566&quot;&gt;문제 해결 이슈&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;나의 귀중한 하루를 날렸다.&lt;/p&gt;

&lt;h2 id=&quot;2-mongoose에서-데이터베이스를-만들지-않고-접근-시도&quot;&gt;#2 mongoose에서 데이터베이스를 만들지 않고 접근 시도&lt;/h2&gt;

&lt;p&gt;mongodb 에서 데이터베이스를 만들지 않고 mongoose를 이용해서 해당 데이터 베이스에 접근 하려고 했더니…. 안된다는 삽질을 오전 내내 했다….&lt;/p&gt;

&lt;p&gt;그리고 데이터 베이스를 생성 하였으면 꼭 사용자도 생성 해야 한다.&lt;/p&gt;

&lt;p&gt;늘 하는 작업인데 Command에서 되니까 그냥 넘어갔었나 보다.&lt;/p&gt;

&lt;h2 id=&quot;3-docker-db-설치&quot;&gt;#3 Docker DB 설치&lt;/h2&gt;

&lt;p&gt;Docker-compose 명령어를 이용해서 DB를 설치 하려고 하는데 ID/PW 셋팅을 안해주면 관리해주기 많이 귀찮다.&lt;/p&gt;

&lt;p&gt;docker-compose.yml 파일을 이용하여서 여러 개의 인스턴스를 생성 관리 할 수 있다.&lt;/p&gt;

&lt;p&gt;다음은 docker-compose.yml 의 예제이다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: '3.1'
services:
  mongodb:
    image: mongo:4
    command: [--auth]
    ports:
      - &quot;27017:27017&quot;
    environment:
      MONGO_INITDB_ROOT_USERNAME: &amp;lt;ID&amp;gt;
      MONGO_INITDB_ROOT_PASSWORD: &amp;lt;PW&amp;gt;
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: &amp;lt;PW&amp;gt;
      WORDPRESS_DB_NAME: &amp;lt;DBNAME&amp;gt;
      WORDPRESS_DB_USER: &amp;lt;ID&amp;gt;
      WORDPRESS_DB_PASSWORD: &amp;lt;PW&amp;gt;
    ports:
      - &quot;3306:3306&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행은 다음과 같이 해당 파일이 있는 곳에서 하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; docker-compose up -d
# 삭제시 해당 인스턴스도 삭제 한다!! 조심할 것!
$&amp;gt; docker-compose down
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;down-명령어는-인스턴스를-삭제한다&quot;&gt;down 명령어는 인스턴스를 삭제한다.&lt;/h4&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Studio3T/robomongo/issues/1566&quot;&gt;문제 해결 이슈&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="mongoose" /><category term="mongodb" /><summary type="html">삽질기</summary></entry><entry><title type="html">스케일</title><link href="https://lahuman.github.io/20191013/" rel="alternate" type="text/html" title="스케일" /><published>2019-10-13T00:00:00+09:00</published><updated>2019-10-13T00:00:00+09:00</updated><id>https://lahuman.github.io/20191013</id><content type="html" xml:base="https://lahuman.github.io/20191013/">&lt;h1 id=&quot;스케일&quot;&gt;스케일&lt;/h1&gt;

&lt;p&gt;지금 다니는 회사에서는 북클(책으로 클수있다?)라는 소규모 모임을 진행하고 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.yes24.com/Product/Goods/62600886&quot;&gt;스케일&lt;/a&gt;이라는 책을 가지고 모임을 진행하는데, 책의 내용이 흥미롭다.&lt;/p&gt;

&lt;p&gt;같은 모양이 반복되는 프랙탈을 생물학과 도시, 지형 등의 예제로 설명을 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;프랙탈이라는 것이 있다. 복잡해 보이는 것들 속에서 어떠한 법칙이 있고 더욱 자세히 보면 큰 구조 안에 작은 구조가 반복되고 있는 신기한 현상을 볼 수 있다. 어떠한 상관관계가 없는 것들을 면밀히 보면 서로 간에 공통점이 있고 보편성을 있다. 생물과 도시, 기업에도 적용된다. 각기 다른 관계가 크기에 따라 서로 통용되는 법칙이 있다고 한다면 얼마나 신기할까? ≪스케일≫에서 이 신비한 크기 법칙을 알아갈 수 있다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;도시를 제외하고는 모든 것은 &lt;strong&gt;탄생 &amp;gt; 성장 &amp;gt; 유지 &amp;gt; 죽음&lt;/strong&gt;의 단계를 거친다는 내용등이 있으며, 도시만 유일하게 수천년동안 계속 성장을 한다고 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;p.14

어느 포유동물이든 심장이 평생 뛰는 평균 횟수는 거의 같다. 생쥐처럼 작은 동물은 겨우 몇 년을 사는 반면, 고래 같은 거대한 포유동물은 100년 이상을 살 수 있음에도 심장이 뛰는 횟수는 거의 같다. 이런 놀라운 규칙성은 서로 전혀 다르고 고도로 복잡한 이 모든 현상의 밑바탕에 공통된 개념 구조가 있으며, 동물, 식물, 인간의 사회적 행동, 도시, 기업의 동역학, 성장, 조직 체계가 사실상 비슷한 일반 ‘법칙’을 따름을 강하게 시사한다.
 
스터디셀러이자 얼마 전에 다시 재출간된 책 ≪코끼리의 시간, 쥐의 시간≫이라는 책이 있다. 동물의 크기에 따라 생존 전략이 있고 동물의 크기에 따라 시간은 상대적일 수 있음을 언급한다. 동물의 시간은 체중의 4분의 1제곱에 비례하고 몸길이의 4분의 3제곱에 비례한다는 법칙과 비슷한 법칙은 ≪스케일≫에도 등장한다. 동물의 몸집이 2배로 늘어나면 대사율은 75% 증가하고 크기가 두 배 커질 때마다 에너지는 25% 절약 된다는 바로 ‘스케일링 법칙’이다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;많은 재미있는 생각을 할 수 있게 도와주는 책이다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/Product/Goods/62600886&quot;&gt;스케일&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="단상" /><summary type="html">독서 모임 &amp; 글쓰기</summary></entry><entry><title type="html">재능과 노력에 대하여</title><link href="https://lahuman.github.io/20191011/" rel="alternate" type="text/html" title="재능과 노력에 대하여" /><published>2019-10-11T00:00:00+09:00</published><updated>2019-10-11T00:00:00+09:00</updated><id>https://lahuman.github.io/20191011</id><content type="html" xml:base="https://lahuman.github.io/20191011/">&lt;h1 id=&quot;재능과-노력에-대하여&quot;&gt;재능과 노력에 대하여&lt;/h1&gt;

&lt;p&gt;얼마전 인터넷에서 이런 내용을 보았다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;연습을 많이 했는데도 효과가 안난다는 건, 재능이 없다는 이야기다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;노력과 재능중 하나를 선택하라면 노력이겠지만, 중요한 건 세상은 넓고 노력도 하는데 재능까지 겸비한 사람이 많다.
나는 내 일을 좋아하고 노력을 하지만 재능이 있는지는 모르겠다.
다만 밥 값만 하는 실력으로 하루하루 살아가다 보니,
언어도 자바에서 파이선으로 또다시 노드로 변경하고 백앤드로만은 부족하여 프런트앤드인 리액트도 공부하며 치열하게 산다.&lt;/p&gt;

&lt;p&gt;만약 나에게 뛰어난 재능이 있었다면 자바 개발자로 여전히 남아있었을지도 모른다.&lt;/p&gt;

&lt;p&gt;오늘도 부족한 재능을 매우기 위해서 노력한다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://naekkeo.startupbridgeva.com/view/%EC%8A%A4%EC%95%95-%EC%9C%84%EB%8C%80%ED%95%9C%ED%83%84%EC%83%9D-%EB%A9%98%ED%86%A0%EC%8A%A4%EC%BF%A8%EC%97%90%EC%84%9C-%ED%8C%A9%ED%8F%AD-%EB%82%A0%EB%A6%AC%EB%8A%94-%EA%B9%80%EC%9C%A4%EC%95%84?fbclid=IwAR2VB332hGxvTIjYkhra_2ipUD_7_RF3ISqUguwImtbhuXAuuxPpgxnQ29k&quot;&gt;[스압] 위대한탄생 멘토스쿨에서 팩폭 날리는 김윤아&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="단상" /><summary type="html">재능이 없으니 노력을 많이 해야 한다.</summary></entry><entry><title type="html">pm2 로그 관리 모듈</title><link href="https://lahuman.github.io/pm2-logrotate/" rel="alternate" type="text/html" title="pm2 로그 관리 모듈" /><published>2019-10-03T00:00:00+09:00</published><updated>2019-10-03T00:00:00+09:00</updated><id>https://lahuman.github.io/pm2-logrotate</id><content type="html" xml:base="https://lahuman.github.io/pm2-logrotate/">&lt;h1 id=&quot;pm2-로그를-관리하는-모듈을-이용하자&quot;&gt;pm2 로그를 관리하는 모듈을 이용하자&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://pm2.keymetrics.io/&quot;&gt;pm2&lt;/a&gt;는 Nodejs에서 프로세스를 관리 하는 모듈이다.&lt;/p&gt;

&lt;p&gt;아주 많이 사용되고 있으며 주요 기능은 프로세스 관리 및 모니터링을 제공한다. 또한 사용법이 간단하다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 설치 
$&amp;gt; npm install pm2 -g 
# 사용
$&amp;gt; pm2 start app.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;6개월 가량 운영하던 서비스에서 디스크 FULL 메시지를 받고 가장 많이 사용중인 파일을 확인하였는데, pm2 로그 파일이었다.&lt;/p&gt;

&lt;p&gt;기본 설정을 사용시, 로그 파일은 한개만 생성되고 계속 사이즈가 증량되는 방식으로 제공한다.&lt;/p&gt;

&lt;p&gt;pm2 로그를 관리 하기 위하여 검색 결과 &lt;a href=&quot;https://github.com/keymetrics/pm2-logrotate&quot;&gt;pm2-logrotate&lt;/a&gt;를 찾았다.
pm2 모듈로, 설치는 다음과 같이 하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#설치
$&amp;gt; pm2 install pm2-logrotate

[PM2][Module] Module downloaded
[PM2][WARN] Applications pm2-logrotate not running, starting...
[PM2] App [pm2-logrotate] launched (1 instances)
== pm2-logrotate ==
┌────────────────┬─────────────────────┐
│ key            │ value               │
├────────────────┼─────────────────────┤
│ max_size       │ 10M                 │
│ retain         │ 30                  │
│ compress       │ false               │
│ dateFormat     │ YYYY-MM-DD_HH-mm-ss │
│ workerInterval │ 30                  │
│ rotateInterval │ 0 0 * * *           │
│ rotateModule   │ true                │
└────────────────┴─────────────────────┘

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치를 하면 다음과 같은 기본 설정이 반영 된다.&lt;/p&gt;

&lt;p&gt;파일 한개의 최대 크기는 10M 이고 파일은 30개만 남는다. 파일명은 dateFormat을 기반으로 표시 되고 매일 1개의 파일이 생성된다.&lt;/p&gt;

&lt;p&gt;설정을 변경하려면 다음과 같은 명령어를 이용하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# (1KB)
$&amp;gt; pm2 set pm2-logrotate:max_size 1K 
#  (compress logs when rotated)
$&amp;gt; pm2 set pm2-logrotate:compress true
#  (force rotate every minute)
$&amp;gt; pm2 set pm2-logrotate:rotateInterval '*/1 * * * *'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치하고 사용이 참 쉬웠다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://pm2.keymetrics.io/&quot;&gt;pm2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/keymetrics/pm2-logrotate&quot;&gt;pm2-logrotate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="node" /><category term="pm2" /><summary type="html">모듈을 설치하지 않으면 로그의 크기가 무한 증식 한다.</summary></entry><entry><title type="html">mongodb expire data 사용법</title><link href="https://lahuman.github.io/mongodb_expire_data/" rel="alternate" type="text/html" title="mongodb expire data 사용법" /><published>2019-09-29T00:00:00+09:00</published><updated>2019-09-29T00:00:00+09:00</updated><id>https://lahuman.github.io/mongodb_expire_data</id><content type="html" xml:base="https://lahuman.github.io/mongodb_expire_data/">&lt;h1 id=&quot;mongodb-expire-data&quot;&gt;mongodb expire data&lt;/h1&gt;

&lt;p&gt;로그인 처리를 위해서 특정 시간동안 데이터를 저장할 필요가 생겼다.&lt;/p&gt;

&lt;p&gt;기존에 사용경험이 있었던 Redis를 이용할지를 고민하던 중에, 혹시 요즘 많이 쓰고 있는 Mongodb에도 혹시 특정 시간동안만 저장하는 기능이 있을까 해서 찾아보았다.&lt;/p&gt;

&lt;p&gt;검색 키워드로는 &lt;strong&gt;“mongodb expire data”&lt;/strong&gt;를 이용했고 바로 첫번째로 검색 되었다.&lt;/p&gt;

&lt;p&gt;사용방법은 인덱스를 생성할때 날짜 필드에 expireAfterSeconds 를 추가하면된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 1시간뒤에 삭제되는 데이터 구조 생성
db.log_events.createIndex( { &quot;createdAt&quot;: 1 }, { expireAfterSeconds: 3600 } );

# 사용법 
db.log_events.insert( {
   &quot;createdAt&quot;: new Date(),
   &quot;logEvent&quot;: 2,
   &quot;logMessage&quot;: &quot;Success!&quot;
} );

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;createAt 이라는 필드 명에는 날짜 형식이 들어가고 해당 날짜를 기준으로 expireAfterSeconds 의 초 만큼 지나가면 데이터가 삭제 된다.&lt;/p&gt;

&lt;p&gt;nodejs에서 mongodb를 사용할때는 다음과 같이 스키마 구조를 생성하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;new Schema({ createdAt: { type: Date, expires: 3600 }});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/expire-data/&quot;&gt;Expire Data from Collections by Setting TTL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="mongodb" /><category term="expire" /><summary type="html">mongodb에도 expire data가 있다.</summary></entry><entry><title type="html">JAVASCIRPT에서 느낌표 2개의 의미</title><link href="https://lahuman.github.io/javascript_double_exclamation_mark/" rel="alternate" type="text/html" title="JAVASCIRPT에서 느낌표 2개의 의미" /><published>2019-09-23T00:00:00+09:00</published><updated>2019-09-23T00:00:00+09:00</updated><id>https://lahuman.github.io/javascript_double_exclamation_mark</id><content type="html" xml:base="https://lahuman.github.io/javascript_double_exclamation_mark/">&lt;h1 id=&quot;느낌표-2개의-의미&quot;&gt;느낌표 2개의 의미&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const x = '';
!!x; //false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;!!를 사용하면 빈값 등(i.e., except for false, 0, “”, null, undefined, and NaN)은 false를 그 외엔 true를 리턴한다.&lt;/p&gt;

&lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/better-programming/javascript-bang-bang-i-shot-you-down-use-of-double-bangs-in-javascript-7c9d94446054&quot;&gt;Javascript “Bang, Bang. I Shot You Down” - Use of Double Bangs (!!) in Javascript.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="javascript" /><summary type="html">옆에 분이 물어봤는데 나도 몰라서 검색함!</summary></entry><entry><title type="html">AWS EC2 서버 DISK 크기 늘리기</title><link href="https://lahuman.github.io/aws_disk_upgrade/" rel="alternate" type="text/html" title="AWS EC2 서버 DISK 크기 늘리기" /><published>2019-09-17T00:00:00+09:00</published><updated>2019-09-17T00:00:00+09:00</updated><id>https://lahuman.github.io/aws_disk_upgrade</id><content type="html" xml:base="https://lahuman.github.io/aws_disk_upgrade/">&lt;h1 id=&quot;aws-ec2-서버-disk-크기-늘리기&quot;&gt;AWS EC2 서버 DISK 크기 늘리기&lt;/h1&gt;

&lt;p&gt;EC2의 디스크는 탄력적 볼륨이라고 하여 DISK의 크기를 가변적으로 조절 할수 있다.&lt;/p&gt;

&lt;p&gt;이번에 EC2 인스턴스의 DISK 용량을 확장하였는데, WEB GUI 기반으로 볼륨 수정 요청을 하고 하루가 지나도 용량의 변경이 없었다.&lt;/p&gt;

&lt;p&gt;구글에 검색을 해보니, &lt;strong&gt;“파일 시스템을 확장 해야 디스크 용량이 확장되다”&lt;/strong&gt;고 한다.&lt;/p&gt;

&lt;p&gt;먼저 &lt;strong&gt;lsbkl&lt;/strong&gt; 명령어를 이용해서 인스턴스의 볼륨을 확인한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ec2-user ~]$ lsblk
NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
nvme1n1       259:0    0  30G  0 disk /data
nvme0n1       259:1    0  16G  0 disk
└─nvme0n1p1   259:2    0   8G  0 part /
└─nvme0n1p128 259:3    0   1M  0 part
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;루트 볼륨 /dev/nvme0n1에는 /dev/nvme0n1p1라는 파티션이 있다. 루트 볼륨에 새 크기인 16GB가 반영되는 동안 파티션의 크기에 원래 크기인 8GB가 반영되기 때문에 파일 시스템을 확장하려면 먼저 파티션 크기를 늘려야 한다.&lt;/li&gt;
  &lt;li&gt;볼륨 /dev/nvme1n1에는 파티션이 없습니다. 볼륨 크기에 새 크기 30GB가 반영됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;루트 볼륨에서 파티션을 확장하려면 다음 growpart 명령을 사용한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ec2-user ~]$ sudo growpart /dev/nvme0n1 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;lsbkl&lt;/strong&gt; 명령어를 이용해서 인스턴스의 볼륨의 크기가 반영 되었는지 확인한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ec2-user ~]$ lsblk
NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
nvme1n1       259:0    0  30G  0 disk /data
nvme0n1       259:1    0  16G  0 disk
└─nvme0n1p1   259:2    0  16G  0 part /
└─nvme0n1p128 259:3    0   1M  0 part
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;예제-ext2-ext3-또는-ext4-파일-시스템-확장&quot;&gt;예제: ext2, ext3 또는 ext4 파일 시스템 확장&lt;/h2&gt;

&lt;p&gt;df -h 명령어로 볼륨에 대한 파일 시스템 크기를 확인한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ec2-user ~]$ df -h
Filesystem       Size  Used Avail Use% Mounted on
/dev/xvda1       8.0G  1.9G  6.2G  24% /
/dev/xvdf1       8.0G   45M  8.0G   1% /data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;resize2fs&lt;/strong&gt; 명령어를 이용해서 각 볼륨에서 파일 시스템을 확장한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ec2-user ~]$ sudo resize2fs /dev/xvda1
[ec2-user ~]$ sudo resize2fs /dev/xvdf1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막으로 볼륨에 대한 파일 시스템의 크기를 확인하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[ec2-user ~]$ df -h
Filesystem       Size  Used Avail Use% Mounted on
/dev/xvda1        16G  1.9G  6.2G  12% /
/dev/xvdf1        30G   45M  8.0G   1% /data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&quot;&gt;볼륨 크기 조정 후 Linux 파일 시스템 확장&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="aws" /><category term="disk" /><summary type="html">볼륨 크기 조정 후 Linux 파일 시스템 확장</summary></entry><entry><title type="html">남에게 동감을 얻어야 할까?</title><link href="https://lahuman.github.io/20190916/" rel="alternate" type="text/html" title="남에게 동감을 얻어야 할까?" /><published>2019-09-16T00:00:00+09:00</published><updated>2019-09-16T00:00:00+09:00</updated><id>https://lahuman.github.io/20190916</id><content type="html" xml:base="https://lahuman.github.io/20190916/">&lt;h1 id=&quot;나는-나로서-충분하지-않을까&quot;&gt;나는 나로서 충분하지 않을까?&lt;/h1&gt;

&lt;p&gt;유투브나 카드 뉴스 등에서 패미니즘과 탈 코르셋, 동성애등에 대한 동감을 얻으려는 글을 많이 보았다.&lt;/p&gt;

&lt;p&gt;물론 남의 동감 해주고 내 생각을 따라주면 더할 나위 없이 좋을 것이다.&lt;/p&gt;

&lt;p&gt;반대로 남의 동감해주지 않는다고 변하는 생각이라면 그정도의 가치를 가진 생각이다.&lt;/p&gt;

&lt;p&gt;생각이 변한다는 것이 나쁜 것이 아니다. 나 역시 생각이 바뀐다.&lt;/p&gt;

&lt;p&gt;어릴때 가지고 있던 동성애에 대한 생각의 경우 지금은 많이 달라졌다.&lt;/p&gt;

&lt;p&gt;동성애에 대하여 병, 또는 더러운 것처럼 생각 하였으나 나이가 들어서는 사랑하는 대상이 동성일뿐이라고 생각하게 되었다.&lt;/p&gt;

&lt;p&gt;패미니즘이나 탈 코르셋에 대해서는 사회가 남성 중심적이기 때문에 여성으로 동감을 얻고 힘을 얻고 싶은 행위라 생각된다.&lt;/p&gt;

&lt;p&gt;다만, 탈 코르셋을 하는 사람과 하지 않는 사람을 이분법적으로 나누어 서로 공격하는건 멍청한 행동 같다.&lt;/p&gt;

&lt;p&gt;4년전인가? 정부에서 가정주부가 있는 집과 맞벌이인 집 사이에 어디에 지원금을 많이 줘야 하는지에 대해 서로가 싸우는 모습과 다르지 않은가?&lt;/p&gt;

&lt;p&gt;내 생각을 다른사람에게 구걸 하진 말자!&lt;/p&gt;

&lt;p&gt;존중은 쟁취하거나 뺏는 것이 아니다, 내 행동에 따라 자연히 따라오는 것이지.&lt;/p&gt;

&lt;h2 id=&quot;뻘글&quot;&gt;뻘글&lt;/h2&gt;
&lt;h2 id=&quot;글쓰기-연습&quot;&gt;글쓰기 연습&lt;/h2&gt;</content><category term="단상" /><summary type="html">패미니즘, 탈 코르셋, 동성애 등에 대한 개인의 생각</summary></entry><entry><title type="html">에세이를 써보자</title><link href="https://lahuman.github.io/20190915/" rel="alternate" type="text/html" title="에세이를 써보자" /><published>2019-09-15T00:00:00+09:00</published><updated>2019-09-15T00:00:00+09:00</updated><id>https://lahuman.github.io/20190915</id><content type="html" xml:base="https://lahuman.github.io/20190915/">&lt;h1 id=&quot;에세이를-써보자&quot;&gt;에세이를 써보자&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;나는 그 이층 방에서 내가 알고 있는 것 한 가지에 단편을 하나씩 쓰기로 결심했다. 글을 쓸 때마다 이렇게 하려고 노력했다. 그것은 엄격하고 효과적인 훈련 방법이었다.&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;어니스트 헤밍웨어&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;나는 욕심이 많다. 문제는 욕심은 많은데 비해 능력도 적고 게으르기까지 하다. 욕심이 있어서 여러 가지 일을 시도하다 포기하기를 수백 번씩 하였다. 하지만 “인간의 욕심은 끝이 없고 같은 실수를 반복한다”라고 누군가 이야기하지 않았던가, 회사 내 동아리 같은 뭉클(‘뭉치면 클 수 있다’의 줄임말)에서 글쓰기 강좌가 있다고 하여 능력은 없지만 욕심을 내서 신청하였다. 다행히 가입이 되었고, 2019년 8월 22일 첫 뭉클 이 시작되었다. 
강사로 오신 분은 편집자를 거쳐 에세이 쓰기 워크숍을 진행하시며 책을 내신 김은경 작가님이다.&lt;/p&gt;

&lt;h2 id=&quot;첫-시간에는-일기와-에세이의-차이점-글쓰기를-즐겨야-한다-등을-알려주셨고-가장-기억에-남는-다음과-같은-말씀을-하셨다&quot;&gt;첫 시간에는 일기와 에세이의 차이점, 글쓰기를 즐겨야 한다 등을 알려주셨고, 가장 기억에 남는 다음과 같은 말씀을 하셨다.&lt;/h2&gt;

&lt;p&gt;“나만의 유니크한 글을 쓰세요. 내가 신경 쓰이는 것에 집중하셔요.”&lt;/p&gt;

&lt;p&gt;나만의 글을 쓴다는 건 어떤 의미일지 많은 고민을 해보았다. 내가 잘하는 것과 관심 있는 무언가에 대하여 글을 쓰는 일이 쉽지 않았다. 물론 이런 문제에 대한 해답도 주셨다.&lt;/p&gt;

&lt;p&gt;“우선 글을 써보세요. 시작이 어려우면 생각나는 데로 작성해보셔요.”&lt;/p&gt;

&lt;p&gt;글을 작성하기 위해 많은 생각을 하기보다는 내가 알고 있는 한 가지에 집중해서 글을 써보는 작업이 어니스트 헤밍웨이도 시도한 훈련 방법이었다고 한다. 뭐 그렇게 대단한 글은 아니지만 생각나는 대로 일단 써보기로 다짐하고 글을 쓰기 시작했다.&lt;/p&gt;

&lt;p&gt;처음 쓴 글은 논문을 작성하면서 겪었던 일에 대한 경험이다. 당시에는 국어가 정말 어렵다고 느꼈으며, 나의 국어 실력이 많이 부족해서 교수님을 비롯해 선배님들에게 많은 도움을 받았다. 가장 어려웠던 부분은 내 생각을 전달하기 위한 문장을 만드는 작업이었다. 시간이 지나서 지금이 되었을 때, 크게 발전하지는 못하였지만 글을 보는 눈이 넓어졌다는 내용의 글을 작성하였다.
“하나의 문장이 너무 길어도 안되고, 너무 많은 뜻을 가져서도 안된다. 하나의 문장은 하나의 뜻을 가지는 게 가장 좋다.”라는 내용을 두 번째 강의 시간에 들었다. 또한 내용에서 제목을 뽑아내는 방식을 알려주시고 몇 가지 글을 가지고 연습을 하였다. 다른 분들과 의견을 나누면서 생각지도 못한 제목을 뽑는 능력에 감탄할 수밖에 없었다.&lt;/p&gt;

&lt;h2 id=&quot;두-번째-쓴-글은-내가-할-때-행복하다라는-내용의-문장을-만드는-연습을-하였고-나는-육아에서-느끼는-행복한-순간을-작성하였다-아이가-퇴근-후-문을-열었을-때-아빠-하며-달려온다거나-새우잠을-자고-있는-아내와-아이를-볼-때-느끼는-행복에-대하여-작성하였다&quot;&gt;두 번째 쓴 글은 “내가 ~할 때 행복하다.”라는 내용의 문장을 만드는 연습을 하였고 나는 육아에서 느끼는 행복한 순간을 작성하였다. 아이가 퇴근 후 문을 열었을 때 “아빠~” 하며 달려온다거나, 새우잠을 자고 있는 아내와 아이를 볼 때 느끼는 행복에 대하여 작성하였다.&lt;/h2&gt;

&lt;h2 id=&quot;세-번째-시간에는-정확한-문장을-작성하고-단어의-선택과-띄어쓰기-마침표-기호의-의미-등에-대해서-배웠다-개인적으로는-가장-어려운-시간이었다-마침표를-빼먹은-문장을-찾아내는-분은-정말-대단하셨다-문장을-이해하기-쉽게-수정하는-연습-또한-쉽지-않았고-국어가-참-어렵다고-다시-느끼는-시간이-되었다&quot;&gt;세 번째 시간에는 정확한 문장을 작성하고 단어의 선택과 띄어쓰기, 마침표, 기호의 의미 등에 대해서 배웠다. 개인적으로는 가장 어려운 시간이었다. 마침표를 빼먹은 문장을 찾아내는 분은 정말 대단하셨다. 문장을 이해하기 쉽게 수정하는 연습 또한 쉽지 않았고, 국어가 참 어렵다고 다시 느끼는 시간이 되었다.&lt;/h2&gt;

&lt;p&gt;9월 15일 자정까지 과제로 글을 써서 이메일로 보내드려야 한다. 세 번의 강의를 듣고 내 글쓰기 실력이 눈에 보이게 향상되었거나, 스타일이 달라지지는 않았다. 하지만 글을 쓰는데 느끼는 두려움과 부끄러움은 작아졌다. 용기 또는 만용으로 글을 쓰고 있다.&lt;/p&gt;

&lt;h2 id=&quot;다-쓴-글을-읽고-수정하고-다시-읽고를-반복하는데-에세이라기보다는-일기로-느껴진다-무엇이-문제인지-첫-술에-배가-부르면-천재이겠지라는-위안을-하면서-글을-마친다&quot;&gt;다 쓴 글을 읽고 수정하고 다시 읽고를 반복하는데 에세이라기보다는 일기로 느껴진다. 무엇이 문제인지… 첫 술에 배가 부르면 &lt;strong&gt;천재&lt;/strong&gt;이겠지라는 위안을 하면서 글을 마친다.&lt;/h2&gt;</content><category term="단상" /><summary type="html">에세이일까? 일기일까?</summary></entry><entry><title type="html">회사에서 테니스 동호회를 가입하였다.</title><link href="https://lahuman.github.io/20190909/" rel="alternate" type="text/html" title="회사에서 테니스 동호회를 가입하였다." /><published>2019-09-09T00:00:00+09:00</published><updated>2019-09-09T00:00:00+09:00</updated><id>https://lahuman.github.io/20190909</id><content type="html" xml:base="https://lahuman.github.io/20190909/">&lt;h1 id=&quot;회사에서-테니스-동호회에-가입했다&quot;&gt;회사에서 테니스 동호회에 가입했다&lt;/h1&gt;

&lt;p&gt;이번에 3번째 참석인데, 오늘은 사람이 없어서 알려주시는 분에게 오랜 시간 동안 1:1 개인 레슨을 받았다.&lt;/p&gt;

&lt;p&gt;“앞으로 나아가면서 이렇게 빵~ 치셔요.” 라는 강사분의 말씀을 머리로는 이해하지만,&lt;/p&gt;

&lt;p&gt;내 몸은 웃푼 춤을 춘다.&lt;/p&gt;

&lt;p&gt;공 없이 자세로는 어떻게 따라 하는데 막상 공이 넘어서 나에게 돌진하면 뻣뻣한 로보트 마냥 이상한 자세로 친다.&lt;/p&gt;

&lt;p&gt;가르쳐 주시는 강사분도 많이 힘들었을꺼다.&lt;/p&gt;

&lt;h2 id=&quot;그래도-재미있게-잘-놀았다&quot;&gt;그래도 재미있게 잘 놀았다!&lt;/h2&gt;</content><category term="단상" /><summary type="html">운동 부족인데 헬스는 너무 재미 없어서...</summary></entry></feed>
