<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2018-01-26T09:52:55+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">LZW encoding algorithm</title><link href="https://lahuman.github.io/LZW_encoding_algorithm/" rel="alternate" type="text/html" title="LZW encoding algorithm" /><published>2018-01-26T00:00:00+09:00</published><updated>2018-01-26T00:00:00+09:00</updated><id>https://lahuman.github.io/LZW_encoding_algorithm</id><content type="html" xml:base="https://lahuman.github.io/LZW_encoding_algorithm/">&lt;h1 id=&quot;lzw-encoding-algorithm&quot;&gt;LZW encoding algorithm&lt;/h1&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/rZ-JRCPv_O8&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;lzw-encoding-algorithm-1&quot;&gt;LZW encoding algorithm&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. at the start, the dictionary contains all possible individual charactrs. and P is empty
2. C = next character in the charstream
3. si the string P+C present in the dictionary?
  a) if it is, 
      P = P + C (extend P with C);

  b)if not,
      i. output the code word which denotes P to the codestream;
      ii. add the string P+C to the dictionary
      iii. P=C(P now contanis only the character C)


1. At the start the dictionary contains all possible charstream.
2. cW = the first code word.
3. output the string.cW to the charstream.
4. pW = cW
5. cW = next code word.
6. is the String.cW present in the dictionary?
    if it is, 
        a) ouput the string.cW to the charstream;
        b) P := string.pW;
        c) C := the first character of the string.cW
        d) add the string P+C to the dictionary;

    if not, 
        a) P = string.pW;
        b) C = the first character of the string.pW;
        c) ouput the string P+C to the charstream and add it to the dictionary (now it corresponds to the cW)
7. Are there more code words in the codestream?
    a) if yes, go back to step  4;
    b) if not, End
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;lzw-인코딩-알고리즘&quot;&gt;LZW 인코딩 알고리즘&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 처음에는 사전에 가능한 모든 개인 문자가 들어 있습니다. P는 비어 있습니다.
2. C = charstream의 다음 문자
3. 사전에 P + C 문자열이 있습니까?
  a) 그렇다면,
      P = P + C (C와 P 연장);

  b) 그렇지 않다면,
      i. P를 코드 워드에 출력하고;
      ii. 사전에 문자열 P + C를 추가합니다.
      iii. P = C (이제 P는 문자 C 만 사용)


1. 처음에는 사전에 가능한 모든 charstream이 들어 있습니다.
2. cW = 첫 번째 코드 워드.
3. string.cW를 charstream으로 출력하십시오.
4. pW = cW
5. cW = 다음 코드 워드.
6. 사전에 String.cW가 있습니까?
    그렇다면,
        a) string.cW를 charstream에 출력한다.
        b) P : = string.pW;
        c) C : = string.cW의 첫 번째 문자
        d) P + C 문자열을 사전에 추가합니다.

    그렇지 않다면,
        a) P = 문자열 .pW;
        b) C = 문자열의 첫 번째 문자 .pW;
        c) 문자열 P + C를 charstream에 놓고 사전에 추가합니다 (이제는 cW에 해당함)
7. 코드 스트림에 더 많은 코드 단어가 있습니까?
    a) 그렇다면 4 단계로 되돌아갑니다.
    b) 그렇지 않다면, 끝
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="단상" /><summary type="html">그림으로 쉽게 설명 되어있다.</summary></entry><entry><title type="html">담당자 찾기 놀이가 시작되었다.</title><link href="https://lahuman.github.io/20180125-phase/" rel="alternate" type="text/html" title="담당자 찾기 놀이가 시작되었다." /><published>2018-01-25T00:00:00+09:00</published><updated>2018-01-25T00:00:00+09:00</updated><id>https://lahuman.github.io/20180125-phase</id><content type="html" xml:base="https://lahuman.github.io/20180125-phase/">&lt;h1 id=&quot;업무를-할때-담당자-또는-책임자-찾기가-어렵다&quot;&gt;업무를 할때 담당자 또는 책임자 찾기가 어렵다.&lt;/h1&gt;

&lt;p&gt;팀내에서 업무 담당자 찾기가 어렵다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A 업무를 하고 있지만 자신은 담당자가 아닌 K씨&lt;/li&gt;
  &lt;li&gt;업무 중요도로 A 업무를 지원하지만 담당자가 아닌 J씨&lt;/li&gt;
  &lt;li&gt;B 업무를 하기 때문에 자기는 B일 밖에 모른다는 H씨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기본적으로는 A 일은 크게 B 업무도 포함하고 있다.&lt;/p&gt;

&lt;p&gt;꼭 위에서 누군가가 너가 담당자라고 지정해주어야 업무 담당자가 생긴다.&lt;/p&gt;

&lt;p&gt;왜 그렇게 일할까?&lt;/p&gt;</content><author><name></name></author><category term="단상" /><summary type="html">서로 담당자가 아니라고 한다.</summary></entry><entry><title type="html">AES Encryption/Decryption 테스트</title><link href="https://lahuman.github.io/AES_python-java/" rel="alternate" type="text/html" title="AES Encryption/Decryption 테스트" /><published>2018-01-24T00:00:00+09:00</published><updated>2018-01-24T00:00:00+09:00</updated><id>https://lahuman.github.io/AES_python-java</id><content type="html" xml:base="https://lahuman.github.io/AES_python-java/">&lt;h1 id=&quot;python과-java에서-사용가능한-aes-암복호화-모듈-개발&quot;&gt;Python과 Java에서 사용가능한 AES 암/복호화 모듈 개발&lt;/h1&gt;

&lt;p&gt;엔진 단은 Python으로 되어 있고, WEB은 JAVA로 되어 있는 프로젝트에서 AES 256기반의 암/복호화 처리를 한다.&lt;/p&gt;

&lt;h3 id=&quot;python-소스&quot;&gt;Python 소스&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from Crypto.Cipher import AES
import base64
import hashlib

BS = AES.block_size
pad = lambda s: s + (BS - len(s) % BS) * chr(BS - len(s) % BS)
unpad = lambda s : s[0:-ord(s[-1])]

if __name__ == '__main__':
    key = '12345678901234567890123456789012' # 32bit
    iv = '1234567890123456' # 16bit
    
    beforeCipher = 'abcd'
    print 'Input string: ' + beforeCipher

    cipher = AES.new(key, AES.MODE_CBC, IV=iv)
    beforeCipher = pad(beforeCipher)
    afterCipher = base64.b64encode(cipher.encrypt(beforeCipher))
    print 'Cipher string: ' + afterCipher

    cipher = AES.new(key, AES.MODE_CBC, IV=iv)
    deciphed = cipher.decrypt(base64.b64decode(afterCipher))
    deciphed = unpad(deciphed)
    print 'Deciphed string: [' + deciphed +']'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Input string: abcd
Cipher string: nf2mDLb4L36PWlXz3mNPTw==
Deciphed string: [abcd]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;java-소스&quot;&gt;JAVA 소스&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lahuman&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;junit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;javax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.*;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;javax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IvParameterSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;javax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SecretKeySpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnsupportedEncodingException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InvalidAlgorithmParameterException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InvalidKeyException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MessageDigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NoSuchAlgorithmException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;security&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AlgorithmParameterSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hamcrest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Matchers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;junit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UnsupportedEncodingException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NoSuchPaddingException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NoSuchAlgorithmException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InvalidAlgorithmParameterException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InvalidKeyException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BadPaddingException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IllegalBlockSizeException&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Wu4hpITrFb02n9vWdlWzpXYAkmaX1RXL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;EWt02NzAn8BIVDse&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beforeCipher&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;123456789012345&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Input string: &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beforeCipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;SecretKey&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyspec&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SecretKeySpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;AES&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;AlgorithmParameterSpec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ivspec&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IvParameterSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Encription&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Cipher&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AES/CBC/NoPadding&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ENCRYPT_MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ivspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blockSize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBlockSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beforeCipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fillChar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pad&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plaintextLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fillChar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockSize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plaintextLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blockSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plaintextLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blockSize&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;!= 0) {
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;plaintextLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plaintextLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blockSize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plaintextLength&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blockSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plaintext&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plaintextLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plaintext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fillChar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arraycopy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plaintext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cipherBytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doFinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plaintext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;afterCiphered&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encodeToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cipherBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Cipher string: &quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;afterCiphered&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Decription&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AES/CBC/NoPadding&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DECRYPT_MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keyspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ivspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64decoded&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getDecoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;afterCiphered&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aesdecode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doFinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base64decoded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;p&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unpad&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aesdecode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aesdecode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aesdecode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])];&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arraycopy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aesdecode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;originStr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Decipher string: [&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;originStr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Input string: abcd
Cipher string: nf2mDLb4L36PWlXz3mNPTw==
Decipher string: [abcd]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Java에서 Python의 pad, unpad와 똑같이 동작 하기 위하여 Encryption시 fillChar을 찾고 pad처리를 하고, Decryption시 unpad 처리를 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://bcllemon.github.io/2015/10/29/2015/python-java-aes/&quot;&gt;Python Java AES &lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="AES" /><category term="JAVA" /><category term="Python" /><summary type="html">JAVA, Python 호환 되는 AES Encryption/Decryption 개발</summary></entry><entry><title type="html">판교 생활 시작</title><link href="https://lahuman.github.io/20180122-phase/" rel="alternate" type="text/html" title="판교 생활 시작" /><published>2018-01-22T00:00:00+09:00</published><updated>2018-01-22T00:00:00+09:00</updated><id>https://lahuman.github.io/20180122-phase</id><content type="html" xml:base="https://lahuman.github.io/20180122-phase/">&lt;h1 id=&quot;거의-2년간의-정자역-근무를-마치고-판교에서의-첫날이다&quot;&gt;거의 2년간의 정자역 근무를 마치고, 판교에서의 첫날이다.&lt;/h1&gt;

&lt;p&gt;지금 회사에 입사하고 2년간 정자역에서만 근무 하다가, 이번 조직 개편으로 판교에서 생활을 시작한다.&lt;/p&gt;

&lt;p&gt;단점은 역에서 많이 멀다는 것이다.&lt;/p&gt;

&lt;p&gt;장점은 아직까진 모르겠다. 다만, 많은 개발자들이 있는 곳이니 모임이 많은거 같다.&lt;/p&gt;

&lt;p&gt;다음에는 참여해보자!&lt;/p&gt;</content><author><name></name></author><category term="단상" /><summary type="html">오늘부터 판교에서 근무 한다.</summary></entry><entry><title type="html">글쓰기는 어려워…</title><link href="https://lahuman.github.io/20180119-phase/" rel="alternate" type="text/html" title="글쓰기는 어려워..." /><published>2018-01-19T00:00:00+09:00</published><updated>2018-01-19T00:00:00+09:00</updated><id>https://lahuman.github.io/20180119-phase</id><content type="html" xml:base="https://lahuman.github.io/20180119-phase/">&lt;h1 id=&quot;작성중인-논문을-교수님에게-리뷰를-받았다&quot;&gt;작성중인 논문을 교수님에게 리뷰를 받았다.&lt;/h1&gt;

&lt;p&gt;고칠 내용이 너무 많았다. 또한 내용에 균형이 엉망이라는 이야기를 들었다.&lt;/p&gt;

&lt;p&gt;그림, 표에 대한 폰트 크기 사이즈 등등… 생각지도 못한 지적을 많이 받아서 조금 기운이 빠졌다.&lt;/p&gt;

&lt;p&gt;글을 쓰는 일이 쉽지 않다는 것은 알고 있었다.&lt;/p&gt;

&lt;p&gt;천천히 다시 해보자!&lt;/p&gt;</content><author><name></name></author><category term="단상" /><summary type="html">글을 잘 쓰기 위해서는 형식, 균형이 중요하다.</summary></entry><entry><title type="html">[2018-01-17] Doc4SM</title><link href="https://lahuman.github.io/doc4sm/" rel="alternate" type="text/html" title="[2018-01-17] Doc4SM" /><published>2018-01-17T00:00:00+09:00</published><updated>2018-01-17T00:00:00+09:00</updated><id>https://lahuman.github.io/doc4sm</id><content type="html" xml:base="https://lahuman.github.io/doc4sm/">&lt;h1 id=&quot;doc4sm&quot;&gt;Doc4SM&lt;/h1&gt;

&lt;p&gt;Doc4SM은 ITIL 기반으로 IT 서비스를 프로세스화 하여 관리하는 시스템 입니다. 고객의 서비스 요청에 대한 관리 및 통계 등 종합적인 정보를 제공합니다.&lt;/p&gt;

&lt;h2 id=&quot;소스-보기&quot;&gt;&lt;a href=&quot;https://github.com/lahuman/Doc4SM&quot;&gt;소스 보기&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;기능-설명&quot;&gt;기능 설명&lt;/h2&gt;

&lt;h3 id=&quot;1-업무-관리&quot;&gt;1. 업무 관리&lt;/h3&gt;

&lt;p&gt;사용자 및 담당자가 쉽게 서비스에 대한 요청을 등록하고, 할당된 업무, 처리중인 업무, 완료된 업무에 대하여 관리 하는 기능을 제공 합니다.&lt;/p&gt;

&lt;h3 id=&quot;2-표준화된-방법론-활용&quot;&gt;2. 표준화된 방법론 활용&lt;/h3&gt;

&lt;p&gt;한국정보통신기술협회에서 제공하는 TTAS.KO-10.0256(정보시스템 구성 및 변경관리 지침)과 TTAS_KO-10&lt;em&gt;0261&lt;/em&gt;(서비스데스크 운영관리 지침)의 표준 방법론을 활용합니다.&lt;/p&gt;

&lt;h3 id=&quot;3-최적화된-시스템-구축&quot;&gt;3. 최적화된 시스템 구축&lt;/h3&gt;

&lt;p&gt;CMDB 설계/구현을 지원 하며, 인프라 관리, 외부업체관리 등 유지관리에서 필요한 최적화된 시스템 환경을 제공합니다.&lt;/p&gt;

&lt;h3 id=&quot;4-산출물-자동-생성&quot;&gt;4. 산출물 자동 생성&lt;/h3&gt;

&lt;p&gt;한국정보통신기술협회(TTAS) 에서 제공하는 상위 지침의 산출물 생성을 지원 하며, 기타 유지관리에 필요한 산출물의 생성 기능을 제공합니다.&lt;/p&gt;

&lt;h3 id=&quot;5-통계-제공&quot;&gt;5. 통계 제공&lt;/h3&gt;

&lt;p&gt;완료된 업무의 기간별로 간트 차트, 업무통계, 서비스 별 통계, 태그 클라우드 등의 통계기능을 제공합니다.&lt;/p&gt;

&lt;h2 id=&quot;환경&quot;&gt;환경&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;JAVA 1.8 이상&lt;/li&gt;
  &lt;li&gt;MAVEN&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Maven install&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn clean install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;target/doc4sm.war 파일을 Tomcat/webapps 로 이동&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;demo-site&quot;&gt;DEMO SITE&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://14.55.235.194:9025&quot;&gt;DOC4SM DEMO&lt;/a&gt; - 계정&amp;amp;비번 : admin&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;p&gt;This project is licensed under the GPL License - see the &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_General_Public_License&quot;&gt;WIKI-LICENSE&lt;/a&gt; file for details&lt;/p&gt;</content><author><name></name></author><category term="DB" /><category term="Migration" /><summary type="html">use github</summary></entry><entry><title type="html">Doc4SM WEB OPEN</title><link href="https://lahuman.github.io/20180116-phase-copy/" rel="alternate" type="text/html" title="Doc4SM WEB OPEN" /><published>2018-01-16T00:00:00+09:00</published><updated>2018-01-16T00:00:00+09:00</updated><id>https://lahuman.github.io/20180116-phase%20copy</id><content type="html" xml:base="https://lahuman.github.io/20180116-phase-copy/">&lt;h1 id=&quot;개인-프로젝트인데-손이-많이-가겠다&quot;&gt;개인 프로젝트인데.. 손이 많이 가겠다.&lt;/h1&gt;

&lt;p&gt;기존 소스가 너무 엉망이다. 급급하게 만들어둔 티가 많이 난다.&lt;/p&gt;

&lt;p&gt;오픈소스화 하려면 손이 많이 가겠다…&lt;/p&gt;

&lt;h2 id=&quot;접속-정보&quot;&gt;&lt;a href=&quot;http://lahuman.iptime.org:9025/admin/main.do&quot;&gt;접속 정보&lt;/a&gt;&lt;/h2&gt;</content><author><name></name></author><category term="단상" /><summary type="html">열긴 했는데... 오픈소스로 하려면 다 엎어야 할듯....</summary></entry><entry><title type="html">Eclipse와 JDK9에서 @PostConstruct 어노테이션 오류</title><link href="https://lahuman.github.io/JDK9_eclipse_PostConstruct_error/" rel="alternate" type="text/html" title="Eclipse와 JDK9에서 @PostConstruct 어노테이션 오류" /><published>2018-01-12T00:00:00+09:00</published><updated>2018-01-12T00:00:00+09:00</updated><id>https://lahuman.github.io/JDK9_eclipse_PostConstruct_error</id><content type="html" xml:base="https://lahuman.github.io/JDK9_eclipse_PostConstruct_error/">&lt;h1 id=&quot;eclipse와-jdk9에서-postconstruct-어노테이션-오류&quot;&gt;Eclipse와 JDK9에서 @PostConstruct 어노테이션 오류&lt;/h1&gt;

&lt;p&gt;오랜만에 Eclipse를 띄어서 이전 프로젝트를 확인 하는데 @PostConstruct 어노테이션을 찾을 수 없다는 오류가 보였다.&lt;/p&gt;

&lt;p&gt;따로 변경한 것은 JDK 버젼을 8에서 9로 업그레이드 한거 말곤 없었다.&lt;/p&gt;

&lt;p&gt;검색을 해보니 해당 문제에 대한 해결책이 있었다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;eclipse.ini&lt;/strong&gt; 파일에 &lt;strong&gt;–add-modules=java.se.ee&lt;/strong&gt; 옵션을 추가 하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-vmargs
--add-modules=java.se.ee
-Dosgi.requiredJavaVersion=1.8
-Xms256m
-Xmx1024m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;JDK9이 아직 안정화가 안된건지, 여러 모듈에서 오류가 발생한다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=493761&quot;&gt;Platform won’t launch on Java 9-ea builds (InjectionException: NoClassDefFoundError: javax/annotation/PostConstruct)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="JDK9" /><category term="Eclipse" /><summary type="html">결국 JDK9와 Eclipse의 콜라보 오류</summary></entry><entry><title type="html">MariaDB를 binary tar.gz 파일로 설치 하자</title><link href="https://lahuman.github.io/mariadb_install_with_tar.gz/" rel="alternate" type="text/html" title="MariaDB를 binary tar.gz 파일로 설치 하자" /><published>2018-01-11T00:00:00+09:00</published><updated>2018-01-11T00:00:00+09:00</updated><id>https://lahuman.github.io/mariadb_install_with_tar.gz</id><content type="html" xml:base="https://lahuman.github.io/mariadb_install_with_tar.gz/">&lt;h1 id=&quot;mariadb를-binary-targz-파일로-설치-하자&quot;&gt;MariaDB를 binary tar.gz 파일로 설치 하자&lt;/h1&gt;

&lt;p&gt;일반적으로 설치 방법은 다음과 같이 3개의 방법이 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;패키지 관리 명령어를 이용한 설치
    &lt;ul&gt;
      &lt;li&gt;데비안 계열의 &lt;strong&gt;apt-get&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;레드햇 계열의 &lt;strong&gt;yum&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;배포 파일을 이용한 설치
    &lt;ul&gt;
      &lt;li&gt;데비안 계열의 &lt;strong&gt;.deb&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;레드햇 계열의 &lt;strong&gt;.rpm&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;바이너리 파일을 이용한 설치
    &lt;ul&gt;
      &lt;li&gt;실행파일로 &lt;strong&gt;tar.gz&lt;/strong&gt; 형태 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;물론 모든 프로그램이 상위 3가지 버젼을 제공하지는 않는다.&lt;/p&gt;

&lt;p&gt;오늘 정리할 내용은 이중 바이너리 파일을 이용한 설치이다.&lt;/p&gt;

&lt;p&gt;먼저 바이너리 파일을 이용한 설치의 경우 설치 &amp;amp; 삭제가 쉽다는 장점이 있다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;압축을 풀어서 놓은 디렉토리가 설치 위치가 된다.&lt;/li&gt;
  &lt;li&gt;해당 디렉토리를 삭제하면 끝!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하지만 다음과 같은 단점도 있다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;의존성있는 라이브러리 설치 따로 진행 해야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;설치-환경&quot;&gt;설치 환경&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;OS : Ubuntu 16.04.3 LTS&lt;/li&gt;
  &lt;li&gt;Mariadb Version : 10.2.12&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mariadb-binary-download&quot;&gt;Mariadb Binary Download&lt;/h2&gt;

&lt;p&gt;Mariadb Binary Download URL : https://downloads.mariadb.com/MariaDB/mariadb-10.2.12/bintar-linux-x86_64/&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mariadb-10.2.12-linux-x86_64.tar.gz&lt;/strong&gt; 파일을 다운 받는다.&lt;/p&gt;

&lt;h2 id=&quot;설치-진행&quot;&gt;설치 진행&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mariadb.com/kb/en/library/installing-mariadb-binary-tarballs/&quot;&gt;참고 자료 1&lt;/a&gt;를 참고 하여 설치를 진행 한다.
&lt;strong&gt;설치는 root 계정으로 한다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;groupadd mysql
useradd -g mysql mysql
cd /usr/local
tar -zxvpf /path-to/mariadb-VERSION-OS.tar.gz
ln -s mariadb-VERSION-OS mysql
cd mysql
./scripts/mysql_install_db --user=mysql
chown -R root .
chown -R mysql data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MariaDB 의존성 프로그램 설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install libaio1 libaio-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;설정&quot;&gt;설정&lt;/h2&gt;

&lt;p&gt;설치가 완료 되면 설정을 진행 한다.&lt;/p&gt;

&lt;p&gt;설정을 하기 전에 my.cnf 파일을 정해야 한다.&lt;/p&gt;

&lt;p&gt;mariadb 압축 해제된 디렉토리를 보면 support-files 디렉토리가 있다.&lt;/p&gt;

&lt;p&gt;그 안을 보면 다음과 같은 설정 파일 들이 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;my-huge.cnf&lt;/li&gt;
  &lt;li&gt;my-innodb-heavy-4G.cnf&lt;/li&gt;
  &lt;li&gt;my-large.cnf&lt;/li&gt;
  &lt;li&gt;my-medium.cnf&lt;/li&gt;
  &lt;li&gt;my-small.cnf&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;사용하려는 환경에 맞는 cnf파일을 mysql 디렉토리로 my.cnf 이름으로 변경하여 복사한다.&lt;/p&gt;

&lt;p&gt;이후 다음 명령어를 실행한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./scripts/mysql_install_db --user=mysql --defaults-file=my.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;실행&quot;&gt;실행&lt;/h2&gt;

&lt;p&gt;설정이 완료 되면 이제 MariaDB를 실행 할 수 있다.&lt;/p&gt;

&lt;p&gt;실행 명령어&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/mysqld_safe --datadir='./data' &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행 이후, 가장 먼저 root의 비밀번호를 설정한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ./bin/mysqladmin -u root password 'New Password'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;접속-테스트&quot;&gt;접속 테스트&lt;/h2&gt;

&lt;p&gt;접속 테스트 명령은 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ./bin/mysql -uroot -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mariadb.com/kb/en/library/installing-mariadb-binary-tarballs/&quot;&gt;Installing MariaDB Binary Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="mariadb" /><category term="install" /><summary type="html">설치는 별거 없다.</summary></entry><entry><title type="html">올해 안에 Doc4SM 사이트 OPEN과 오픈소스화 하자!!</title><link href="https://lahuman.github.io/20180110-phase/" rel="alternate" type="text/html" title="올해 안에 Doc4SM 사이트 OPEN과 오픈소스화 하자!!" /><published>2018-01-10T00:00:00+09:00</published><updated>2018-01-10T00:00:00+09:00</updated><id>https://lahuman.github.io/20180110-phase</id><content type="html" xml:base="https://lahuman.github.io/20180110-phase/">&lt;h1 id=&quot;개인-프로젝트-중에서-유일하게-팔린-doc4sm&quot;&gt;개인 프로젝트 중에서 유일하게 팔린 Doc4SM&lt;/h1&gt;

&lt;p&gt;1군데 납품되고(감사하게도) 존재 자체가 너무 미미한 개인 사이트였다.&lt;/p&gt;

&lt;p&gt;몇일동안 열어 두기도 했었지만, 지금은 다 날려 먹고 없다.&lt;/p&gt;

&lt;p&gt;소스는 가지고 있으니 차근 차근 준비해서 올해 오픈소스화 하는 것이 목표다.&lt;/p&gt;

&lt;h2 id=&quot;화이팅-아자-아자&quot;&gt;화이팅! 아자 아자!&lt;/h2&gt;</content><author><name></name></author><category term="단상" /><summary type="html">오픈소스화는 작년에 할려다가 실패 한거지만....</summary></entry></feed>