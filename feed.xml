<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2018-06-22T10:52:49+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">D3] TEXT 태그에 대한 CSS</title><link href="https://lahuman.github.io/d3_text_css/" rel="alternate" type="text/html" title="D3] TEXT 태그에 대한 CSS" /><published>2018-06-22T00:00:00+09:00</published><updated>2018-06-22T00:00:00+09:00</updated><id>https://lahuman.github.io/d3_text_css</id><content type="html" xml:base="https://lahuman.github.io/d3_text_css/">&lt;h1 id=&quot;d3를-이용한-그래프에-표기되는-text에-대한-css-정보&quot;&gt;D3를 이용한 그래프에 표기되는 TEXT에 대한 CSS 정보&lt;/h1&gt;

&lt;h2 id=&quot;text의-출력-위치-조절&quot;&gt;TEXT의 출력 위치 조절&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/CSS/white-space&quot;&gt;d3 svg text alignment (v3)&lt;/a&gt;를 보면 정리가 잘되어 있다.&lt;/p&gt;

&lt;p&gt;기본적으로 시작점부터 오른쪽으로 텍스트가 출력되는데, &lt;strong&gt;text-anchor&lt;/strong&gt;에 값을 &lt;strong&gt;middle&lt;/strong&gt;, &lt;strong&gt;end&lt;/strong&gt;로 변경하여 조절 가능하다&lt;/p&gt;

&lt;p&gt;기본 값은 &lt;strong&gt;start&lt;/strong&gt; 이다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nodeg.append(&quot;text&quot;)
        .style(&quot;font-size&quot;, &quot;0.85em&quot;)
        .attr(&quot;text-anchor&quot;, &quot;middle&quot;)
        .attr(&quot;fill&quot;, parent.atomTextColor)
        .style(&quot;pointer-events&quot;, &quot;none&quot;)
        .style(&quot;color&quot;, &quot;#222&quot;)
        .text(function(d) {
            return d.text;
        });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;text-multiline-출력&quot;&gt;TEXT Multiline 출력&lt;/h2&gt;
&lt;p&gt;D3를 이용한 그래프에서 일반적으로 상요되는 TEXT 테그는 &lt;br /&gt;과 \n이 동작하지 않는다.&lt;/p&gt;

&lt;p&gt;하지만 &lt;strong&gt;white-space&lt;/strong&gt;에 &lt;strong&gt;pre&lt;/strong&gt; 스타일을 주게 되면 개행문자(\n)가 동작 한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nodeg.append(&quot;text&quot;)
            .attr('y', function(d) {return +30;})
            .attr(&quot;dy&quot;, &quot;.35em&quot;)
            .attr(&quot;class&quot;, &quot;atomsText&quot;)
            .style(&quot;white-space&quot;, &quot;pre&quot;)
            .style(&quot;font-size&quot;, &quot;0.85em&quot;)
            .attr(&quot;text-anchor&quot;, &quot;middle&quot;)
            .attr(&quot;fill&quot;, parent.atomTextColor)
            .style(&quot;pointer-events&quot;, &quot;none&quot;)
            .style(&quot;color&quot;, &quot;#222&quot;)
            .text(function(d) {
                return d.desc.replace(/&amp;lt;br&amp;gt;/gi,&quot;\n&quot;);
            });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/CSS/white-space&quot;&gt;white-space&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/CSS/white-space&quot;&gt;d3 svg text alignment (v3)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/lahuman/d3-molecule&quot;&gt;d3-molecule&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><category term="d3" /><category term="text" /><category term="css" /><summary type="html">피곤하다, 피곤해</summary></entry><entry><title type="html">월요일 이번주의 시작은 매우 피곤</title><link href="https://lahuman.github.io/20180618-phase/" rel="alternate" type="text/html" title="월요일 이번주의 시작은 매우 피곤" /><published>2018-06-18T00:00:00+09:00</published><updated>2018-06-18T00:00:00+09:00</updated><id>https://lahuman.github.io/20180618-phase</id><content type="html" xml:base="https://lahuman.github.io/20180618-phase/">&lt;h1 id=&quot;월요일은-피곤해&quot;&gt;월요일은 피곤해&lt;/h1&gt;

&lt;p&gt;오늘은 주말동안 일이 많아서 더욱 피곤하다.&lt;/p&gt;

&lt;p&gt;금요일에 시작한 워크샵은 토요일 새벽에 빠져나와 새벽 3시쯤 집에서 잠이 들었고,&lt;/p&gt;

&lt;p&gt;토요일에는 하는 일 없이 동네에서 돌아다니고 저녁에 잠깐 불꽃놀이 하니 하루가 끝났고,&lt;/p&gt;

&lt;p&gt;일요일에는 채윤이 자전거 가르쳐 준다고 30분 따라 다녔더니 허리부터 안아픈 곳이 없다.&lt;/p&gt;

&lt;h2 id=&quot;오늘은-해야할-일을-정리-하고-진행-하자-화이팅&quot;&gt;오늘은 해야할 일을 정리 하고 진행 하자! 화이팅&lt;/h2&gt;</content><author><name></name></author><category term="단상" /><summary type="html">피곤하다, 피곤해</summary></entry><entry><title type="html">아들의 태세 전환이 예술이다.</title><link href="https://lahuman.github.io/20180615-phase/" rel="alternate" type="text/html" title="아들의 태세 전환이 예술이다." /><published>2018-06-15T00:00:00+09:00</published><updated>2018-06-15T00:00:00+09:00</updated><id>https://lahuman.github.io/20180615-phase</id><content type="html" xml:base="https://lahuman.github.io/20180615-phase/">&lt;h1 id=&quot;아침에-출근-하려는데-아들이-일어났다&quot;&gt;아침에 출근 하려는데 아들이 일어났다.&lt;/h1&gt;

&lt;p&gt;동현 : “아빠 회사 가지 마요”&lt;/p&gt;

&lt;p&gt;나 : “아빠가 회사에 가야 돈을 벌어서 우리 동현이 맛난 것도 사주고, 유치원도 보내지.”&lt;/p&gt;

&lt;p&gt;동현 : “자동차도??”&lt;/p&gt;

&lt;p&gt;나 : “그럼~ 동현이 자동차 사줄라면 아빠가 더 열심히 일해야해.”&lt;/p&gt;

&lt;p&gt;동현 : “아빠 안녕~”&lt;/p&gt;

&lt;p&gt;나 : “응? ㅋㅋㅋㅋㅋ”&lt;/p&gt;

&lt;p&gt;요즘 부쩍 애교도 많아지고 말도 많이 하는 귀염둥이 아들.&lt;/p&gt;</content><author><name></name></author><category term="단상" /><summary type="html">귀염둥이</summary></entry><entry><title type="html">이번주 수요일은 투표하는 날!</title><link href="https://lahuman.github.io/20180611-phase/" rel="alternate" type="text/html" title="이번주 수요일은 투표하는 날!" /><published>2018-06-11T00:00:00+09:00</published><updated>2018-06-11T00:00:00+09:00</updated><id>https://lahuman.github.io/20180611-phase</id><content type="html" xml:base="https://lahuman.github.io/20180611-phase/">&lt;h1 id=&quot;아직까지-투표-안한적이-없다&quot;&gt;아직까지 투표 안한적이 없다.&lt;/h1&gt;

&lt;h1 id=&quot;소중한-내표를-꼭-행사-하자&quot;&gt;소중한 내표를 꼭 행사 하자!&lt;/h1&gt;</content><author><name></name></author><category term="단상" /><summary type="html">소중한 내 표를 행사하자!</summary></entry><entry><title type="html">바쁘게 살고 있는 나에게 정말 필요할까?</title><link href="https://lahuman.github.io/20180607-phase/" rel="alternate" type="text/html" title="바쁘게 살고 있는 나에게 정말 필요할까?" /><published>2018-06-07T00:00:00+09:00</published><updated>2018-06-07T00:00:00+09:00</updated><id>https://lahuman.github.io/20180607-phase</id><content type="html" xml:base="https://lahuman.github.io/20180607-phase/">&lt;h1 id=&quot;난-욕심이-많다&quot;&gt;난 욕심이 많다.&lt;/h1&gt;

&lt;p&gt;그래서 정말 힘들다. 욕심을 다 채우지도 못하는 일도 종종 있다.&lt;/p&gt;

&lt;p&gt;다만, 살아가면서 느낀 확실한 건! 멈추지 않으면 진행중이라는 거다.&lt;/p&gt;

&lt;p&gt;남이 아무리 실패라고 안된다고 하더라도 내가 멈추지 않으면 아직 끝난게 아니다.&lt;/p&gt;

&lt;h3 id=&quot;가끔은-내가-왜이러나-싶을때도-있다&quot;&gt;가끔은 내가 왜이러나 싶을때도 있다.&lt;/h3&gt;</content><author><name></name></author><category term="단상" /><summary type="html">욕심은 많고 능력은 없고... 몸만 고생 중</summary></entry><entry><title type="html">MongoDB]설치와 권한 설정</title><link href="https://lahuman.github.io/mongodb_install_auth/" rel="alternate" type="text/html" title="MongoDB]설치와 권한 설정" /><published>2018-05-28T00:00:00+09:00</published><updated>2018-05-28T00:00:00+09:00</updated><id>https://lahuman.github.io/mongodb_install_auth</id><content type="html" xml:base="https://lahuman.github.io/mongodb_install_auth/">&lt;h1 id=&quot;mongodb-설치--권한-설정&quot;&gt;MongoDB] 설치 &amp;amp; 권한 설정&lt;/h1&gt;

&lt;p&gt;CentOS 7에서 MongoDB를 설치하고 권한을 설정하여 권한이 없는 사용자는 조회/등록/수정/삭제 기능을 사용하지 못하게 한다.
MongoDB는 3.6 버젼 기준으로 설명한다.&lt;/p&gt;

&lt;h2 id=&quot;1-패키지-매니저에-mongodb-추가&quot;&gt;1. 패키지 매니저에 MongoDB 추가&lt;/h2&gt;

&lt;p&gt;먼저 &lt;strong&gt;/etc/yum.repos.d/mongodb-org-3.6.repo&lt;/strong&gt; 파일을 생성하고 다음 내역을 추가 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[mongodb-org-3.6]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.6/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-3.6.asc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-mongodb-설치&quot;&gt;2. MongoDB 설치&lt;/h2&gt;

&lt;p&gt;MongoDB 패키지 설치를 진행 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum install -y mongodb-org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 완료 되면 mongod 프로세스를 시작한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service mongod start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;프로세스에 대한 정지 명령어는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service mongod stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;만약 MongoDB를 삭제 하려면, mongod 프로세스를 정지 하고 mongodb 패키지를 삭제 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum erase $(rpm -qa | grep mongodb-org)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 완료 되었으면 설치된 MongoDB로 접속 하여 테스트를 진행 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mongo --host 127.0.0.1:27017
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-mongodb-사용자-추가&quot;&gt;3. MongoDB 사용자 추가&lt;/h2&gt;

&lt;p&gt;먼저 admin 권한을 설정한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use admin
db.createUser(
  {
    user: &quot;myUserAdmin&quot;,
    pwd: &quot;abc123&quot;,
    roles: [ { role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; } ]
  }
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MongoDB 서비스를 재시작 하고, 접속시 로그인을 해보자&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 접속시 ID/PW 작성
mongo --port 27017 -u &quot;myUserAdmin&quot; -p &quot;abc123&quot; --authenticationDatabase &quot;admin&quot;

# 접속후 Login
mongo --port 27017
use admin
db.auth(&quot;myUserAdmin&quot;, &quot;abc123&quot; )

# 계정 추가
use test
db.createUser(
  {
    user: &quot;myTester&quot;,
    pwd: &quot;xyz123&quot;,
    roles: [ { role: &quot;readWrite&quot;, db: &quot;test&quot; },
             { role: &quot;read&quot;, db: &quot;reporting&quot; } ]
  }
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하지만 아직까지는 Login을 하지 않아도 조회/등록등의 기능이 가능하다.&lt;/p&gt;

&lt;h2 id=&quot;4-mongodb-권한-설정&quot;&gt;4. MongoDB 권한 설정&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;/etc/mongod.conf&lt;/strong&gt; 설정 파일에서 다음 항목을 수정한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;security:
    authorization: &quot;enabled&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;MongoDB 서비스를 재기동 하고 접속 테스트를 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service mongod restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;로그인 이후에 데이터 조회나 등록을 하려고 하면 권한이 없다는 메시지가 표출 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mongo --port 27017

&amp;gt; db.test.insert( {x:1, y:1} )
WriteResult({
	&quot;writeError&quot; : {
		&quot;code&quot; : 13,
		&quot;errmsg&quot; : &quot;not authorized on test to execute command { insert: \&quot;test\&quot;, ordered: true, $db: \&quot;test\&quot; }&quot;
	}
})
&amp;gt; db.test.find( {} )
Error: error: {
	&quot;ok&quot; : 0,
	&quot;errmsg&quot; : &quot;not authorized on test to execute command { find: \&quot;test\&quot;, filter: {}, $db: \&quot;test\&quot; }&quot;,
	&quot;code&quot; : 13,
	&quot;codeName&quot; : &quot;Unauthorized&quot;
}
# 로그인 진행
&amp;gt; db.auth('myTester', 'xyz123')
1
&amp;gt; db.test.find( {} )
{ &quot;_id&quot; : ObjectId(&quot;5b0b8c26efefcbe94ba75c29&quot;), &quot;x&quot; : 1, &quot;y&quot; : 1 }
&amp;gt; db.test.insert( {x:1, y:1} )
WriteResult({ &quot;nInserted&quot; : 1 })
&amp;gt; db.test.find( {} )
{ &quot;_id&quot; : ObjectId(&quot;5b0b8c26efefcbe94ba75c29&quot;), &quot;x&quot; : 1, &quot;y&quot; : 1 }
{ &quot;_id&quot; : ObjectId(&quot;5b0b8d6753b23794e42015e9&quot;), &quot;x&quot; : 1, &quot;y&quot; : 1 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/&quot;&gt;Install MongoDB Community Edition on Red Hat Enterprise or CentOS Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/enable-authentication/&quot;&gt;Enable Auth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/mongoaudit/how-to-enable-authentication-on-mongodb-b9e8a924efac&quot;&gt;How to Enable Authentication on MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="mongodb" /><category term="install" /><category term="auth" /><summary type="html">Centos 7에서 설치 후 권한 설정 하기</summary></entry><entry><title type="html">사랑한다는 말보다 일하라</title><link href="https://lahuman.github.io/20180525/" rel="alternate" type="text/html" title="사랑한다는 말보다 일하라" /><published>2018-05-25T00:00:00+09:00</published><updated>2018-05-25T00:00:00+09:00</updated><id>https://lahuman.github.io/20180525</id><content type="html" xml:base="https://lahuman.github.io/20180525/">&lt;h1 id=&quot;백마디-말보다-한가지-일해주는게-좋다&quot;&gt;백마디 말보다 한가지 일해주는게 좋다.&lt;/h1&gt;

&lt;p&gt;아내가 나에게 자주 하는 말이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;사랑해?? 사랑하면 나를 위해 일해줘! 말로만 하는 사랑 말고 내일을 도와 주고 함께 해줘!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;가사로 힘든 아내를 위해 지금 오징어 얼굴로 웃어 주기 보다, 설겆이와 청소를 하자!&lt;/p&gt;

&lt;h2 id=&quot;사랑받는-남편이-되자&quot;&gt;사랑받는 남편이 되자&lt;/h2&gt;</content><author><name></name></author><category term="단상" /><summary type="html">정수연 여사의 말씀</summary></entry><entry><title type="html">Python]paramiko 모듈에서 su 명령어로 계정 전환</title><link href="https://lahuman.github.io/python_paramiko_sudo/" rel="alternate" type="text/html" title="Python]paramiko 모듈에서 su 명령어로 계정 전환" /><published>2018-05-17T00:00:00+09:00</published><updated>2018-05-17T00:00:00+09:00</updated><id>https://lahuman.github.io/python_paramiko_sudo</id><content type="html" xml:base="https://lahuman.github.io/python_paramiko_sudo/">&lt;h1 id=&quot;pythonparamiko-모듈에서-su-명령어로-계정-전환&quot;&gt;Python]paramiko 모듈에서 su 명령어로 계정 전환&lt;/h1&gt;

&lt;p&gt;python에서 ssh에 연결 후 command를 실행하기 위해 사용하는 &lt;a href=&quot;http://www.paramiko.org/&quot;&gt;paramiko&lt;/a&gt; 모듈에서 간단하게 command를 실행하는 코드는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import paramiko

ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy()) # host keys 관련 설정
ssh_client.connect('127.0.0.1', username='lahuman', password='pass')

stdin, stdout, stderr = ssh_client.exec_command('ls')
stdin.flush()
time.sleep(1)
print stdout.read()

## 결과
lahuman
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ssh.com/ssh/host-key&quot;&gt;host kyes&lt;/a&gt; 관련 설정은 ssh로 다른 서버로 접근시, key 값을 저장할 지에 대한 처리 이다. paramiko.AutoAddPolicy() 로 설정시 자동으로 yes 처리 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;ssh_client.exec_command(cmd)&lt;/strong&gt;를 이용할 경우 매 명령어 마다 새로운 세션이 부여되어, 다른 계정으로 전환 후 작업을 진행 할 수 없다.&lt;/p&gt;

&lt;p&gt;하나의 세션에서 작업을 연속되게 진행하고 싶다면 &lt;strong&gt;channel = ssh_client.invoke_shell()&lt;/strong&gt;를 이용하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import paramiko

def main():
    ssh_client = None
    recv_size = 9999
    try:
		ssh_client = paramiko.SSHClient()
		ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy()) # host keys 관련 설정
		ssh_client.connect('127.0.0.1', username='lahuman', password='pass')

        channel = ssh_client.invoke_shell()
        channel.send('su -\n')
        outdata, errdata = waitStrems(channel)
        print outdata

        channel.send('pass\n')
        outdata, errdata = waitStrems(channel)
        print outdata

        channel.send('whoami\n')
        outdata, errdata = waitStrems(channel)
        print outdata

    finally:
        if ssh_client is not None:
            ssh_client.close()


def waitStrems(chan):
    time.sleep(1)
    outdata=errdata = &quot;&quot;

    while chan.recv_ready():
        outdata += chan.recv(1000)
    while chan.recv_stderr_ready():
        errdata += chan.recv_stderr(1000)

    return outdata, errdata

if __name__ == &quot;__main__&quot;:
    main()


## 결과
Last login: Thu May 17 01:34:37 2018 from 10.0.2.2
su -
[lahuman@localhost ~]$ su -
Password: 

Last login: Thu May 17 01:35:10 EDT 2018
[root@localhost ~]# 
whoami
root
[root@localhost ~]# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;세션을 유지한 상태로 명령어를 실행하기 위해서는 channel을 가져오고 channel을 계속 유지 해야 한다.&lt;/p&gt;

&lt;p&gt;각 명령의 결과가 문제 없이 종료 되었는지는&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; while chan.recv_ready():
        outdata += chan.recv(1000)
    while chan.recv_stderr_ready():
        errdata += chan.recv_stderr(1000)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 통해서 확인 한다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.paramiko.org/&quot;&gt;paramiko&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ssh.com/ssh/host-key&quot;&gt;host kyes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="python" /><category term="paramiko" /><summary type="html">하나의 ssh 세션에서 작업 하기</summary></entry><entry><title type="html">신경 끄기의 기술</title><link href="https://lahuman.github.io/20180515-phase/" rel="alternate" type="text/html" title="신경 끄기의 기술" /><published>2018-05-15T00:00:00+09:00</published><updated>2018-05-15T00:00:00+09:00</updated><id>https://lahuman.github.io/20180515-phase</id><content type="html" xml:base="https://lahuman.github.io/20180515-phase/">&lt;h1 id=&quot;신경-끄기의-기술&quot;&gt;신경 끄기의 기술&lt;/h1&gt;

&lt;p&gt;신경 끄기의 기술, 마크 맨슨의 책을 읽고 있다.&lt;/p&gt;

&lt;p&gt;포기 해야 할 일(몸짱 되기와 같은)은 신경 쓰지 말고 정말 중요한 것만 신경 쓰라는 내용이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;읽으면서 내가 너무 힘들게 사는건 아닌가?&lt;/strong&gt; 라는 생각을 했다.&lt;/p&gt;

&lt;p&gt;난 특별하지 않다. 평범하다 그것을 받아 들이고, 내게 주어진 일 중 중요한 일에 더 집중하자.&lt;/p&gt;

&lt;h2 id=&quot;참조&quot;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/24/goods/54233937&quot;&gt;신경 끄기의 기술&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="단상" /><summary type="html">마크 맨슨의 책</summary></entry><entry><title type="html">Centos 7.5에서 Python Multiprocess 좀비프로세스 문제</title><link href="https://lahuman.github.io/Centos7.5_python_multiprocess/" rel="alternate" type="text/html" title="Centos 7.5에서 Python Multiprocess 좀비프로세스 문제" /><published>2018-05-10T00:00:00+09:00</published><updated>2018-05-10T00:00:00+09:00</updated><id>https://lahuman.github.io/Centos7.5_python_multiprocess</id><content type="html" xml:base="https://lahuman.github.io/Centos7.5_python_multiprocess/">&lt;h1 id=&quot;centos-75에서-python-multiprocess-좀비-프로세스-문제&quot;&gt;CentOS 7.5에서 Python MultiProcess 좀비 프로세스 문제&lt;/h1&gt;

&lt;h2 id=&quot;환경-정보&quot;&gt;환경 정보&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;OS : CentOS 7.5&lt;/li&gt;
  &lt;li&gt;Language : Python 2.7.5&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;현상&quot;&gt;현상&lt;/h2&gt;
&lt;p&gt;프로그램에서 불규칙적으로 Multiprocess가 종료 되지 않고 남아 있음.
kill -9 {PID} 로 Multiprocess를 종료 시키면, 종료 시점으로 새로운 프로세스가 생성되며 실행 시간은 00:00 으로 변경없이 유지됨.&lt;/p&gt;

&lt;h2 id=&quot;문제점&quot;&gt;문제점&lt;/h2&gt;
&lt;p&gt;Multiprocess는 Memory 자원을 반환 하지 않고 계속 점유 되는 문제 발생&lt;/p&gt;

&lt;h2 id=&quot;코드-샘플&quot;&gt;코드 샘플&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from multiprocessing import Pool

def processing(arge):
    while True:
        print arge
        time.sleep(10)

if __name__ == '__main__':
    while True:
        try:
            pool = Pool(processes=2)

            results = pool.map(processing, [1,2,3,4,5,6,7,8,9])
            pool.close()
            pool.join()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;임시-해결책&quot;&gt;임시 해결책&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;발등에 떨어진 불을 끄기 위한 임시 해결책 입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;특정 시간 이상 좀비 프로세스로 돌고 있을 경우 강제로 kill 하는 프로그램 작성&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#-*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getdefaultencoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setdefaultencoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getdefaultencoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;



&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;commands&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# python_path &amp;amp; name&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;python_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;python_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# sleep&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#time_sleep_set	= 'day'	# time.sleep(day)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#time_sleep_set	= 'min'	# time.sleep(min)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time_sleep_set&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sec'&lt;/span&gt;	&lt;span class=&quot;c&quot;&gt;# time.sleep(sec)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time_sleep_int&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;chk_kill_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#minutes&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;chk_proc_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Process Name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chk_proc&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chk_proc_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;pid_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getoutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ps -eo pid,ppid,lstart,command | grep &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chk_proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; | grep -v grep&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;time_chk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chk_kill_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid_time_cmd&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;re_dst_str&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid_time_cmd&lt;/span&gt;

				&lt;span class=&quot;n&quot;&gt;re_pattern&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r'^\s*(\d+)\s+(\d+)\s+(?:\w+)\s+(\w+)\s+(\d{1,2})\s+(\d\d):(\d\d):(\d\d)\s+(\d{4})\s+(.*)'&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;re_compile&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re_dst_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;re_findlen&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findlen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;


					&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;ppid&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_m&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_d&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_h&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_i&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_s&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_y&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

					&lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_s&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;H:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;M:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

					&lt;span class=&quot;c&quot;&gt;# if ( ppid == '1' ): continue&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_chk&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
						&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'kill -9 '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# while True:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;os-python-module-등의-환경적인-원인이-있을-수-있다고-생각은-하고-있다-추가적으로-python-version을-올리는-것에-대하여-고민-중이다&quot;&gt;OS, Python, Module 등의 환경적인 원인이 있을 수 있다고 생각은 하고 있다. 추가적으로 Python version을 올리는 것에 대하여 고민 중이다.&lt;/h2&gt;</content><author><name></name></author><category term="centos" /><category term="multiprocess" /><summary type="html">죽여도 살아난다.</summary></entry></feed>