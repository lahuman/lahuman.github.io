<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://lahuman.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.8.4">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2019-04-30T23:08:18+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">입사 5개월차 후기</title><link href="https://lahuman.github.io/20190430/" rel="alternate" type="text/html" title="입사 5개월차 후기" /><published>2019-04-30T00:00:00+09:00</published><updated>2019-04-30T00:00:00+09:00</updated><id>https://lahuman.github.io/20190430</id><content type="html" xml:base="https://lahuman.github.io/20190430/">&lt;h1 id=&quot;puppeteer에서-post로-요청&quot;&gt;puppeteer에서 POST로 요청&lt;/h1&gt;

&lt;p&gt;기본적으로 오래된 조직은 하향평준화가 된다고 한다.&lt;/p&gt;

&lt;p&gt;지금 팀은 상향평준화를 위해 많은 노력을 한다.&lt;/p&gt;

&lt;p&gt;코드리뷰, 페어코딩, 쇼미더코딩, CI/CD 구축 이라던지, 외국 컨퍼런스 참가 및 여러 활동을 지원 한다.&lt;/p&gt;

&lt;p&gt;하지만 팀에 적응 못하거나, 힘들어 하는 인력은 교체한다. 입사하고 5개월 동안 4분 정도 다른팀으로 이동하셨고, 다른팀에 가신분들은 새로운 팀에 잘 적응하고 있다.&lt;/p&gt;

&lt;p&gt;팀원들간에 건전한 경쟁을 하고 있으며, 늘 새로운 것을 익히고 업무에 반영해본다.
(팀에 오래 계신 분들일 수록 실력이 좋다.)&lt;/p&gt;

&lt;p&gt;처음 입사하고는 한달간 정신이 없었다. 힘들기도 하고 너무 빠르게 변하는 팀에 적응을 못하였다.&lt;/p&gt;

&lt;p&gt;지난 5개월을 돌이켜 보면 최근 5년 중 가장 많이 발전하고 변화하고 있다.&lt;/p&gt;

&lt;p&gt;R을 이용해 동시 단어출현 분석도 구현해 보고, 형태소 분석기를 설치해 다른 팀원이 사용할수 있게 구성해 보기도 하고, AWS의 LAMBDA, EC2, RDS등 여러 경험을 했다.&lt;/p&gt;

&lt;p&gt;얼마 전 새로운 분들을 모시기 위해 이력서를 받아 코딩 테스트를 진행하였다.
실력 좋은 분들이 많이 지원해 주셨고, 조만간 출근 하시는 분도 계신다.&lt;/p&gt;

&lt;p&gt;많이 기대가 된다.&lt;/p&gt;</content><category term="단상" /><summary type="html">상향 평준화를 위해서...</summary></entry><entry><title type="html">puppeteer에서 POST로 요청 날리기</title><link href="https://lahuman.github.io/puppeteer_post_request/" rel="alternate" type="text/html" title="puppeteer에서 POST로 요청 날리기" /><published>2019-04-25T00:00:00+09:00</published><updated>2019-04-25T00:00:00+09:00</updated><id>https://lahuman.github.io/puppeteer_post_request</id><content type="html" xml:base="https://lahuman.github.io/puppeteer_post_request/">&lt;h1 id=&quot;puppeteer에서-post로-요청-날리기&quot;&gt;puppeteer에서 POST로 요청 날리기&lt;/h1&gt;

&lt;p&gt;puppeteer에서 request를 POST로 요청 하기 위해서는 다음과 같은 설정을 해야 합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;await page.setRequestInterception(true);
// create a flag to only modify the initial request
let reformatFirstRequest = true;

page.on('request', interceptedRequest =&amp;gt; {
  if (reformatFirstRequest) {
    console.log('first-request');
    reformatFirstRequest = false;
    interceptedRequest.continue({
      method: 'POST',
      postData: JSON.stringify(data),
      headers: { 'Content-Type': 'application/json' }
    });
  } else {
    interceptedRequest.continue();
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;interceptedRequest 를 한번만 하지 않으면 이후 해당 request에 대한 404 오류가 떨어질 수 있다.&lt;/p&gt;

&lt;h4 id=&quot;끗&quot;&gt;끗~&lt;/h4&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/issues/669&quot;&gt;Send POST request to a page and take screenshot #669&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="pupeteer" /><category term="post" /><summary type="html">쉬울꺼라 생각했는데 쉽지 않았음</summary></entry><entry><title type="html">nodejs port forwarding 처리</title><link href="https://lahuman.github.io/nodejs_port_forwarding/" rel="alternate" type="text/html" title="nodejs port forwarding 처리" /><published>2019-04-23T00:00:00+09:00</published><updated>2019-04-23T00:00:00+09:00</updated><id>https://lahuman.github.io/nodejs_port_forwarding</id><content type="html" xml:base="https://lahuman.github.io/nodejs_port_forwarding/">&lt;h1 id=&quot;nodejs-port-forwarding-처리&quot;&gt;nodejs port forwarding 처리&lt;/h1&gt;

&lt;p&gt;https를 설정하고 나니, 기존 80 포트로 요청이 있을 경우, 443으로 redirect 하는 방법을 찾아보았다.&lt;/p&gt;

&lt;p&gt;구글을 확인해보니, 다음과 같이 쉽게 처리 할 수 있었다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Redirect from http port 80 to https
var http = require('http');
http.createServer(function (req, res) {
    res.writeHead(301, { &quot;Location&quot;: &quot;https://&quot; + req.headers['host'] + req.url });
    res.end();
}).listen(80);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;구글과-함께면-뭐든-쉽다&quot;&gt;구글과 함께면 뭐든 쉽다.&lt;/h4&gt;

&lt;h2 id=&quot;참조-링크&quot;&gt;참조 링크&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/7450940/automatic-https-connection-redirect-with-node-js-express&quot;&gt;Automatic HTTPS connection/redirect with node.js/express&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="port" /><category term="nodejs" /><summary type="html">http로 접근시 https로 이동 시키자!</summary></entry><entry><title type="html">nodejs를 이용하여 web push 몇가지 주요 사항</title><link href="https://lahuman.github.io/web_push_with_nodejs_sometings/" rel="alternate" type="text/html" title="nodejs를 이용하여 web push 몇가지 주요 사항" /><published>2019-04-22T00:00:00+09:00</published><updated>2019-04-22T00:00:00+09:00</updated><id>https://lahuman.github.io/web_push_with_nodejs_sometings</id><content type="html" xml:base="https://lahuman.github.io/web_push_with_nodejs_sometings/">&lt;h1 id=&quot;web-push-구현하기&quot;&gt;web push 구현하기&lt;/h1&gt;

&lt;p&gt;web push를 구현하기 위해서 &lt;a href=&quot;https://www.npmjs.com/package/web-push&quot;&gt;web-push&lt;/a&gt;라는 모듈을 사용해야 한다.&lt;/p&gt;

&lt;p&gt;구현 방법은 &lt;a href=&quot;https://thecodebarbarian.com/sending-web-push-notifications-from-node-js.html&quot;&gt;Sending Web Push Notifications from Node.js&lt;/a&gt;을 참고 하면 된다.
(추후 시간을 내어 코드를 정리해보려고 한다.)&lt;/p&gt;

&lt;p&gt;오늘은 일단 중요한 몇가지 사항을 공유 하려고 한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;windows에서는 알람을 활성하 해두어야 알람을 받을 수 있다.&lt;/li&gt;
  &lt;li&gt;실제 서비스는 https만 가능하며, 인증서 또한 공식 인증서를 이용해야 된다.&lt;/li&gt;
  &lt;li&gt;subscription 정보를 잘 관리 하면 계속 상대방이 차단하기 전까지 계속 알람을 보낼 수 있다.&lt;/li&gt;
  &lt;li&gt;동작 원리는 worker를 등록하여 상대방에게 push를 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;일단 오늘은 여기까지!!!&lt;/p&gt;

&lt;h2 id=&quot;참조-링크&quot;&gt;참조 링크&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://thecodebarbarian.com/sending-web-push-notifications-from-node-js.html&quot;&gt;Sending Web Push Notifications from Node.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/web-push&quot;&gt;web-push&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="webpush" /><category term="nodejs" /><summary type="html">web push 모듈을 테스트 하면서 얻은 몇가지 사항 공유</summary></entry><entry><title type="html">swap 설정 하기!</title><link href="https://lahuman.github.io/setting_swap/" rel="alternate" type="text/html" title="swap 설정 하기!" /><published>2019-04-13T00:00:00+09:00</published><updated>2019-04-13T00:00:00+09:00</updated><id>https://lahuman.github.io/setting_swap</id><content type="html" xml:base="https://lahuman.github.io/setting_swap/">&lt;h1 id=&quot;swap-설정하기&quot;&gt;swap 설정하기&lt;/h1&gt;

&lt;p&gt;2G 메모리를 가진 MongoDB 인스턴스에서 메모리가 부족하다는 메시지를 계속 받았다.&lt;/p&gt;

&lt;p&gt;메모리를 제외하고는 큰 문제가 없어서 확인을 해보니 swap 영역의 크기가 0 이었다. swap은 디스크를 메모리처럼 사용하는 거라, 성능에 좋지 않아서 기본설정이 사용하지 않도록 되어있다.&lt;/p&gt;

&lt;p&gt;MongoDB의 메모리 문제를 해결하기 위해 swap을 이용하기로 내부 결정을 하였다.&lt;/p&gt;

&lt;p&gt;설정은 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# swap 확인
$&amp;gt; sudo swapon -s

$&amp;gt; sudo  free -m
              total        used        free      shared  buff/cache   available
Mem:           1955         271        1169           0         515        1537
Swap:             0           0           0

#swap 만들기
$&amp;gt; sudo fallocate -l 4G /swapfile
$&amp;gt; sudo chmod 600 /swapfile
$&amp;gt; sudo mkswap /swapfile
Setting up swapspace version 1, size = 4 GiB (4294963200 bytes)
no label, UUID=67f5331d-d17a-4c67-9d77-b819114a9aab

$&amp;gt; sudo swapon /swapfile
sudo swapon -s
Filename				Type		Size	Used	Priority
/swapfile                              	file    	4194300	0	-2

$&amp;gt; free -m
              total        used        free      shared  buff/cache   available
Mem:           1955         271        1169           0         515        1537
Swap:          4095           0        4095
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막으로 서버가 재부팅 되었을때, swap파일이 적용되도록 수정을 해야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; sudo vi /etc/fstab

# 가장 아래 부분에 추가 
/swapfile   none    swap    sw    0   0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;추가-swap-삭제-하기&quot;&gt;추가 swap 삭제 하기&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# swap 메모리 제거
$&amp;gt; sudo swapoff -v /swapfile
swapoff /swapfile

# 물리 파일 제거
$&amp;gt; sudo rm -f /swapfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;swap 메모리를 제거할때 여유 공간이 없을 경우 다음과 같은 오류가 발생 할수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; sudo swapoff -a
swapoff: /swapfile: swapoff failed: Cannot allocate memory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이럴때는 서비스를 종료 해서 메모리를 충분히 확보후 실행하면 된다.&lt;/p&gt;

&lt;h2 id=&quot;참조-링크&quot;&gt;참조 링크&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_%EC%8A%A4%EC%99%91%EA%B3%B5%EA%B0%84_%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0_%EC%8B%A4%EC%8A%B5&quot;&gt;리눅스 스왑공간 추가하기 실습&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-18-04/&quot;&gt;How To Add Swap Space on Ubuntu 18.04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="swap" /><summary type="html">부족한 메모리를 도와주자!</summary></entry><entry><title type="html">Nginx source를 이용한 compile 설치</title><link href="https://lahuman.github.io/nginx_source_install/" rel="alternate" type="text/html" title="Nginx source를 이용한 compile 설치" /><published>2019-04-09T00:00:00+09:00</published><updated>2019-04-09T00:00:00+09:00</updated><id>https://lahuman.github.io/nginx_source_install</id><content type="html" xml:base="https://lahuman.github.io/nginx_source_install/">&lt;h1 id=&quot;nginx-source를-이용한-컴파일-설치&quot;&gt;Nginx source를 이용한 컴파일 설치&lt;/h1&gt;

&lt;p&gt;오랜만에 Nginx를 설치하고 sub_filter를 사용하였는데 동작을 하지 않는다.&lt;/p&gt;

&lt;p&gt;원인은 &lt;strong&gt;http_sub_module&lt;/strong&gt;이 설치 되지 않아서 발생하는 문제이다.
nginx에 &lt;strong&gt;http_sub_module&lt;/strong&gt;을 설치하기 위해서는 꼭 source compile 설치를 해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.opentutorials.org/module/384/4511&quot;&gt;NGINX 컴파일&lt;/a&gt;에서 컴파일 방법에 대하여 잘 정리가 되어 있다.&lt;/p&gt;

&lt;p&gt;다음은 내가 사용한 명령어만 정리 하였다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 최초 update &amp;amp; 필수 gcc g++ 설치
$&amp;gt; sudo apt-get update
$&amp;gt; sudo apt-get install gcc g++;

# Nginx 설치 디렉토리 설정
$&amp;gt; mkdir nginx_source
$&amp;gt; cd nginx_source/

# Nginx 1.15.10 다운
$&amp;gt; wget https://nginx.org/download/nginx-1.15.10.tar.gz
$&amp;gt; tar xvf nginx-1.15.10.tar.gz

# Nginx 설치를 위한 모듈들 설치 START
$&amp;gt; wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.43.tar.gz
$&amp;gt; tar xvf pcre-8.43.tar.gz

$&amp;gt; wget https://www.openssl.org/source/openssl-1.0.2r.tar.gz
$&amp;gt; tar -xzvf openssl-1.0.2r.tar.gz

$&amp;gt; wget http://zlib.net/zlib-1.2.11.tar.gz
$&amp;gt; tar xvf zlib-1.2.11.tar.gz
# Nginx 설치를 위한 모듈들 설치 END

# 실행 계정 생성
$&amp;gt; useradd --shell /usr/sbin/nologin www-data
 
$&amp;gt; cd nginx-1.15.10/
# 컴파일 옵션 설정 **--with-http_sub_module** 내가 추가한 옵션이다.
$&amp;gt; sudo ./configure --with-http_sub_module --with-zlib=../zlib-1.2.11 --with-pcre=../pcre-8.43 --with-openssl=../openssl-1.0.2r --with-http_ssl_module --with-debug  --prefix=/usr/local/nginx --user=www-data --group=www-data
$&amp;gt; sudo make;
$&amp;gt; sudo make install;


# Nginx init 스크립트 처리
$&amp;gt; sudo wget https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx -O /etc/init.d/nginx;
$&amp;gt; sudo chmod +x /etc/init.d/nginx;
$&amp;gt; sudo update-rc.d -f nginx defaults
$&amp;gt; service nginx status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 하고 nginx.conf에 proxy pass 설정을 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;location /test/{ 
	proxy_pass http://lahuman.github.io/; 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 경우 기본적으로 주소에 http://server/test 를 호출 하면 http://lahuman.pe.kr 내용을 확인 할 수 있다. 다만 해당 컨텐츠의 링크를 확인하면 절대 경로로 표출 되어 동작이 제대로 되지 않는다.&lt;/p&gt;

&lt;p&gt;rewrite 와 sub_filter를 이용하여 내부 컨텐츠의 경로를 변경 하자
내부 컨텐츠의 경로를 변경하는 방법으로 sub_filter를 이용할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;location /test/ {
        rewrite ^/test(/.*)$ $1 break;
        proxy_pass http://lahuman.pe.kr/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect    off;
        proxy_set_header Accept-Encoding &quot;&quot;;
        sub_filter_types *;
        sub_filter_once off;
        sub_filter '(?i)src=[\&quot;\']/' 'src=&quot;/test/';
        sub_filter '(?i)href=[\'\&quot;]/' 'href=&quot;/test/';
        sub_filter '/doc4sm/' '/test/doc4sm/';
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;오랜만에 설정을 하였다.&lt;/p&gt;

&lt;h2 id=&quot;설정은-늘-힘들다&quot;&gt;설정은 늘 힘들다…&lt;/h2&gt;

&lt;h2 id=&quot;참조-링크&quot;&gt;참조 링크&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_sub_module.html&quot;&gt;Module ngx_http_sub_module&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.opentutorials.org/module/384/4511&quot;&gt;NGINX 컴파일&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lahuman.jabsiri.co.kr/157&quot;&gt;proxy_pass 설정 후 상세 내용 LINK URL 패턴 자동 변경&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="nginx" /><category term="install" /><summary type="html">sub_filter를 사용하기 위해서는 꼭 컴파일 설치를 해야 한다.</summary></entry><entry><title type="html">R을 이용한 동시출현단어 분석</title><link href="https://lahuman.github.io/r_rJava/" rel="alternate" type="text/html" title="R을 이용한 동시출현단어 분석" /><published>2019-04-04T00:00:00+09:00</published><updated>2019-04-04T00:00:00+09:00</updated><id>https://lahuman.github.io/r_rJava</id><content type="html" xml:base="https://lahuman.github.io/r_rJava/">&lt;h1 id=&quot;r에서-rjava-사용하기-위한-설치-진행&quot;&gt;R에서 rJava 사용하기 위한 설치 진행&lt;/h1&gt;

&lt;p&gt;동시출현 단어에 대한 분석이 필요하여, 검색을 해보았다. R언에에서 간단하게 함수 호출로 처리가 가능하다는 것을 확인하였다.&lt;/p&gt;

&lt;h2 id=&quot;r-설치-하기&quot;&gt;R 설치 하기&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-r-on-ubuntu-18-04&quot;&gt;How To Install R on Ubuntu 18.04&lt;/a&gt; 를 참조해서 R을 설치 했다 명령어를 따라만 해도 쉽게 설치가 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 서버 키값 추가
$&amp;gt; sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9

# repository 추가
$&amp;gt; sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/'

$&amp;gt; sudo apt update

# R 설치
$&amp;gt; sudo apt install r-base

# R Command 접근
$&amp;gt; sudo -i R

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;필요-모듈-설치&quot;&gt;필요 모듈 설치&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://junhewk.github.io/text/2017/08/08/cooccurence-matrix-with-Naver-blog/&quot;&gt;네이버 블로그로 동시출현단어 분석 (co-occurence network anlysis)&lt;/a&gt;에서 힌트를 얻어서 R을 한번 진행하려고 하였는데, KoNLP 모듈의 설치에서 rJava를 설치하라는 문구를 만나며 맨붕에 빠지게 되었다.&lt;/p&gt;

&lt;h3 id=&quot;java-설치&quot;&gt;JAVA 설치&lt;/h3&gt;

&lt;p&gt;처음 실패를 계기로 구글링을 하여 다음의 해결책을 찾게 되었다.
준비해야 할 것이 몇개 있는데 큰 예로 &lt;strong&gt;JDK 10, 11&lt;/strong&gt;로는 실패 하였다.&lt;/p&gt;

&lt;p&gt;그래서 JDK 8을 기반으로 진행하였다.
JDK8 설치는 &lt;a href=&quot;http://ubuntuhandbook.org/index.php/2018/05/install-oracle-java-jdk-8-10-ubuntu-18-04/&quot;&gt;How to Install Oracle Java JDK 8 / 10 in Ubuntu 18.04
&lt;/a&gt;를 참고하여 처리 하였다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# repostiroy 추가 
$&amp;gt; sudo add-apt-repository ppa:webupd8team/java

# java8 설치
$&amp;gt; sudo apt-get install oracle-java8-installer

# java8을 기본으로 사용하도록 설정
$&amp;gt; sudo apt-get install oracle-java8-set-default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;rjava-설치&quot;&gt;rJava 설치&lt;/h3&gt;

&lt;p&gt;설치를 하려고 하면 많은 오류를 확인 할수 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/s-u/rJava/issues/153?fbclid=IwAR3AIi1wLW4yIx1uj7oz_yDjMC5FpO-abGYXdN0QgJMHCn7-HkAPrPEqupk&quot;&gt;Compiling rJava macOS, java8&lt;/a&gt;를 참고하여 설치를 하면된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#java config 재설정
$&amp;gt; sudo R CMD javareconf

# R Command 진입
$&amp;gt; sudo R
# rJava 설치 (특정 위치에서 - jdk8과 궁합이 맞는 패키지인듯)
R&amp;gt; install.packages(&quot;https://cran.r-project.org/src/contrib/Archive/rJava/rJava_0.9-9.tar.gz&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;r에서-필요한-모듈-추가&quot;&gt;R에서 필요한 모듈 추가&lt;/h3&gt;

&lt;p&gt;이후 다른 패키지를 설치하기 위해서 다음 모듈을 설치해 두는 것이 좋다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; sudo apt-get install libcurl4-openssl-dev libssl-dev libxml2-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 필요한 패키지를 설치하면 문제 없이 설치 된다.&lt;/p&gt;

&lt;h3 id=&quot;동시-출현-단어-분석-매트릭스&quot;&gt;동시 출현 단어 분석 매트릭스&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://statkclee.github.io/parallel-r/r-parallel-rscript-exec.html&quot;&gt;.R 스크립트를 인자와 함께 실행&lt;/a&gt;를 참고 하여 R 실행 파일을 만들고 실행을 하면 원하는 결과를 확인 가능하다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#! /usr/bin/env Rscript&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rvest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KoNLP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stringr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;qgraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dplyr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;library&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;networkD3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;useNIADic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyword&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;텍스트+분석&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paste0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://search.naver.com/search.naver?where=post&amp;amp;sm=tab_pge&amp;amp;query=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;st=sim&amp;amp;date_option=0&amp;amp;date_from=&amp;amp;date_to=&amp;amp;dup_remove=1&amp;amp;post_blogurl=&amp;amp;post_blogurl_without=&amp;amp;srchby=all&amp;amp;nso=&amp;amp;ie=utf8&amp;amp;start=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searching&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;paste0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html_nodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.sh_blog_passage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# result &amp;lt;- iconv(result, &quot;UTF-8&quot;, &quot;CP949&quot;) # 윈도우의 경우, R 작업환경에 맞춰 CP949로 변경할 필요가 있습니다.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searching&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searching&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sys.sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;runif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ko_words&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;as.character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unlist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SimplePos22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extracted&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'([가-힣]+)/[NP][A-Z]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyword&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extracted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;is.na&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searching&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_replace_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_replace_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_replace_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[[:punct:]]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_replace_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[ㄱ-ㅎㅏ-ㅣ]+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_replace_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replacement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str_trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;side&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;both&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ko_words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;texts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;


&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VectorSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stopWord&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;텍스트&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;분석&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tdm&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TermDocumentMatrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corpus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;control&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;removePunctuation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stopwords&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stopWord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;removeNumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordLengths&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weighting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weightBin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tdm.matrix&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as.matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tdm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word.count&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rowSums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tdm.matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word.order&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word.count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decreasing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;freq.words&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tdm.matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word.order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;co.matrix&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;freq.words&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%*%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;freq.words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;co.matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과는 다음과 같이 표기 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         Terms
Terms     데이터 c텍스트 분석하 통하 방법 마이닝 위하 기법 과정 가지 전처리
  데이터      26       4      5    5    6      1    3    3    3    2      3
  c텍스트      4      13      2    2    3      2    2    0    2    2      1
  분석하       5       2     11    2    3      1    2    1    0    1      0
  통하         5       2      2   11    2      1    1    2    0    0      0
  방법         6       3      3    2   10      1    0    2    1    1      1
  마이닝       1       2      1    1    1     10    1    1    1    0      0
  위하         3       2      2    1    0      1    9    1    1    0      1
  기법         3       0      1    2    2      1    1    7    0    0      1
  과정         3       2      0    0    1      1    1    0    7    0      3
  가지         2       2      1    0    1      0    0    0    0    6      0
  전처리       3       1      0    0    1      0    1    1    3    0      6
  활용         3       1      1    2    2      2    0    2    1    1      0
  대하         1       0      1    1    0      0    0    1    0    2      0
  아니         4       0      0    1    0      0    0    1    0    0      0
  요소         1       1      2    0    1      2    1    2    0    0      1
  내용         1       0      0    2    1      1    0    2    0    0      0
  수집         3       1      0    0    0      1    1    0    1    0      1
  의미         0       2      0    2    0      0    0    1    1    0      1
  철학         0       1      0    0    0      0    0    0    1    1      0
  텍스         1       2      0    0    1      0    0    0    1    1      1
  단어         0       0      0    0    0      1    0    0    0    0      1
  형태소       1       1      1    0    0      0    2    0    0    0      0
  형태         0       0      0    1    1      0    0    0    0    0      0
  단위         1       1      0    0    0      1    1    1    1    0      1
  연구         1       0      0    0    1      3    0    1    1    0      0
  결과         1       1      0    0    0      1    0    0    0    0      0
  사람         2       1      1    0    1      0    0    0    0    1      0
  주제         1       1      0    2    0      0    0    0    0    1      0
  작업         0       0      1    0    1      0    1    0    1    0      1
  c데이터      2       0      0    0    0      0    0    0    1    0      0
         Terms
Terms     활용 대하 아니 요소 내용 수집 의미 철학 텍스 단어 형태소 형태 단위
  데이터     3    1    4    1    1    3    0    0    1    0      1    0    1
  c텍스트    1    0    0    1    0    1    2    1    2    0      1    0    1
  분석하     1    1    0    2    0    0    0    0    0    0      1    0    0
  통하       2    1    1    0    2    0    2    0    0    0      0    1    0
  방법       2    0    0    1    1    0    0    0    1    0      0    1    0
  마이닝     2    0    0    2    1    1    0    0    0    1      0    0    1
  위하       0    0    0    1    0    1    0    0    0    0      2    0    1
  기법       2    1    1    2    2    0    1    0    0    0      0    0    1
  과정       1    0    0    0    0    1    1    1    1    0      0    0    1
  가지       1    2    0    0    0    0    0    1    1    0      0    0    0
  전처리     0    0    0    1    0    1    1    0    1    1      0    0    1
  활용       6    1    1    0    2    2    0    0    0    0      0    0    0
  대하       1    6    1    1    1    0    0    1    0    0      0    0    0
  아니       1    1    6    0    1    0    0    0    0    0      0    0    0
  요소       0    1    0    5    0    0    0    0    0    0      0    0    1
  내용       2    1    1    0    5    1    0    0    0    0      0    1    0
  수집       2    0    0    0    1    5    0    0    0    0      0    0    0
  의미       0    0    0    0    0    0    5    0    0    0      0    0    1
  철학       0    1    0    0    0    0    0    5    1    0      0    0    0
  텍스       0    0    0    0    0    0    0    1    4    1      0    0    0
  단어       0    0    0    0    0    0    0    0    1    4      1    0    0
  형태소     0    0    0    0    0    0    0    0    0    1      4    1    1
  형태       0    0    0    0    1    0    0    0    0    0      1    4    0
  단위       0    0    0    1    0    0    1    0    0    0      1    0    4
  연구       1    0    0    1    0    0    0    0    0    0      0    0    1
  결과       1    0    0    0    1    2    0    0    0    0      0    0    0
  사람       0    1    0    0    0    0    0    0    0    0      0    0    0
  주제       0    1    0    0    0    0    1    0    0    0      0    0    0
  작업       0    0    0    1    0    0    1    0    0    0      0    0    1
  c데이터    0    0    0    0    0    1    0    0    0    0      0    0    0
         Terms
Terms     연구 결과 사람 주제 작업 c데이터
  데이터     1    1    2    1    0       2
  c텍스트    0    1    1    1    0       0
  분석하     0    0    1    0    1       0
  통하       0    0    0    2    0       0
  방법       1    0    1    0    1       0
  마이닝     3    1    0    0    0       0
  위하       0    0    0    0    1       0
  기법       1    0    0    0    0       0
  과정       1    0    0    0    1       1
  가지       0    0    1    1    0       0
  전처리     0    0    0    0    1       0
  활용       1    1    0    0    0       0
  대하       0    0    1    1    0       0
  아니       0    0    0    0    0       0
  요소       1    0    0    0    1       0
  내용       0    1    0    0    0       0
  수집       0    2    0    0    0       1
  의미       0    0    0    1    1       0
  철학       0    0    0    0    0       0
  텍스       0    0    0    0    0       0
  단어       0    0    0    0    0       0
  형태소     0    0    0    0    0       0
  형태       0    0    0    0    0       0
  단위       1    0    0    0    1       0
  연구       4    0    0    0    0       0
  결과       0    4    0    0    0       1
  사람       0    0    4    1    0       0
  주제       0    0    1    4    0       0
  작업       0    0    0    0    4       0
  c데이터    0    1    0    0    0       4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참조-링크&quot;&gt;참조 링크&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-r-on-ubuntu-18-04&quot;&gt;How To Install R on Ubuntu 18.04&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://junhewk.github.io/text/2017/08/08/cooccurence-matrix-with-Naver-blog/&quot;&gt;네이버 블로그로 동시출현단어 분석 (co-occurence network anlysis)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/s-u/rJava/issues/153?fbclid=IwAR3AIi1wLW4yIx1uj7oz_yDjMC5FpO-abGYXdN0QgJMHCn7-HkAPrPEqupk&quot;&gt;Compiling rJava macOS, java8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ubuntuhandbook.org/index.php/2018/05/install-oracle-java-jdk-8-10-ubuntu-18-04/&quot;&gt;How to Install Oracle Java JDK 8 / 10 in Ubuntu 18.04
&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://statkclee.github.io/parallel-r/r-parallel-rscript-exec.html&quot;&gt;.R 스크립트를 인자와 함께 실행&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="r" /><category term="rjava" /><summary type="html">rJava 사용하기 위한 설치 진행</summary></entry><entry><title type="html">pupperteer를 이용한 화면 캡처 기능 개발</title><link href="https://lahuman.github.io/puppeteer_screen_capture/" rel="alternate" type="text/html" title="pupperteer를 이용한 화면 캡처 기능 개발" /><published>2019-03-29T00:00:00+09:00</published><updated>2019-03-29T00:00:00+09:00</updated><id>https://lahuman.github.io/puppeteer_screen_capture</id><content type="html" xml:base="https://lahuman.github.io/puppeteer_screen_capture/">&lt;h1 id=&quot;pupperteer를-이용한-화면-캡처-기능-개발&quot;&gt;pupperteer를 이용한 화면 캡처 기능 개발&lt;/h1&gt;

&lt;p&gt;이번에 개발하는 기능중에 화면을 캡처해서 다운로드를 제공해야 하는 기능이 있다.&lt;/p&gt;

&lt;p&gt;처음 시도한 방법은 &lt;a href=&quot;https://html2canvas.hertzen.com/&quot;&gt;html2canvas&lt;/a&gt;을 이용한 방법 이었는데… 실패 했다.&lt;/p&gt;

&lt;p&gt;화면에 보여주는 부분은 잘 캡쳐가 되지만, 스크롤에 숨겨진 부분이 캡쳐가 되지 않았다.&lt;/p&gt;

&lt;p&gt;하루를 날리고, 다음으로 시도한 방법은 &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;pupperteer&lt;/a&gt;를 이용해서 요청이 오면 내부에서 새로운 페이지를 띄우고 해당 페이지를 로딩해서 캡쳐 하는 방식이다.&lt;/p&gt;

&lt;p&gt;만든 코드는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;router.post('/capture', async (req, res, next) =&amp;gt; {
  const file_name = `${shortid.generate()}.png`;
  const browser = await puppeteer.launch();
  const page = await browser.newPage();
  await page.setViewport({ width: 1366, height: 768, });
  await page.goto(CAPTURE_URL+Buffer.from(JSON.stringify(req.body)).toString('base64'), {waitUntil: 'domcontentloaded'});
  await page.waitFor(1000);
  await page.waitForSelector('#endarea');
  await page.screenshot({fullPage: true, path: `public/images/${file_name}`});
  await browser.close();
  res.json({image_url:`/images/${file_name}`})
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;요청이 들어오면 해당 페이지로 넘어온 파라메터를 다시 전달해서 화면을 캡쳐 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;await page.screenshot({fullPage: true, path: &lt;code class=&quot;highlighter-rouge&quot;&gt;public/images/${file_name}&lt;/code&gt;});&lt;/strong&gt;이 부분에 보이는 부분을 전체 화면으로 캡쳐를 해서 저장을 하는 기능을 수행한다.&lt;/p&gt;

&lt;p&gt;저장된 이미지를 웹에서 다운로드를 하는 코드는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function forceDownload(url, fileName){
        var xhr = new XMLHttpRequest();
        xhr.open(&quot;GET&quot;, url, true);
        xhr.responseType = &quot;blob&quot;;
        xhr.onload = function(){
            var urlCreator = window.URL || window.webkitURL;
            var imageUrl = urlCreator.createObjectURL(this.response);
            var tag = document.createElement('a');
            tag.href = imageUrl;
            tag.download = fileName;
            document.body.appendChild(tag);
            tag.click();
            document.body.removeChild(tag);
        }
        xhr.send();
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이와 같이 실행하면 fileName으로 다운로드가 진행된다.&lt;/p&gt;

&lt;h2 id=&quot;인터넷과-함께면-난-못하는게-없다&quot;&gt;인터넷과 함께면 난 못하는게 없다.&lt;/h2&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://html2canvas.hertzen.com/&quot;&gt;html2canvas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;pupperteer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="node" /><category term="puppeteer" /><summary type="html">스크롤 있는 화면을 캡쳐 해보자!</summary></entry><entry><title type="html">Nodejs에서 Swagger 사용하기</title><link href="https://lahuman.github.io/nodejs_swagger/" rel="alternate" type="text/html" title="Nodejs에서 Swagger 사용하기" /><published>2019-03-29T00:00:00+09:00</published><updated>2019-03-29T00:00:00+09:00</updated><id>https://lahuman.github.io/nodejs_swagger</id><content type="html" xml:base="https://lahuman.github.io/nodejs_swagger/">&lt;h1 id=&quot;nodejs에서-swagger-사용하기&quot;&gt;Nodejs에서 Swagger 사용하기&lt;/h1&gt;

&lt;p&gt;nodejs로 만들어진 API를 활용할 수 있도록 문서를 제공해야 하는데, 따로 문서를 만들기 보다는 Swagger를 이용하여 처리 하였다. 얼마전 진행했던 개인 프로젝트의 AuthServer에 적용해보았다.&lt;/p&gt;

&lt;p&gt;먼저 npm을 이용해서 swagger를 설치 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install --save swagger-ui-express
npm install --save swagger-jsdoc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;app.js 파일에서 다음과 같이 설정을 추가 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const swaggerJSDoc = require('swagger-jsdoc');
const swaggerUi = require('swagger-ui-express');



// Swagger definition
// You can set every attribute except paths and swagger
// https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md
const swaggerDefinition = {
  info: { // API informations (required)
    title: 'Auth Service', // Title (required)
    version: '1.0.0', // Version (required)
    description: 'Auth API' // Description (optional)
  },
  host: 'localhost:3000', // Host (optional)
  basePath: '/' // Base path (optional)
};

// Options for the swagger docs
const options = {
  // Import swaggerDefinitions
  swaggerDefinition,
  // Path to the API docs
  apis: ['./routes/index.js', './users/index.js', './roles/index.js']
};

// Initialize swagger-jsdoc -&amp;gt; returns validated swagger spec in json format
const swaggerSpec = swaggerJSDoc(options);

const app = express();
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;routes/index.js에 swagger 작성을 진행하며, 모델 정보를 가지고 있는 부분과 paths를 가진 부분으로 나누어서 작성하면 된다.&lt;/p&gt;

&lt;p&gt;다음은 실제 소스 샘플 이다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
/**
 * @swagger
 * tags:
 *   name: Auth
 *   description: 로그인 처리
 * definitions:
 *   Auth_request:
 *     type: object
 *     required:
 *       - user_id
 *       - password
 *     properties:
 *       user_id:
 *         type: string
 *         description: 아이디
 *       password:
 *         type: string
 *         description: 비밀번호
 *   Auth_response:
 *     type: object
 *     required:
 *       - status
 *     properties:
 *       status:
 *         type: string
 *         description: 로그인 성공 여부- error, success
 *       token:
 *         type: object
 *         description: 계정 정보
 *   Response_error:
 *     type: object
 *     required:
 *       - status
 *     properties:
 *       message:
 *         type: string
 *         description: 오류 사유
 *       status:
 *         type: integer
 *         description: response code
 */

/**
 * @swagger
 *  paths:
 *    /login:
 *      post:
 *        tags:
 *        - &quot;Auth&quot;
 *        summary: &quot;Login process&quot;
 *        description: &quot;&quot;
 *        consumes:
 *        - &quot;application/json&quot;
 *        produces:
 *        - &quot;application/json&quot;
 *        parameters:
 *        - in: &quot;body&quot;
 *          name: &quot;body&quot;
 *          description: &quot;로그인 계정 정보와 서비스 정보를 전달&quot;
 *          required: true
 *          schema:
 *            $ref: &quot;#/definitions/Auth_request&quot;
 *        responses:
 *          200:
 *            description: &quot;로그인 결과&quot;
 *            schema:
 *              $ref: &quot;#/definitions/Auth_response&quot;
 *          400:
 *            description: &quot;잘못된 데이터&quot;
 *            schema:
 *              $ref: &quot;#/definitions/Response_error&quot;
 *          500:
 *            description: &quot;로그인 오류 &amp;amp; 실패&quot;
 *            schema:
 *              $ref: &quot;#/definitions/Response_error&quot;
 */
router.post('/login', (req, res, next) =&amp;gt; {
  const loginInfo = req.body;
  if (!Object.prototype.hasOwnProperty.call(loginInfo, 'user_id')
    || !Object.prototype.hasOwnProperty.call(loginInfo, 'password')) {
    res.statusCode(400).json({ status: 'error', message: 'Invalid Prameter' });
  }
  else {
    models.LoginHistorys.count({ where: { user_id: loginInfo.user_id, login_success: 'N', created_at: { [models.Sequelize.Op.gt]: moment().subtract(20, 'minutes').toDate() } } }).then((c) =&amp;gt; {
      if (c &amp;gt; 5) {
        res.statusCode(500).json({ status: 'error', message: 'Login failed several times. Please try again in 10 minutes.' });
      }
      else {
        models.Users.findOne({
          where: { user_id: loginInfo.user_id, password: loginInfo.password },
          include: [models.Roles]
        }).then((u) =&amp;gt; {
          if (u) {
            const userInfo = {
              user_id: u.user_id,
              desc: u.description,
              role: u.Roles.map(r =&amp;gt; r.role_name)
            };
            const token = jwt.sign(userInfo, secretKey, {
              expiresIn: '5m' // 유효 시간은 5분
            });
            res.json({ status: 'success', token });
            loginInfo.login_success = 'Y';
          }
          else {
            res.json({ status: 'error', message: 'check ID or PW' });
            loginInfo.login_success = 'N';
          }
          models.LoginHistorys.create(loginInfo);
        });
      }
    });
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 하고 서버를 실행하면 이쁜 테스트 화면을 확인 할 수 있다.&lt;/p&gt;

&lt;p&gt;더 자세한 내용은 &lt;a href=&quot;https://swagger.io/specification/&quot;&gt;swagger&lt;/a&gt;의 문서를 참고 하면 된다.&lt;/p&gt;

&lt;h2 id=&quot;근데-어렵다-쉽지-않다&quot;&gt;근데 어렵다.. 쉽지 않다…&lt;/h2&gt;

&lt;h2 id=&quot;참조-링크&quot;&gt;참조 링크&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gongzza.github.io/javascript/nodejs/swagger-node-express/&quot;&gt;Express에 Swagger 붙이기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://swagger.io/specification/&quot;&gt;swagger&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://apihandyman.io/writing-openapi-swagger-specification-tutorial-part-1-introduction/&quot;&gt;Writing OpenAPI (fka Swagger) Specification tutorial
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="node" /><category term="swagger" /><summary type="html">쉬운듯 어려워!!</summary></entry><entry><title type="html">난 여전히 미숙한 아이 같다.</title><link href="https://lahuman.github.io/20190328/" rel="alternate" type="text/html" title="난 여전히 미숙한 아이 같다." /><published>2019-03-28T00:00:00+09:00</published><updated>2019-03-28T00:00:00+09:00</updated><id>https://lahuman.github.io/20190328</id><content type="html" xml:base="https://lahuman.github.io/20190328/">&lt;h1 id=&quot;아이-같은-나&quot;&gt;아이 같은 나…&lt;/h1&gt;

&lt;p&gt;어제는 아이들에게 엄청 화를 냈다. 화를 낸 이유는 별게 아니다.&lt;/p&gt;

&lt;p&gt;채윤이는 숙제를 하기 싫어서 꽁양꽁양 되었고, 동현이는 짜증을 계속 내는 게 싫었다.&lt;/p&gt;

&lt;p&gt;아이들에게 한바탕 화를 내 고난 후 뒤처리는 아내의 몫이었다.&lt;/p&gt;

&lt;p&gt;아내는 아이들에게 &lt;strong&gt;“아빠가 너무 피곤해서 그런 거야, 아빠가 정말 힘들어서 그런 거야”&lt;/strong&gt;라고 이야기 하며 아이들을 토닥여 주었다.&lt;/p&gt;

&lt;p&gt;하지만, 채윤이랑 동현이는 울음을 터트렸고 나도 신경 쓰여서 잠을 못 이루었다.&lt;/p&gt;

&lt;p&gt;오늘은 집에외서 아이들에게 사과를 하였다. 그리고 오늘 다시 채윤이의 숙제를 봐주고 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;여전히 채윤이는 숙제를 하면서 꽁양꽁양 짜증을 내고 동현이도 티비를 보여달라며 내 목에 매달려 있다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;어른이 되는건 아이들의 단점도 모두 받아주는 멋진 사람이 되어야 할텐데.. 난 여전히 부족하다.&lt;/p&gt;

&lt;h3 id=&quot;어려워&quot;&gt;어려워&lt;/h3&gt;</content><category term="단상" /><summary type="html">낼 모레면 마흔인데.. 여전히 아이 같다.</summary></entry></feed>
