<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.3">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2023-08-11T03:55:38+00:00</updated><id>https://lahuman.github.io/feed.xml</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">Nexus 시작시 NullPointException 이 발생하면서 오류가 나는 현상</title><link href="https://lahuman.github.io/nexus_nullportinexception_startup/" rel="alternate" type="text/html" title="Nexus 시작시 NullPointException 이 발생하면서 오류가 나는 현상" /><published>2023-08-11T00:00:00+00:00</published><updated>2023-08-11T00:00:00+00:00</updated><id>https://lahuman.github.io/nexus_nullportinexception_startup</id><content type="html" xml:base="https://lahuman.github.io/nexus_nullportinexception_startup/">&lt;h1 id=&quot;nexus-시작시-nullpointexception-이-발생하면서-오류가-나는-현상&quot;&gt;Nexus 시작시 NullPointException 이 발생하면서 오류가 나는 현상&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;현재 외부 Nexus Repository에서 내부 Nexus Repository에 복제 처리를 하고 있습니다. Nexus에서 갑자기 오류가 발생했습니다. 그냥 재부팅을 했을 뿐인데 오류가 발생하였다고 합니다. 해당 내역이 이미  &lt;a href=&quot;https://support.sonatype.com/hc/en-us/articles/4403663666835-Starting-Nexus-Repository-3-as-a-service-may-result-in-a-Karaf-NullPointerException-on-start-up&quot;&gt;nexus의 팁&lt;/a&gt;에 올라와 있어서 따라해보니, 복구가 문제 없이 되었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;

&lt;p&gt;Nexus3을 빠르게 중지했다가 다시 시작하면 Nexus3 리포지토리가 전혀 시작되지 않을 수 있으며 로깅에 다음과 같은 예외가 발생할 수 있습니다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2023-08-11 09:50:14,365+0900 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;FelixStartLevel] &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;SYSTEM org.sonatype.nexus.pax.logging.NexusLogActivator - start
2023-08-11 09:50:14,790+0900 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;FelixStartLevel] &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;SYSTEM org.sonatype.nexus.features.internal.FeaturesWrapper - Fast FeaturesService starting
2023-08-11 09:50:14,845+0900 ERROR &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;FelixStartLevel] &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;SYSTEM org.apache.karaf.deployer.features.FeatureDeploymentListener - Unable to update deployed features &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;bundle: org.apache.felix.framework - 6.0.5
java.lang.NullPointerException: null
        at org.apache.karaf.deployer.features.FeatureDeploymentListener.bundleChanged&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FeatureDeploymentListener.java:254&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.deployer.features.FeatureDeploymentListener.init&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FeatureDeploymentListener.java:90&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.deployer.features.osgi.Activator&lt;span class=&quot;nv&quot;&gt;$DeploymentFinishedListener&lt;/span&gt;.deploymentEvent&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Activator.java:86&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.features.internal.service.FeaturesServiceImpl.registerListener&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FeaturesServiceImpl.java:296&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.deployer.features.osgi.Activator.doStart&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Activator.java:53&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.util.tracker.BaseActivator.start&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;BaseActivator.java:92&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.util.SecureAction.startActivator&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SecureAction.java:698&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.Felix.activateBundle&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Felix.java:2402&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.Felix.startBundle&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Felix.java:2308&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.Felix.setActiveStartLevel&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Felix.java:1539&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.FrameworkStartLevelImpl.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FrameworkStartLevelImpl.java:308&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at java.lang.Thread.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Thread.java:748&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
2023-08-11 09:50:14,847+0900 ERROR &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;FelixStartLevel] &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;SYSTEM org.apache.karaf.deployer.features.FeatureDeploymentListener - Unable to update deployed features &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;bundle: org.apache.karaf.features.extension - 4.3.6
java.lang.NullPointerException: null
        at org.apache.karaf.deployer.features.FeatureDeploymentListener.bundleChanged&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FeatureDeploymentListener.java:254&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.deployer.features.FeatureDeploymentListener.init&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FeatureDeploymentListener.java:90&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.deployer.features.osgi.Activator&lt;span class=&quot;nv&quot;&gt;$DeploymentFinishedListener&lt;/span&gt;.deploymentEvent&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Activator.java:86&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.features.internal.service.FeaturesServiceImpl.registerListener&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FeaturesServiceImpl.java:296&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.deployer.features.osgi.Activator.doStart&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Activator.java:53&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.karaf.util.tracker.BaseActivator.start&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;BaseActivator.java:92&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.util.SecureAction.startActivator&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SecureAction.java:698&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.Felix.activateBundle&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Felix.java:2402&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.Felix.startBundle&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Felix.java:2308&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.Felix.setActiveStartLevel&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Felix.java:1539&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at org.apache.felix.framework.FrameworkStartLevelImpl.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;FrameworkStartLevelImpl.java:308&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        at java.lang.Thread.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Thread.java:748&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;원인&quot;&gt;원인&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;이 문제는 시스템이 빠르게 재시작된 후(systemd를 통해 Nexus 리포지토리가 자동으로 시작되는 경우) 자주 관찰되었습니다.&lt;/li&gt;
  &lt;li&gt;이 오류는 부팅 시퀀스가 시작될 때 바로 발생합니다.&lt;/li&gt;
  &lt;li&gt;문제 발생 시 캡처된 로깅 또는 스레드 덤프에는 문제가 어디에 있는지 알 수 있는 힌트가 없습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;해결-방법---race-condition-between-the-featuresservice-and-featuredeploymentlistener&quot;&gt;해결 방법 - &lt;a href=&quot;https://issues.apache.org/jira/browse/KARAF-6074&quot;&gt;Race condition between the FeaturesService and FeatureDeploymentListener&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;손상된 파일을 찾기 위한 명령어&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 설치 위치와 버젼 정보를 변경&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;_VER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.38.0-01&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;_INSTALL_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/application/nexus-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_VER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;dirname &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_INSTALL_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/tmp/nexus-unix.tar.gz&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://download.sonatype.com/nexus/3/nexus-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_VER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-unix.tar.gz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--diff&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/tmp/nexus-unix.tar.gz&quot;&lt;/span&gt; nexus-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_VER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/etc/karaf | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-vE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'(Uid|Gid|Mod time) differs'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;“karaf” 디렉터리 아래의 모든 파일을 복원하는 명령의 예입니다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;dirname &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_INSTALL_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/tmp/nexus-unix.tar.gz&quot;&lt;/span&gt; nexus-&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_VER&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/etc/karaf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;가능한-원인&quot;&gt;가능한 원인&lt;/h2&gt;

&lt;p&gt;마운트된 디스크(넥서스 리포지토리 관련)가 충분히 빨리 마운트되지 않거나 ‘systemd’가 시작되기 전에 네트워크가 완전히 초기화 및 가동되지 않아 발생할 수 있습니다.&lt;/p&gt;

&lt;p&gt;만약, 네트워크 마운트에 의존하는 경우 Nexus 리포지토리 서비스가 시작되기 전에 네트워크 마운트를 완전히 사용할 수 있는지 확인하면 이 문제를 해결할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;의존하는 마운트를 설정합니다(블롭 스토어 또는 Nexus 리포지토리 데이터 중 하나).&lt;/li&gt;
  &lt;li&gt;실행&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl list-units | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.mount'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;마운트 ‘단위’의 이름을 가져옵니다.&lt;/li&gt;
  &lt;li&gt;서비스 [단위] 섹션 옵션에 네트워크와 마운트를 모두 추가하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Requires&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;After&lt;/code&gt;를 선택합니다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
...
&lt;span class=&quot;nv&quot;&gt;Requires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;network.target network-online.target &amp;lt;required mount 1&amp;gt;.mount &amp;lt;required mount2&amp;gt;.mount multi-user.target
&lt;span class=&quot;nv&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;network.target network-online.target &amp;lt;required mount 1&amp;gt;.mount &amp;lt;required mount2&amp;gt;.mount multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.sonatype.com/hc/en-us/articles/4403663666835-Starting-Nexus-Repository-3-as-a-service-may-result-in-a-Karaf-NullPointerException-on-start-up&quot;&gt;Starting Nexus Repository 3 as a service may result in a Karaf NullPointerException on start-up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="nexus" /><category term="fix" /><summary type="html">Starting Nexus Repository 3 as a service may result in a Karaf NullPointerException on start-up</summary></entry><entry><title type="html">nestjs에서 guard에 Global service Inject 처리</title><link href="https://lahuman.github.io/nestjs_guard_inject_service/" rel="alternate" type="text/html" title="nestjs에서 guard에 Global service Inject 처리" /><published>2023-08-08T00:00:00+00:00</published><updated>2023-08-08T00:00:00+00:00</updated><id>https://lahuman.github.io/nestjs_guard_inject_service</id><content type="html" xml:base="https://lahuman.github.io/nestjs_guard_inject_service/">&lt;h1 id=&quot;nestjs에서-guard에-global-service-inject-처리&quot;&gt;nestjs에서 guard에 Global service Inject 처리&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;guard&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;특정 Module의 서비스를 사용&lt;/code&gt;하고 있는 상화에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;해당 guard를 다른 Module에서 사용&lt;/code&gt;하려면 사용하려는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Module에서 해당 Service를 import&lt;/code&gt; 해야 합니다. 
이를 Global 처리를 이용한 &lt;code class=&quot;highlighter-rouge&quot;&gt;전략 스토어&lt;/code&gt;를 사용하는 예제 입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;global-map-생성-및-전략-등록&quot;&gt;Global Map 생성 및 전략 등록&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Global로 사용될 Map 생성&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// https://github.com/lahuman/daily-quest/blob/main/api/src/auth/strategy-storage.ts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StrategyStorage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// https://github.com/lahuman/daily-quest/blob/main/api/src/auth/auth.strategy.ts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Injectable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/common'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../user/users.service'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StrategyStorage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./strategy-storage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserTokenVo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../user/user-token.vo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FirebaseService&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../firebase/firebase.service'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserVO&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'..//user/user.vo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Injectable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AuthStrategy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebaseService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FirebaseService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 초기 기동시 Global로 사용될 Map에 AuthStrategy.name로 해당 클래스 인스턴스 저장&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;StrategyStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AuthStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 필요한 method 생성&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;fbVerify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firebaseService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authTokenVerify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;userVerify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserVO&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tokenValidate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;전략을-초기화-할-수-있도록-appmodule에-선언&quot;&gt;전략을 초기화 할 수 있도록 app.module에 선언&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// https://github.com/lahuman/daily-quest/blob/main/api/src/app.module.ts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/common'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./app.controller'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UsersModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./user/user.module'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FirebaseModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./firebase/firebase.module'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ConfigModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TypeOrmModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/typeorm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SnakeNamingStrategy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./core/snake-naming.strategy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodoModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./todo/todo.module'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AuthStrategy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./auth/auth.strategy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AllExceptionsFilter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./core/exception.filter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;APP_FILTER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/core'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// eslint-disable-next-line @typescript-eslint/no-var-requires&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./core/snake-naming.strategy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SnakeNamingStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;imports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ConfigModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;envFilePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.env.local'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.env'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;isGlobal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;TypeOrmModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sqlite'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;namingStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SnakeNamingStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DB_SCHEMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;enableWAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;synchronize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;entities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'**/*.entity.{ts,js}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;subscribers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;maxQueryExecutionTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1초 이상되는 모든 쿼리 등록&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;extra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;synchronous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'normal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;temp_store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'memory'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;mmap_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;page_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32768&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;UsersModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;TodoModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;FirebaseModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;controllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;providers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;AuthStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 제공할 AuthStrategy providers 처리 &lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// ExceptionFilter 등록&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;provide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;APP_FILTER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;useClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AllExceptionsFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;guard-사용-예제&quot;&gt;guard 사용 예제&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// https://github.com/lahuman/daily-quest/blob/main/api/src/user/user.guard.ts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;CanActivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ExecutionContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;HttpException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Injectable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@nestjs/common'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StrategyStorage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../auth/strategy-storage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AuthStrategy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../auth/auth.strategy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Injectable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserGuard&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CanActivate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserGuard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canActivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ExecutionContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;switchToHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authorization&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authorization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Bearer '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HttpException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UNAUTHORIZED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Token Is Not Found.'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UNAUTHORIZED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StrategyStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AuthStrategy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userVerify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 필요한 AuthStrategy.name의 서비스에서 호출 및 사용&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UserGuard ok ::'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/52862644/inject-service-into-guard-in-nest-js&quot;&gt;Inject service into guard in Nest.JS&lt;/a&gt;를 보면 
&lt;a href=&quot;https://github.com/nestjs/passport&quot;&gt;nestjs/passport&lt;/a&gt; 에서 영감을 얻은 내용이라고 합니다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/52862644/inject-service-into-guard-in-nest-js&quot;&gt;Inject service into guard in Nest.JS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="nestjs" /><category term="guard" /><category term="service" /><summary type="html">guard를 사용하는 곳에서 import 하지 않는 방법</summary></entry><entry><title type="html">[Nestjs TIP] Request Header에 validate 처리</title><link href="https://lahuman.github.io/nestjs_header_validate/" rel="alternate" type="text/html" title="[Nestjs TIP] Request Header에 validate 처리" /><published>2023-08-01T00:00:00+00:00</published><updated>2023-08-01T00:00:00+00:00</updated><id>https://lahuman.github.io/nestjs_header_validate</id><content type="html" xml:base="https://lahuman.github.io/nestjs_header_validate/">&lt;h1 id=&quot;nestjs에서-request-header-validate-처리-방법&quot;&gt;Nestjs에서 Request Header validate 처리 방법&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nestjs/nest/issues/4798&quot;&gt;Validate Headers&lt;/a&gt; 를 참고해서 처리 했습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;validateCustomDecorators&lt;/code&gt; 옵션을 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;롤 꼭 설정 해야 합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.ts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ... &lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useGlobalPipes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidationPipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;validateCustomDecorators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;lt;-- Add this to allow the validation pipe to work with our custom decorator&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// request-header.decorator.ts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RequestHeaders&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createParamDecorator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ExecutionContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;switchToHttp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'string'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'number'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'symbol'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// refresh-header.dto.ts&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RefreshHeaderDTO&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;IsString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;IsDefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Expose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'authorization'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;authorization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// app.controller.ts&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;appService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ApiOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'사용자 토큰 만료시 refresh 토큰으로 호출'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/refresh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;RequestHeaders&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RefreshHeaderDTO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tokenRefresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authorization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Bearer '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;사용한 전체 코드는 &lt;a href=&quot;https://github.com/lahuman/daily-quest&quot;&gt;daily-quest&lt;/a&gt;에서 확인 가능합니다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nestjs/nest/issues/4798&quot;&gt;Validate Headers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="nestjs" /><category term="header" /><category term="validation" /><summary type="html">validateCustomDecorators를 이용한 header validate</summary></entry><entry><title type="html">[Nestjs TIP] whitelist 사용시 주의점!</title><link href="https://lahuman.github.io/nestjs_whitelist_options/" rel="alternate" type="text/html" title="[Nestjs TIP] whitelist 사용시 주의점!" /><published>2023-08-01T00:00:00+00:00</published><updated>2023-08-01T00:00:00+00:00</updated><id>https://lahuman.github.io/nestjs_whitelist_options</id><content type="html" xml:base="https://lahuman.github.io/nestjs_whitelist_options/">&lt;h1 id=&quot;whitelist-옵션-사용시-주의점&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;whitelist&lt;/code&gt; 옵션 사용시 주의점!&lt;/h1&gt;

&lt;h2 id=&quot;프로퍼티-제거하기&quot;&gt;&lt;a href=&quot;https://docs.nestjs.com/techniques/validation#stripping-properties&quot;&gt;프로퍼티 제거하기&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;또한, 유효성 검사 파이프는 메서드 핸들러가 수신해서는 안 되는 프로퍼티를 필터링할 수 있습니다. 이 경우 허용 가능한 속성을 화이트리스트에 추가할 수 있으며, 화이트리스트에 포함되지 않은 속성은 결과 객체에서 자동으로 제거됩니다. 예를 들어, 처리기에서 이메일 및 비밀번호 속성을 기대하지만 요청에 나이 속성도 포함된 경우 이 속성은 결과 DTO에서 자동으로 제거될 수 있습니다. 이러한 동작을 사용하려면 화이트리스트를 true로 설정하세요.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useGlobalPipes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ValidationPipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;whitelist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;적용-실패-원인-분석&quot;&gt;적용 실패 원인 분석&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.nestjs.com/techniques/validation#stripping-properties&quot;&gt;프로퍼티 제거하기&lt;/a&gt;를 보고 &lt;code class=&quot;highlighter-rouge&quot;&gt;whitelist&lt;/code&gt;를 추가 했더니, &lt;code class=&quot;highlighter-rouge&quot;&gt;빈 객체&lt;/code&gt;가 넘어오는 문제가 발생했습니다.&lt;/p&gt;

&lt;p&gt;아래는 빈 객체가 넘어온 class 코드 입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// DTO&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserDto&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Controller&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ApiOperation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'사용자 정보'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;ApiResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;201&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodoVo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;AuthUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userVo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserVO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userDto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserDto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserDto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userVo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;원인으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;DTO&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;검증 규칙이 정의 되지 않아서 발생&lt;/code&gt;한 문제였습니다.&lt;/p&gt;

&lt;p&gt;아래와 같이 DTO에 검증 규칙을 추가하면 객체에 값이 할당되어 넘어오게 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UserDto&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;IsNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;IsString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;whitelist&lt;/code&gt; 옵션은 검증되지 않는 값(검증 규칙이 없는)을 제외 처리 하는 옵션으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;보안상 처리를 위해서 사용하는 것을 권고&lt;/code&gt; 합니다.&lt;/p&gt;

&lt;p&gt;사용한 전체 코드는 &lt;a href=&quot;https://github.com/lahuman/daily-quest&quot;&gt;daily-quest&lt;/a&gt;에서 확인 가능합니다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.nestjs.com/techniques/validation#stripping-properties&quot;&gt;프로퍼티 제거하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="nestjs" /><category term="whitelist" /><category term="validation" /><summary type="html">Controller의 @Body()에 객체 값이 안나온다?</summary></entry><entry><title type="html">3. Daily-Quest</title><link href="https://lahuman.github.io/routine_03/" rel="alternate" type="text/html" title="3. Daily-Quest" /><published>2023-08-01T00:00:00+00:00</published><updated>2023-08-01T00:00:00+00:00</updated><id>https://lahuman.github.io/routine_03</id><content type="html" xml:base="https://lahuman.github.io/routine_03/">&lt;h1 id=&quot;daily-quest-1차-완료&quot;&gt;Daily-Quest 1차 완료&lt;/h1&gt;

&lt;h2 id=&quot;사용-기술&quot;&gt;사용 기술&lt;/h2&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;nestjs&lt;/li&gt;
  &lt;li&gt;typeorm&lt;/li&gt;
  &lt;li&gt;sqlite3&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;web&quot;&gt;WEB&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;nextjs&lt;/li&gt;
  &lt;li&gt;tailwindcss&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;기존에 공부했던, firebase와 연계하여 로그인 처리를 하도록 하였습니다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;마치며&quot;&gt;마치며,&lt;/h2&gt;

&lt;p&gt;한동안 개인 플젝의 좌초가 잦았습니다. 이유는 욕심은 많고 시간은 조금만 내다보니 가다가 멈추게 되네요. 
욕심을 조금 내려놓고 PoC를 중점으로 구현해보았습니다.&lt;/p&gt;

&lt;p&gt;기능 추가는 일단 좀 사용해보고 결정해야겠습니다&lt;/p&gt;

&lt;h2 id=&quot;바로가기&quot;&gt;바로가기&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://52.78.54.82:6001&quot;&gt;daily-quest&lt;/a&gt;
&lt;a href=&quot;https://github.com/lahuman/daily-quest&quot;&gt;소스 코드&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="routine" /><category term="todo" /><summary type="html">API / WEB 개발 진행</summary></entry><entry><title type="html">2. Daily-Quest</title><link href="https://lahuman.github.io/routine_02/" rel="alternate" type="text/html" title="2. Daily-Quest" /><published>2023-07-25T00:00:00+00:00</published><updated>2023-07-25T00:00:00+00:00</updated><id>https://lahuman.github.io/routine_02</id><content type="html" xml:base="https://lahuman.github.io/routine_02/">&lt;h1 id=&quot;결국-한달간-빈둥-거리며-고민했습니다&quot;&gt;결국 한달간 빈둥(?) 거리며 고민했습니다.&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;한달 가까이 nextjs를 학습하고, firebase 연동을 테스트 했습니다. (사실 일주일 했네요. ㅋ)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;pocproof-of-concept로-다음의-주요-기능을-먼저-구현하려고-합니다-&quot;&gt;PoC(Proof of Concept)로 다음의 주요 기능을 먼저 구현하려고 합니다 .&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;회원 가입 : firebase 와 연계된 회원 가입&lt;/li&gt;
  &lt;li&gt;일일 미션 / 기본 미션 : 매일 새로 활성화 되는 미션과 한번만 활성화 되는 미션&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://www.erdcloud.com/d/MkppwmkLBvgd9K2eW&quot;&gt;테이블 설계 결과&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;마지막으로&quot;&gt;마지막으로&lt;/h1&gt;

&lt;p&gt;너무 많은 기능을 개발하려고 욕심을 냈더니 시작이 안되어서, 정말 꼭 필요한 기능만 구현하려고 합니다.&lt;/p&gt;</content><author><name></name></author><category term="routine" /><category term="todo" /><summary type="html">데이터 베이스 설계 및 회원 체계</summary></entry><entry><title type="html">Blocking / Non-Blocking 과 동기 / 비동기의 차이</title><link href="https://lahuman.github.io/block-nonblock_async_sync/" rel="alternate" type="text/html" title="Blocking / Non-Blocking 과 동기 / 비동기의 차이" /><published>2023-07-11T00:00:00+00:00</published><updated>2023-07-11T00:00:00+00:00</updated><id>https://lahuman.github.io/block-nonblock_async_sync</id><content type="html" xml:base="https://lahuman.github.io/block-nonblock_async_sync/">&lt;h1 id=&quot;blocking--non-blocking-과-동기--비동기의-차이&quot;&gt;Blocking / Non-Blocking 과 동기 / 비동기의 차이&lt;/h1&gt;

&lt;h2 id=&quot;단어-정의&quot;&gt;단어 정의&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;caller : 호출 하는 함수&lt;/li&gt;
  &lt;li&gt;callee : 호출 당하는 함수&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;개념-정리&quot;&gt;개념 정리&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Blocking과 Non-blocking은 프로그래밍에서 동기성과 관련된 개념으로, 작업의 완료 여부를 기다리는 방식을 나타냅니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Blocking:
    &lt;ul&gt;
      &lt;li&gt;Blocking은 호출된 작업이 완료될 때까지 호출자(또는 스레드)가 대기하는 방식입니다. 즉, 작업이 완료되기 전까지는 다른 작업을 수행할 수 없습니다. 호출자는 작업이 완료될 때까지 멈추고, 작업이 끝나면 결과를 반환받아 다음 동작을 수행합니다. 이러한 방식은 동기적인 특성을 가지며, 단일 스레드에서는 다른 작업을 수행하지 못하고 대기해야 합니다. Blocking 작업은 I/O 작업, 데이터베이스 쿼리 등에서 주로 발생할 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Non-blocking:
    &lt;ul&gt;
      &lt;li&gt;Non-blocking은 호출된 작업이 완료되지 않더라도 호출자(또는 스레드)가 블록되지 않고 다른 작업을 수행할 수 있는 방식입니다. 작업은 비동기적으로 수행되며, 호출자는 작업을 요청하고 다른 작업을 수행한 뒤 나중에 작업의 완료 여부를 확인합니다. 이러한 방식은 작업이 완료되기를 기다리는 동안 다른 작업을 처리할 수 있으므로 자원을 효율적으로 활용할 수 있습니다. Non-blocking 작업은 네트워크 통신, 이벤트 처리 등에서 주로 사용될 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blocking과 Non-blocking은 작업의 동기성과 호출자의 대기 여부에 관련된 개념이므로, 특정 작업의 특성과 요구사항에 맞춰 적절한 방식을 선택하는 것이 중요합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;동기(Synchronous)와 비동기(Asynchronous)는 작업의 실행 방식과 완료 여부를 기준으로 나뉘는 개념입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;동기 (Synchronous):
    &lt;ul&gt;
      &lt;li&gt;동기적 작업은 작업의 호출과 완료가 순차적으로 진행되는 방식입니다. 작업을 호출한 후에는 작업이 완료될 때까지 호출자(또는 스레드)가 대기합니다. 호출자는 작업의 결과를 반환받고, 그 이후에 다음 동작을 수행합니다. 동기적 작업은 호출자가 작업의 완료를 기다리기 때문에 호출자는 작업의 속도에 영향을 받을 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비동기 (Asynchronous):
    &lt;ul&gt;
      &lt;li&gt;비동기적 작업은 작업의 호출과 완료가 동시에 진행되지 않고, 작업을 호출한 후에도 호출자(또는 스레드)가 다른 작업을 수행할 수 있는 방식입니다. 작업은 백그라운드에서 비동기적으로 실행되며, 작업의 완료 여부를 호출자가 대기하지 않고 나중에 확인할 수 있습니다. 비동기적 작업은 일반적으로 콜백 함수, 프라미스(Promise), 비동기/대기(Async/await) 등을 통해 작업의 완료를 처리하고 결과를 처리합니다. 이를 통해 호출자는 다른 작업을 수행하면서 자원을 효율적으로 활용할 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;동기적 작업은 작업의 완료를 기다려야 하므로 호출자가 블록될 수 있지만, 결과의 순서와 신뢰성을 보장할 수 있습니다. 반면 비동기적 작업은 작업의 완료 여부를 기다리지 않아도 되므로 호출자는 다른 작업을 수행할 수 있지만, 작업의 순서와 결과의 처리는 추가적인 관리가 필요할 수 있습니다.&lt;/p&gt;

&lt;p&gt;동기/비동기는 작업의 특성과 환경에 따라 선택되며, 비동기적 작업은 주로 네트워크 통신, 이벤트 처리 등에서 사용됩니다.&lt;/p&gt;

&lt;h2 id=&quot;동기-blocking&quot;&gt;동기 Blocking&lt;/h2&gt;

&lt;div class=&quot;mermaid&quot;&gt; 
sequenceDiagram;
    alt Blocking;
        Caller-&amp;gt;&amp;gt;+Callee: call;
        note right of Callee: getResult;
        Callee-&amp;gt;&amp;gt;-Caller: return value;
    end;
&lt;/div&gt;

&lt;h2 id=&quot;비동기-blocking&quot;&gt;비동기 Blocking&lt;/h2&gt;

&lt;div class=&quot;mermaid&quot;&gt; 
sequenceDiagram;
    alt Blocking;
        Caller-&amp;gt;&amp;gt;+Callee: call;
        note right of Callee: getResult;
        note right of Callee: callback;
        Callee-&amp;gt;&amp;gt;-Caller: return value;
    end
&lt;/div&gt;

&lt;h2 id=&quot;동기-non-blocking&quot;&gt;동기 Non-blocking&lt;/h2&gt;

&lt;div class=&quot;mermaid&quot;&gt; 
sequenceDiagram;
    Caller-&amp;gt;&amp;gt;+Callee: call;
    note right of Callee: getResult; 
    Callee-&amp;gt;&amp;gt;+Caller: return future;
    Caller-&amp;gt;&amp;gt;-Callee: isDone;
    Callee-&amp;gt;&amp;gt;+Caller: No;
    Caller-&amp;gt;&amp;gt;-Callee: isDone;
    Callee-&amp;gt;&amp;gt;+Caller: No;
    Caller-&amp;gt;&amp;gt;-Callee: isDone;
    Callee-&amp;gt;&amp;gt;-Caller: Yes;
&lt;/div&gt;

&lt;h2 id=&quot;비동기-non-blocking&quot;&gt;비동기 Non-blocking&lt;/h2&gt;

&lt;div class=&quot;mermaid&quot;&gt; 
sequenceDiagram;
    Caller-&amp;gt;&amp;gt;Callee: call;
    Callee-&amp;gt;&amp;gt;Caller: return void;
    note right of Callee: getResult; 
    note right of Callee: callback; 
&lt;/div&gt;

&lt;h2 id=&quot;정리&quot;&gt;정리&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;동기&lt;/th&gt;
      &lt;th&gt;비동기&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Blocking&lt;/td&gt;
      &lt;td&gt;호출자는 작업 완료까지 대기하고, 결과를 직접 처리&lt;/td&gt;
      &lt;td&gt;호출자는 작업 완료까지 대기하고, 결과는 호출자가 처리&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Non-Blocking&lt;/td&gt;
      &lt;td&gt;호출자는 다른 작업 수행 가능하며, 결과를 얻은 후 직접 처리&lt;/td&gt;
      &lt;td&gt;호출자는 다른 작업 수행 가능하며, 결과는 호출된 대상이 처리&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://storage.googleapis.com/static.fastcampus.co.kr/prod/uploads/202306/042009-717/[%ED%8C%A8%EC%8A%A4%ED%8A%B8%EC%BA%A0%ED%8D%BC%EC%8A%A4]-%EA%B5%90%EC%9C%A1%EA%B3%BC%EC%A0%95%EC%86%8C%EA%B0%9C%EC%84%9C-spring-webflux-%EC%99%84%EC%A0%84-%EC%A0%95%EB%B3%B5---%EC%BD%94%EB%A3%A8%ED%8B%B4%EB%B6%80%ED%84%B0-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-msa-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EA%B9%8C%EC%A7%80.pdf&quot;&gt;Spring WebFlux 완전 정보&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="개념" /><summary type="html">한번 정리해보자!</summary></entry><entry><title type="html">Module not found: Can’t resolve ‘encoding’</title><link href="https://lahuman.github.io/nextjs13_encoding_error/" rel="alternate" type="text/html" title="Module not found: Can't resolve 'encoding'" /><published>2023-07-05T00:00:00+00:00</published><updated>2023-07-05T00:00:00+00:00</updated><id>https://lahuman.github.io/nextjs13_encoding_error</id><content type="html" xml:base="https://lahuman.github.io/nextjs13_encoding_error/">&lt;h1 id=&quot;nextjs-를-사용한-개인-플젝-중-cant-resolve-encoding-오류를-만나다&quot;&gt;nextjs 를 사용한 개인 플젝 중 Can’t resolve ‘encoding’ 오류를 만나다&lt;/h1&gt;

&lt;h2 id=&quot;오류-내용&quot;&gt;오류 내용&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;node-fetch에서 encoding 모듈을 찾을 수 없다는 오류가 로그에서 확인되었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
Module not found: Can&lt;span class=&quot;s1&quot;&gt;'t resolve '&lt;/span&gt;encoding&lt;span class=&quot;s1&quot;&gt;' in '&lt;/span&gt;/Users/lahuman/DEV/routine/web/node_modules/.pnpm/node-fetch@2.6.7/node_modules/node-fetch/lib&lt;span class=&quot;s1&quot;&gt;'
...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;해결-방법&quot;&gt;해결 방법&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;네, 찾을 수 없는 모듈은 설치해주면 되죠!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pnpm add &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; encoding
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;마치며&quot;&gt;마치며&lt;/h2&gt;

&lt;p&gt;사실 위에 오류로그를 무시해도 동작에는 문제가 없습니다. 
찝찝함을 없애기 위해서 방안을 찾아보니 너무나도 단순하게 모듈을 설치하라는 가이드가 나오네요.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/supabase/supabase-js/issues/612&quot;&gt;Can’t resolve ‘encoding’ #612&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="nextjs" /><category term="error" /><summary type="html">Nextjs13을 사용 중 이상한 오류가 난다.</summary></entry><entry><title type="html">1. Daily-Quest</title><link href="https://lahuman.github.io/routine_01/" rel="alternate" type="text/html" title="1. Daily-Quest" /><published>2023-06-22T00:00:00+00:00</published><updated>2023-06-22T00:00:00+00:00</updated><id>https://lahuman.github.io/routine_01</id><content type="html" xml:base="https://lahuman.github.io/routine_01/">&lt;h1 id=&quot;나날이-게을러-지는-나를-반성하는-프로그램을-만들어-보자&quot;&gt;나날이 게을러 지는 나를 반성하는 프로그램을 만들어 보자!&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;요즘 많이 게을러 졌다. 공부도 재미 없고 일도 재미 없다. 이를 극복하기 위한 방안으로 루틴을 만들어 보려고 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;루틴이란&quot;&gt;루틴이란?&lt;/h2&gt;

&lt;p&gt;“루틴”은 주로 일상적인 일련의 활동이나 행동 패턴을 의미합니다. 이는 개인이나 조직이 정기적으로 반복하거나 예측 가능한 일정에 따라 수행하는 활동들을 포함합니다. 루틴은 주로 생활의 일부로서 자동적으로 이루어지는 것들을 의미하며, 특정한 목적을 가지고 이루어지는 경우도 있습니다.&lt;/p&gt;

&lt;p&gt;예를 들어, 개인의 루틴은 아침에 일어나서 세면하고 식사를 하고 출근하는 것일 수 있습니다. 이는 매일 반복되며 예상 가능한 일정에 따라 수행되는 활동입니다. 또한, 운동하는 습관이나 공부하는 시간을 정해두는 것도 루틴의 예입니다.&lt;/p&gt;

&lt;p&gt;조직이나 기업에서도 루틴은 중요한 역할을 합니다. 회의 일정, 업무 프로세스, 일일 업무 등은 루틴에 속할 수 있습니다. 이를 통해 조직은 일상적인 활동을 체계적으로 관리하고 효율적으로 운영할 수 있습니다.&lt;/p&gt;

&lt;p&gt;루틴은 안정감과 예측 가능성을 제공하여 개인이나 조직이 목표를 달성하고 생산적인 활동을 수행하는 데 도움을 줍니다. 그러나 일상적인 루틴에 갇혀 창의성이나 유연성이 부족해질 수도 있으므로 적절한 균형을 유지하는 것이 중요합니다.&lt;/p&gt;

&lt;h2 id=&quot;주요-기능&quot;&gt;주요 기능&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;TODO : 루틴을 만들기 위해서 해야 할 일&lt;/li&gt;
  &lt;li&gt;알람 기능 : 루틴 시작 시간을 알려 줌&lt;/li&gt;
  &lt;li&gt;이력 확인 : 주, 월 기준으로 TODO 성공/실패 표기&lt;/li&gt;
  &lt;li&gt;회원 가입 / 로그인 : 회원 별 관리를 위한 기본 기능&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;todo-등록-항목&quot;&gt;TODO 등록 항목&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;*반복 : 매일 / 업무일 / 주말 / 한번만 선택 가능&lt;/li&gt;
  &lt;li&gt;알람 : HH:MM 형식으로 알람 시간&lt;/li&gt;
  &lt;li&gt;할일 : 해야 할 일을 TEXT 형식으로 작성&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;마지막으로&quot;&gt;마지막으로&lt;/h1&gt;

&lt;p&gt;요즘 많이 게을러져서 일을 벌리고 마무리를 못하고 있네요. 
조금씩 천천히 진행 예정입니다.&lt;/p&gt;</content><author><name></name></author><category term="routine" /><category term="todo" /><summary type="html">간단한 TODO 리스트와 알람 기능으로 루틴을 만들자!</summary></entry><entry><title type="html">REDIS 접속 관리를 위한 Connection pool이 필요할까요?</title><link href="https://lahuman.github.io/redis_single_thread_pool/" rel="alternate" type="text/html" title="REDIS 접속 관리를 위한 Connection pool이 필요할까요? " /><published>2023-06-13T00:00:00+00:00</published><updated>2023-06-13T00:00:00+00:00</updated><id>https://lahuman.github.io/redis_single_thread_pool</id><content type="html" xml:base="https://lahuman.github.io/redis_single_thread_pool/">&lt;h1 id=&quot;redis-접속-관리를-위한-connection-pool이-필요할까요&quot;&gt;REDIS 접속 관리를 위한 Connection pool이 필요할까요?&lt;/h1&gt;

&lt;p&gt;Redis는 기본적으로 싱글 스레드로 동작하는 인메모리 데이터베이스입니다. 이는 Redis가 단일 스레드로 모든 요청을 처리하고, 이벤트 루프를 사용하여 비동기 입출력(IO) 작업을 처리한다는 것을 의미합니다.&lt;/p&gt;

&lt;p&gt;싱글 스레드 모델의 장점은 구현이 간단하고, 동시성 문제를 처리하기 위해 별도의 동기화 메커니즘을 사용할 필요가 없다는 것입니다. 그러나 이 모델은 요청을 처리하는 동안 다른 요청이 블로킹될 수 있다는 단점도 있습니다.&lt;/p&gt;

&lt;p&gt;Connection pool은 여러 클라이언트가 동시에 Redis 서버에 연결할 수 있는 기능을 제공하는 것이며, 주로 애플리케이션의 성능과 확장성을 향상시키기 위해 사용됩니다. 일반적으로 싱글 스레드로 동작하는 Redis는 여러 클라이언트가 동시에 요청을 보내는 경우에도 충분한 처리량을 제공할 수 있습니다. 따라서 일반적으로 Redis를 사용하는 경우에는 connection pool을 사용할 필요가 없습니다.&lt;/p&gt;

&lt;p&gt;Redis 6.0부터는 threadIO라는 새로운 모드가 도입되었습니다. 이 모드에서는 입출력(IO) 작업을 다중 스레드로 처리하여 높은 처리량을 달성할 수 있습니다. 그러나 여전히 Redis의 코어 로직은 싱글 스레드로 동작하며, 다중 스레드는 주로 IO 작업을 처리하는 데 사용됩니다. 따라서 threadIO를 사용하는 경우에도 connection pool은 Redis의 코어 로직에는 영향을 미치지 않으며, 싱글 스레드 처리 모델이 유지됩니다.&lt;/p&gt;

&lt;p&gt;요약하자면, Redis는 싱글 스레드로 동작하는 인메모리 데이터베이스이기 때문에 일반적으로 connection pool을 사용할 필요는 없습니다. Redis 6.0의 threadIO 모드를 사용하는 경우에도 connection pool은 Redis의 코어 동작에는 영향을 주지 않습니다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.alibabacloud.com/tech-news/redis/1hq-is-redis-cluster-single-threaded&quot;&gt;Is Redis Cluster Single Threaded&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lettuce.io/core/release/reference/index.html#connection-pooling.is-connection-pooling-necessary&quot;&gt;connection-pooling.is-connection-pooling-necessary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="redis" /><category term="connection" /><category term="pool" /><summary type="html">결론만 알려드리면, 필요하지 않습니다.</summary></entry></feed>