<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://lahuman.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.8.4">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2020-08-08T21:36:27+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">wsl2를 이용시 localhost:port로 접근 해결방법</title><link href="https://lahuman.github.io/wsl2_port_open/" rel="alternate" type="text/html" title="wsl2를 이용시 localhost:port로 접근 해결방법" /><published>2020-08-08T00:00:00+09:00</published><updated>2020-08-08T00:00:00+09:00</updated><id>https://lahuman.github.io/wsl2_port_open</id><content type="html" xml:base="https://lahuman.github.io/wsl2_port_open/">&lt;h1 id=&quot;wsl2를-이용시-localhostport로-접근-해결방법&quot;&gt;wsl2를 이용시 localhost:port로 접근 해결방법&lt;/h1&gt;

&lt;p&gt;오늘 갑자기 node로 띄운 후 접근이 안되었습니다.&lt;/p&gt;

&lt;p&gt;해결 방법을 찾아보았는데 &lt;a href=&quot;https://codeac.tistory.com/118&quot;&gt;WSL2, 외부 네트워크와 연결하기&lt;/a&gt;를 보고 따라 해보니 잘되었습니다.
내용 자체는 외부와 연결이지만, 저의 경우 내부와의 접근도 안되어 시도 하였습니다.&lt;/p&gt;

&lt;p&gt;먼저 아래의 내용을 가진  &lt;code class=&quot;highlighter-rouge&quot;&gt;wsl2-networks.ps1&lt;/code&gt;을 생성합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$remoteport = bash.exe -c &quot;ifconfig eth0 | grep 'inet '&quot;
$found = $remoteport -match '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}';

if( $found ){
  $remoteport = $matches[0];
} else{
  echo &quot;The Script Exited, the ip address of WSL 2 cannot be found&quot;;
  exit;
}

#[Ports]

#All the ports you want to forward separated by coma
$ports=@(80,443,10000,3000,5000);


#[Static ip]
#You can change the addr to your ip config to listen to a specific address
$addr='0.0.0.0';
$ports_a = $ports -join &quot;,&quot;;


#Remove Firewall Exception Rules
iex &quot;Remove-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock' &quot;;

#adding Exception Rules for inbound and outbound Rules
iex &quot;New-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock' -Direction Outbound -LocalPort $ports_a -Action Allow -Protocol TCP&quot;;
iex &quot;New-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock' -Direction Inbound -LocalPort $ports_a -Action Allow -Protocol TCP&quot;;

for( $i = 0; $i -lt $ports.length; $i++ ){
  $port = $ports[$i];
  iex &quot;netsh interface portproxy delete v4tov4 listenport=$port listenaddress=$addr&quot;;
  iex &quot;netsh interface portproxy add v4tov4 listenport=$port listenaddress=$addr connectport=$port connectaddress=$remoteport&quot;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 스크립트에서 port는 80,443,10000,3000,5000를 얼여 두었는데요 포트를 변경하려면 다음 라인(14)을 수정하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#All the ports you want to forward separated by coma
$ports=@(80,443,10000,3000,5000);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 파일을 시작 스크립트로 추가 하면 됩니다.&lt;/p&gt;

&lt;p&gt;만약 메뉴얼로 진행할 경우 다음 명령어를 관리자 모드로 실행한 CMD에서 실행하세요.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PowerShell.exe -ExecutionPolicy Bypass -File .\wsl2-forward-server.ps1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;처음 powershell을 실행하면 파일이 없다는 오류가 발생하지만, 동작 됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;첫-실행-오류&quot;&gt;첫 실행 오류&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Remove-NetFireWallRule : 'WSL 2 Firewall Unlock'과(와) 같은 'DisplayName' 속성을 가진 MSFT_NetFirewallRule 개체가 없습
니다. 속성 값을 검증하고 다시 시도하십시오.
위치 줄:1 문자:1
+ Remove-NetFireWallRule -DisplayName 'WSL 2 Firewall Unlock'
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (WSL 2 Firewall Unlock:String) [Remove-NetFirewallRule], CimJobException
    + FullyQualifiedErrorId : CmdletizationQuery_NotFound_DisplayName,Remove-NetFirewallRule



Name                  : {1c1f5350-1d56-4715-ae96-79bf9cb4bf84}
DisplayName           : WSL 2 Firewall Unlock
Description           :
DisplayGroup          :
Group                 :
Enabled               : True
Profile               : Any
Platform              : {}
Direction             : Outbound
Action                : Allow
EdgeTraversalPolicy   : Block
LooseSourceMapping    : False
LocalOnlyMapping      : False
Owner                 :
PrimaryStatus         : OK
Status                : 저장소에서 규칙을 구문 분석했습니다. (65536)
EnforcementStatus     : NotApplicable
PolicyStoreSource     : PersistentStore
PolicyStoreSourceType : Local

Name                  : {b6435941-bbbb-4754-8b5c-0a0526592ecf}
DisplayName           : WSL 2 Firewall Unlock
Description           :
DisplayGroup          :
Group                 :
Enabled               : True
Profile               : Any
Platform              : {}
Direction             : Inbound
Action                : Allow
EdgeTraversalPolicy   : Block
LooseSourceMapping    : False
LocalOnlyMapping      : False
Owner                 :
PrimaryStatus         : OK
Status                : 저장소에서 규칙을 구문 분석했습니다. (65536)
EnforcementStatus     : NotApplicable
PolicyStoreSource     : PersistentStore
PolicyStoreSourceType : Local

지정된 파일을 찾을 수 없습니다.



지정된 파일을 찾을 수 없습니다.



지정된 파일을 찾을 수 없습니다.



지정된 파일을 찾을 수 없습니다.



지정된 파일을 찾을 수 없습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;두번째-실행시&quot;&gt;두번째 실행시&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Name                  : {57c6491d-13f9-4d76-944f-7efd5624efd8}
DisplayName           : WSL 2 Firewall Unlock
Description           :
DisplayGroup          :
Group                 :
Enabled               : True
Profile               : Any
Platform              : {}
Direction             : Outbound
Action                : Allow
EdgeTraversalPolicy   : Block
LooseSourceMapping    : False
LocalOnlyMapping      : False
Owner                 :
PrimaryStatus         : OK
Status                : 저장소에서 규칙을 구문 분석했습니다. (65536)
EnforcementStatus     : NotApplicable
PolicyStoreSource     : PersistentStore
PolicyStoreSourceType : Local

Name                  : {982f1982-0a78-42ad-b2c6-eb8a54302847}
DisplayName           : WSL 2 Firewall Unlock
Description           :
DisplayGroup          :
Group                 :
Enabled               : True
Profile               : Any
Platform              : {}
Direction             : Inbound
Action                : Allow
EdgeTraversalPolicy   : Block
LooseSourceMapping    : False
LocalOnlyMapping      : False
Owner                 :
PrimaryStatus         : OK
Status                : 저장소에서 규칙을 구문 분석했습니다. (65536)
EnforcementStatus     : NotApplicable
PolicyStoreSource     : PersistentStore
PolicyStoreSourceType : Local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeac.tistory.com/118&quot;&gt;WSL2, 외부 네트워크와 연결하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="wsl2" /><category term="port" /><category term="foward" /><summary type="html">wsl2에서 서버를 띄었는데 localhost로 접근 안될때 해결법</summary></entry><entry><title type="html">ReactJS에서 IE 11 호환 처리</title><link href="https://lahuman.github.io/reactjs_ie11/" rel="alternate" type="text/html" title="ReactJS에서 IE 11 호환 처리" /><published>2020-08-04T00:00:00+09:00</published><updated>2020-08-04T00:00:00+09:00</updated><id>https://lahuman.github.io/reactjs_ie11</id><content type="html" xml:base="https://lahuman.github.io/reactjs_ie11/">&lt;h1 id=&quot;reactjs에서-ie-11-호환-처리&quot;&gt;ReactJS에서 IE 11 호환 처리&lt;/h1&gt;

&lt;h2 id=&quot;1-react-app-polyfill&quot;&gt;1. react-app-polyfill&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 리엑트 개발에서 사용하는 다양한 문법을 변환해주는 라이브러리입니다.
    + Promise, window.fetch, Symbol, Object.assign, Array.from + [ IE9 Map, Set ]등 최소한만 포함하고 있어 사이즈가 작고 가벼운 게 특징

- 설치 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; npm install react-app-polyfill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 사용법
    + stable은 package.json의 browserslist에 해당하는 브라우저에 대해 안정적인 코드를 사용 가능
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// index.js import 설정
// IE9의 경우
import 'react-app-polyfill/ie9';
import 'react-app-polyfill/stable';

// IE11의 경우
import 'react-app-polyfill/ie11';
import 'react-app-polyfill/stable';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-babelpolyfill&quot;&gt;2. @babel/polyfill&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 프로젝트에서 async, await, function*를 프로젝트에서 활용하는 경우 설치
- 설치  ``` $&amp;gt; npm install core-js regenerator-runtime ```
- 사용법 ``` //index.js import 설정 import 'core-js/stable'; import 'regenerator-runtime/runtime'; ```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-ieedge-설정&quot;&gt;3. IE=edge 설정&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- IE에서 최신 버전으로 호환성 보기가 되도록 설정
- 사용법 ``` &amp;lt;!-- index.html 추가 --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;이렇게 3가지를 처리하면 IE 11에서 어느 정도 동작합니다.&lt;/p&gt;

&lt;p&gt;하지만 몇몇 javascript, css는 오동작하니 수동으로 수정이 필요 할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://velog.io/@pks787/react-IE%EC%97%90%EC%84%9C-%EC%9E%91%EB%8F%99%EC%8B%9C%ED%82%A4%EA%B8%B0&quot;&gt;react, IE에서 호환(크로스브라우징)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="polyfill" /><category term="reactjs" /><summary type="html">polyfill 설정과 IE 11로 설정하면 잘됩니다.</summary></entry><entry><title type="html">하루 회고</title><link href="https://lahuman.github.io/20200802/" rel="alternate" type="text/html" title="하루 회고" /><published>2020-08-02T00:00:00+09:00</published><updated>2020-08-02T00:00:00+09:00</updated><id>https://lahuman.github.io/20200802</id><content type="html" xml:base="https://lahuman.github.io/20200802/">&lt;h1 id=&quot;하루-회고&quot;&gt;하루 회고&lt;/h1&gt;

&lt;p&gt;최근 저녁에 일기를 쓰고 난 후, 
수연이와 지나간 하루의 시시콜콜한 이야기를 나누면서 
하루를 마무리하고 있습니다.&lt;/p&gt;

&lt;p&gt;내가 알지 못하는 수연이의 하루와 
수연이가 알지 못한 나의 하루를 공유하며, 
저도 지나간 하루를 되돌아보게 되네요.&lt;/p&gt;

&lt;p&gt;요즘의 저는 아쉽고 가끔은 화도 나고 또 즐겁기도 하는 늘 새로운 하루하루를 보내고 있습니다.&lt;/p&gt;

&lt;p&gt;아쉬운 건 채우고, 화나는 건 털어내고, 즐거운 일은 더욱 즐겁게 만들기 위해 노력해야겠습니다.&lt;/p&gt;</content><category term="단상" /><category term="하루회고" /><summary type="html">일상을 공유하고 공감해주는 사람이 있다.</summary></entry><entry><title type="html">일희일비 하지 말자</title><link href="https://lahuman.github.io/20200801/" rel="alternate" type="text/html" title="일희일비 하지 말자" /><published>2020-08-01T00:00:00+09:00</published><updated>2020-08-01T00:00:00+09:00</updated><id>https://lahuman.github.io/20200801</id><content type="html" xml:base="https://lahuman.github.io/20200801/">&lt;h1 id=&quot;일희일비-하지-않도록-노력하자&quot;&gt;일희일비 하지 않도록 노력하자.&lt;/h1&gt;

&lt;p&gt;누군가에게 실망하고, 화나고, 감사하는 등의 많은 일들이 나를 지나가고 있습니다.&lt;/p&gt;

&lt;p&gt;20대에는 여유가 없고 불안함이 커서 고마운 일을 기억하기보다는 실망하고 화나는 일들을 더 많이 기억하고 행동하였습니다. 
30대에는 조금 여유가 생겨서 고마운 일들을 기억하고 행동할 수 있었습니다.&lt;/p&gt;

&lt;p&gt;40대에 이르러서는 모든 일에 일희일비하는 게 의미 없음을 깨달았습니다.&lt;/p&gt;

&lt;p&gt;나에게 잘해주는 척 뒤통수를 치는 사람도 있었고, 
묵묵히 열심히 자신의 일을 하는 사람인데 알려지지 않았던 분도 있었습니다.&lt;/p&gt;

&lt;p&gt;실망감을 주는 사람에게 아쉬워하기보다는 그냥 그런 사람인가 보구나 라고 생각하고, 
내가 생각하지 못한 도움을 주는 사람에게는 꼭 갚아주자 생각하고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;이것-또한-지나가리라&quot;&gt;이것 또한 지나가리라.&lt;/h2&gt;</content><category term="단상" /><category term="일희일비" /><summary type="html">많은 일들을 겪고 느끼고 있다.</summary></entry><entry><title type="html">Express 에서 ReactJS 소스 코드 구동</title><link href="https://lahuman.github.io/reactjs_on_express/" rel="alternate" type="text/html" title="Express 에서 ReactJS 소스 코드 구동" /><published>2020-07-21T00:00:00+09:00</published><updated>2020-07-21T00:00:00+09:00</updated><id>https://lahuman.github.io/reactjs_on_express</id><content type="html" xml:base="https://lahuman.github.io/reactjs_on_express/">&lt;h1 id=&quot;express-에서-reactjs-소스-코드-구동&quot;&gt;Express 에서 ReactJS 소스 코드 구동&lt;/h1&gt;

&lt;p&gt;ReactJS 프로젝트에서 다음의 명령어로 build를 하면 build 라는 디렉토리가 생성됩니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; npm run build
... building
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;build 디렉토리를 express 의 ROOT 디렉토리로 복사를 합니다.&lt;/p&gt;

&lt;p&gt;이후 아래와 같은 설정을 하여 ReactJS의 결과를 표출 하도록 지원 합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const express = require('express');
const path = require('path');

const app = express();

// Serve the static files from the React app
app.use(express.static(path.join(__dirname, 'client/build')));

// An api endpoint that returns a short list of items
app.get('/api/getList', (req,res) =&amp;gt; {
    var list = [&quot;item1&quot;, &quot;item2&quot;, &quot;item3&quot;];
    res.json(list);
    console.log('Sent list of items');
});

// Handles any requests that don't match the ones above
app.get('*', (req,res) =&amp;gt;{
    res.sendFile(path.join(__dirname+'/client/build/index.html'));
});

const port = process.env.PORT || 5000;
app.listen(port);

console.log('App is listening on port ' + port);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고 자료를 보면 더 정리된 내용이 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.to/nburgess/creating-a-react-app-with-react-router-and-an-express-backend-33l3&quot;&gt;Deploying a React app with React-Router and an Express Backend&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="express" /><category term="reactjs" /><summary type="html">하나의 Express에서 backend/frontend 처리하기</summary></entry><entry><title type="html">swagger 2.0에서 OAS 3.0으로 변환시 body 값이 undefined로 표출 되는 현상 처리</title><link href="https://lahuman.github.io/oas3.0_body_name_setting/" rel="alternate" type="text/html" title="swagger 2.0에서 OAS 3.0으로 변환시 body 값이 undefined로 표출 되는 현상 처리" /><published>2020-07-18T00:00:00+09:00</published><updated>2020-07-18T00:00:00+09:00</updated><id>https://lahuman.github.io/oas3.0_body_name_setting</id><content type="html" xml:base="https://lahuman.github.io/oas3.0_body_name_setting/">&lt;h1 id=&quot;swagger-20에서-oas-30으로-변환시-body-값이-undefined로-표출-되는-현상-처리&quot;&gt;swagger 2.0에서 OAS 3.0으로 변환시 body 값이 undefined로 표출 되는 현상 처리&lt;/h1&gt;

&lt;p&gt;이전에 작성했던 Swagger 2.0으로 된 프로젝트를 새로 배운 OAS 3.0으로 변환하는 작업을 해보았습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://editor.swagger.io/&quot;&gt;Swagger Editor&lt;/a&gt;을 통해서 변환을 하고, &lt;a href=&quot;https://www.npmjs.com/package/oas-generator&quot;&gt;oas-generator&lt;/a&gt; 이용해서 코드를 자동 생성하였습니다.&lt;/p&gt;

&lt;p&gt;이후 POST, PUT 등을 확인하는 중 requestBody를 넘기면 다음과 같이 접근해야 값을 확인 할 수 있었습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function createPets(req, res, next) {
    let params = req.swagger.params[undefined].value;
    res.status(200).send({ status: 'OK', message: 'TEST OK!', params });
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Swagger 2.0에서는  req.swagger.params.body.value 를 이용하였는데, 어떤 문제인지 검색을 해보니, OAS 3.0에서는 &lt;strong&gt;x-name&lt;/strong&gt;이 라는 옵션을 주어서 requestBody의 이름을 설정해야 했습니다.&lt;/p&gt;

&lt;h3 id=&quot;샘플&quot;&gt;샘플&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;post:
  summary: Create a pet
  operationId: createPets
  tags:
    - pets
  requestBody:
    description: Pet to add to the store
    x-name: pet # 이 이름을 사용해서 조회 하도록 합니다.
    required: true
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Pet'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 다음과 같이 사용할 수 있었습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function createPets(req, res, next) {
    let params = req.swagger.params.pet.value;
    res.status(200).send({ status: 'OK', message: 'TEST OK!', params });
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 내용은 &lt;a href=&quot;https://github.com/isa-group/oas-tools&quot;&gt;5. Add name property to request bodies&lt;/a&gt;를 보면 예제로 표기 되어 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/isa-group/oas-tools&quot;&gt;5. Add name property to request bodies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="oas" /><category term="swagger" /><summary type="html">x-name 이라는 것이 없으면 undefined로 표기 된다.</summary></entry><entry><title type="html">TIP] Nginx location 설정 옵션 정보</title><link href="https://lahuman.github.io/nginx_location_options/" rel="alternate" type="text/html" title="TIP] Nginx location 설정 옵션 정보" /><published>2020-07-17T00:00:00+09:00</published><updated>2020-07-17T00:00:00+09:00</updated><id>https://lahuman.github.io/nginx_location_options</id><content type="html" xml:base="https://lahuman.github.io/nginx_location_options/">&lt;h1 id=&quot;nginx-location-설정-옵션&quot;&gt;Nginx location 설정 옵션&lt;/h1&gt;

&lt;p&gt;Nginx를 사용하다가 특정 접근 경로에 대하여 다른 정적 페이지를 바라보게 처리하는 일이 생겼습니다.&lt;/p&gt;

&lt;p&gt;이때, html을 보도록 설정하였는데 파일이 다운로드 되는 현상을 겪었습니다.&lt;/p&gt;

&lt;p&gt;이유는 &lt;strong&gt;default_type&lt;/strong&gt;을 설정하지 않아서 였습니다.&lt;/p&gt;

&lt;h4 id=&quot;샘플&quot;&gt;샘플&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;location = /approval {
        default_type &quot;text/html&quot;;
        alias /home/ubuntu/approval/index.html;
        index index.html;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 외에도 location 설정시 =, ~, -*, ^- 등을 uri 전에 추가 할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;문법&quot;&gt;문법&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Syntax:	location [ = | ~ | ~* | ^~ ] uri { ... }
location @name { ... }
Default:	—
Context:	server, location
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;뜻은-다음과-같습니다&quot;&gt;뜻은 다음과 같습니다.&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 정확하게 일치 
location = / {
    [ configuration A ]
}

# 지정한 패턴으로 시작
location / {
    [ configuration B ]
}

# 지정한 패턴으로 시작
location /documents/ {
    [ configuration C ]
}

# 지정한 패턴으로 시작 패턴이 일치 하면 다른 패턴 탐색 중지( 정규식 아님 )
location ^~ /images/ {
    [ configuration D ]
}

# 정규식 표현 일치 - 대소문자 구분
location ~ \.(gif|jpg|jpeg)$ {
    [ configuration E ]
}

# 정규식 표현 일치 - 대소문자 구분 안함
location ~* \.(gif|jpg|jpeg)$ {
    [ configuration F ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;별겨 아니지만 삽질 하지 않도록 기억해 두어야겠네요! :)&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html&quot;&gt;Module ngx_http_core_module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="nginx" /><category term="location" /><summary type="html">별겨 아닌데 몰라서 삽질한 Nginx 설정</summary></entry><entry><title type="html">52g Catalyst 수료식을 하였습니다.</title><link href="https://lahuman.github.io/52g_catalyst/" rel="alternate" type="text/html" title="52g Catalyst 수료식을 하였습니다." /><published>2020-07-15T00:00:00+09:00</published><updated>2020-07-15T00:00:00+09:00</updated><id>https://lahuman.github.io/52g_catalyst</id><content type="html" xml:base="https://lahuman.github.io/52g_catalyst/">&lt;h1 id=&quot;52g-catalyst-수료식을-하였습니다&quot;&gt;52g Catalyst 수료식을 하였습니다.&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/52g.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;GS 그룹사에서 진행한 52g Catalyst 프로그램의 수료식을 진행하였습니다.&lt;/p&gt;

&lt;p&gt;다른 것보다 에세이를 작성하면서 꽤 많은 생각을 하게 되어서 즐거웠습니다.&lt;/p&gt;

&lt;h2 id=&quot;즐거웠던-프로그램-종료&quot;&gt;즐거웠던 프로그램 종료&lt;/h2&gt;</content><category term="52g" /><category term="catalyst" /><summary type="html">GS 그룹사에서 진행한 문제를 찾고 해결하는 조직</summary></entry><entry><title type="html">Swagger? OAS? with NodeJS</title><link href="https://lahuman.github.io/oas3.0-nodejs/" rel="alternate" type="text/html" title="Swagger? OAS? with NodeJS" /><published>2020-07-13T00:00:00+09:00</published><updated>2020-07-13T00:00:00+09:00</updated><id>https://lahuman.github.io/oas3.0-nodejs</id><content type="html" xml:base="https://lahuman.github.io/oas3.0-nodejs/">&lt;h1 id=&quot;swagger-oas-with-nodejs&quot;&gt;Swagger? OAS? with NodeJS&lt;/h1&gt;

&lt;hr /&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/buiPEVCt5Dxs1t&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/lahuman1/swagger-oas-with-nodejs-236847971&quot; title=&quot;Swagger? OAS? with NodeJS&quot; target=&quot;_blank&quot;&gt;Swagger? OAS? with NodeJS&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;https://www.slideshare.net/lahuman1&quot; target=&quot;_blank&quot;&gt;Daniel Lim&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;what-is-swagger&quot;&gt;What is Swagger?&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;스웨거(Swagger)는 개발자가 REST 웹 서비스를 설계, 빌드, 문서화, 소비하는 일을 도와주는 대형 도구 생태계의 지원을 받는 오픈 소스 소프트웨어 프레임워크이다. 대부분의 사용자들은 스웨거 UI 도구를 통해 스웨거를 식별하며 스웨거 툴셋에는 자동화된 문서화, 코드 생성, 테스트 케이스 생성 지원이 포함된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Swagger는 REST API를 설계, 빌드, 문서화 및 소비하는 데 도움이되는 OpenAPI 사양을 기반으로 구축 된 오픈 소스 도구 세트입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;swagger-특징&quot;&gt;Swagger 특징&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;API 디자인 
 Swagger-editor를 통해 api를 문서화하고 빠르게 명세할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API Development 
Swagger-codegen을 통해 작성된 문서를 통해 SDK를 생성하여 빌드 프로세스를 간소화 할 수 있도록 도와줍니다. 문서를 통해 실행하면 프로토 타입 코드를 생성해주는데 파일 구조가 정해져있는것 같습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API Documentation 
Swagger-UI를 통해 작성된 API를 시각화시켜 줍니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API Testing 
Swagger-Inspector를 통해 API를 시각화 하고 빠른 테스팅을 진행할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Standardize 
Swagger-hub를 통해 개인, 팀원들이 API정보를 공유하는 Hub입니다.
—&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;swagger-20-vs-openapi-30&quot;&gt;Swagger 2.0 VS OpenApi 3.0&lt;/h1&gt;

&lt;h4 id=&quot;사실은-openapi-20-2014년-20-발의-과-302017년-발의&quot;&gt;사실은 OpenApi &lt;a href=&quot;https://swagger.io/specification/v2/&quot;&gt;2.0 (2014년 2.0 발의)&lt;/a&gt; 과 &lt;a href=&quot;[https://swagger.io/specification/&quot;&gt;3.0(2017년 발의)&lt;/a&gt;&lt;/h4&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;open-api-reversion&quot;&gt;OPEN API Reversion&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/openapi_revsion.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;swagger-node&quot;&gt;&lt;a href=&quot;https://github.com/swagger-api/swagger-node&quot;&gt;Swagger-node&lt;/a&gt;&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Node.js에서 Swagger 호환 API를 디자인하고 빌드하기위한 도구를 제공합니다. Express, Hapi, Restify 및 Sails를 비롯하여 널리 사용되는 Node.js 서버와 모든 Connect 기반 미들웨어와 통합됩니다. swagger를 사용하면 랩톱에서 API를 처음부터 지정, 빌드 및 테스트 할 수 있습니다. 구현 논리를 다시 쓰지 않고도 디자인을 변경하고 반복 할 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;swagger-node-특징&quot;&gt;Swagger-node 특징&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Swagger 2.0 지원&lt;/li&gt;
  &lt;li&gt;오래되었음
    &lt;ul&gt;
      &lt;li&gt;5년 이상됨 (2015년 시작)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;업데이트가 빈번하지 않음
    &lt;ul&gt;
      &lt;li&gt;2018년이 마지막 업뎃&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;1년 이상 51Scrum에서 사용됨&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;oas-tools&quot;&gt;&lt;a href=&quot;https://github.com/isa-group/oas-tools#readme&quot;&gt;oas-tools&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Express 서버에서 OpenAPI 3.0 사양으로 정의 된 RESTfull API 관리를 지원합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;oas-tools-특징&quot;&gt;Oas-tools 특징&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;OpenApi 3.0 지원
    &lt;ul&gt;
      &lt;li&gt;최신 스펙을 제공&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;2018년 시작된 프로젝트&lt;/li&gt;
  &lt;li&gt;업데이트가 빈번함
    &lt;ul&gt;
      &lt;li&gt;2020년 7월 13일 기준 2020년 6월 18일이 마지막 업데이트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;현재 1개의 프로젝트에서 사용됨 (issue_finder, new Collector)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;사용해보기&quot;&gt;사용해보기&lt;/h1&gt;

&lt;h2 id=&quot;swagger-node-1&quot;&gt;&lt;a href=&quot;https://github.com/swagger-api/swagger-node&quot;&gt;Swagger-node&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&quot;oas-generator&quot;&gt;&lt;a href=&quot;https://github.com/isa-group/oas-generator&quot;&gt;oas-generator&lt;/a&gt;&lt;/h2&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;https://ko.wikipedia.org/wiki/%EC%8A%A4%EC%9B%A8%EA%B1%B0_(%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4)&lt;/li&gt;
  &lt;li&gt;https://real-dongsoo7.tistory.com/58&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://swagger.io/specification/v2/&quot;&gt;Openapi 2.0 (2014년 2.0 발의)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;[https://swagger.io/specification/&quot;&gt;Openapi 3.0(2017년 발의)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/swagger-api/swagger-node&quot;&gt;Swagger-node&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/isa-group/oas-tools#readme&quot;&gt;oas-tools&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/isa-group/oas-generator&quot;&gt;oas-generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="express" /><category term="oas" /><category term="swagger" /><summary type="html">OAS-tools 를 이용해서 프로젝트를 진행하여 보자!</summary></entry><entry><title type="html">우리는 수평적인 조직을 지향하고 있습니다.</title><link href="https://lahuman.github.io/20200708/" rel="alternate" type="text/html" title="우리는 수평적인 조직을 지향하고 있습니다." /><published>2020-07-08T00:00:00+09:00</published><updated>2020-07-08T00:00:00+09:00</updated><id>https://lahuman.github.io/20200708</id><content type="html" xml:base="https://lahuman.github.io/20200708/">&lt;h1 id=&quot;우리는-수평적인-조직을-지향하고-있습니다&quot;&gt;우리는 수평적인 조직을 지향하고 있습니다.&lt;/h1&gt;

&lt;p&gt;수평적인 문화의 특징으로 누구나 자유롭게 &lt;strong&gt;의견&lt;/strong&gt;을 낼 수 있습니다.&lt;/p&gt;

&lt;p&gt;또한 누구도 의견에 대하여 틀렸거나 잘못되었다고 &lt;strong&gt;비난&lt;/strong&gt;하지 않습니다.&lt;/p&gt;

&lt;p&gt;서로의 의견이 상충될 때는 눈높이를 맞추기 위해서 &lt;strong&gt;UT(User Test)&lt;/strong&gt;를 진행하거나 &lt;strong&gt;프로토타입(Prototype)&lt;/strong&gt;을 작성하여 &lt;strong&gt;검증&lt;/strong&gt;을 합니다.&lt;/p&gt;

&lt;p&gt;검증을 할 때는 서로가 경함 한 노하우는 공유하고 다른 동료의 의견을 받아들여서 새로운 시선으로 문제를 바라보도록 노력합니다.&lt;/p&gt;

&lt;p&gt;이때에 팀원의 나이와 경험이 많고 적고는 중요하지 않습니다.&lt;/p&gt;

&lt;p&gt;모두들 적극적으로 의견을 제시하고 서로의 의견을 빠르게 받아들이기 위해 노력합니다.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;물론 모든 일이 이렇게 매끄럽게 되지는 않습니다.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;중요한 건 팀원 간의 의견이 &lt;strong&gt;틀린 게 아니라 다름을 인정&lt;/strong&gt;하고 적재적소에 필요한 &lt;strong&gt;인력&lt;/strong&gt;과 &lt;strong&gt;기술&lt;/strong&gt; 사용에 대하여 공감하고 이해하도록 노력한다는 사실입니다.&lt;/p&gt;

&lt;p&gt;결국 수직적인 조직과 수평적인 조직의 큰 차이는 업무에 대한 &lt;strong&gt;공감&lt;/strong&gt;과 &lt;strong&gt;소통&lt;/strong&gt;이라고 생각합니다.&lt;/p&gt;</content><category term="단상" /><category term="조직" /><summary type="html">지향은 하고 있지만 수평적인 조직이라고는 하지 않았다...</summary></entry></feed>
