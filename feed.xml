<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2018-05-25T12:48:08+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">사랑한다는 말보다 일하라</title><link href="https://lahuman.github.io/20180525/" rel="alternate" type="text/html" title="사랑한다는 말보다 일하라" /><published>2018-05-25T00:00:00+09:00</published><updated>2018-05-25T00:00:00+09:00</updated><id>https://lahuman.github.io/20180525</id><content type="html" xml:base="https://lahuman.github.io/20180525/">&lt;h1 id=&quot;백마디-말보다-한가지-일해주는게-좋다&quot;&gt;백마디 말보다 한가지 일해주는게 좋다.&lt;/h1&gt;

&lt;p&gt;아내가 나에게 자주 하는 말이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;사랑해?? 사랑하면 나를 위해 일해줘! 말로만 하는 사랑 말고 내일을 도와 주고 함께 해줘!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;가사로 힘든 아내를 위해 지금 오징어 얼굴로 웃어 주기 보다, 설겆이와 청소를 하자!&lt;/p&gt;

&lt;h2 id=&quot;사랑받는-남편이-되자&quot;&gt;사랑받는 남편이 되자&lt;/h2&gt;</content><author><name></name></author><category term="단상" /><summary type="html">정수연 여사의 말씀</summary></entry><entry><title type="html">Python]paramiko 모듈에서 su 명령어로 계정 전환</title><link href="https://lahuman.github.io/python_paramiko_sudo/" rel="alternate" type="text/html" title="Python]paramiko 모듈에서 su 명령어로 계정 전환" /><published>2018-05-17T00:00:00+09:00</published><updated>2018-05-17T00:00:00+09:00</updated><id>https://lahuman.github.io/python_paramiko_sudo</id><content type="html" xml:base="https://lahuman.github.io/python_paramiko_sudo/">&lt;h1 id=&quot;pythonparamiko-모듈에서-su-명령어로-계정-전환&quot;&gt;Python]paramiko 모듈에서 su 명령어로 계정 전환&lt;/h1&gt;

&lt;p&gt;python에서 ssh에 연결 후 command를 실행하기 위해 사용하는 &lt;a href=&quot;http://www.paramiko.org/&quot;&gt;paramiko&lt;/a&gt; 모듈에서 간단하게 command를 실행하는 코드는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import paramiko

ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy()) # host keys 관련 설정
ssh_client.connect('127.0.0.1', username='lahuman', password='pass')

stdin, stdout, stderr = ssh_client.exec_command('ls')
stdin.flush()
time.sleep(1)
print stdout.read()

## 결과
lahuman
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ssh.com/ssh/host-key&quot;&gt;host kyes&lt;/a&gt; 관련 설정은 ssh로 다른 서버로 접근시, key 값을 저장할 지에 대한 처리 이다. paramiko.AutoAddPolicy() 로 설정시 자동으로 yes 처리 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;ssh_client.exec_command(cmd)&lt;/strong&gt;를 이용할 경우 매 명령어 마다 새로운 세션이 부여되어, 다른 계정으로 전환 후 작업을 진행 할 수 없다.&lt;/p&gt;

&lt;p&gt;하나의 세션에서 작업을 연속되게 진행하고 싶다면 &lt;strong&gt;channel = ssh_client.invoke_shell()&lt;/strong&gt;를 이용하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import paramiko

def main():
    ssh_client = None
    recv_size = 9999
    try:
		ssh_client = paramiko.SSHClient()
		ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy()) # host keys 관련 설정
		ssh_client.connect('127.0.0.1', username='lahuman', password='pass')

        channel = ssh_client.invoke_shell()
        channel.send('su -\n')
        outdata, errdata = waitStrems(channel)
        print outdata

        channel.send('pass\n')
        outdata, errdata = waitStrems(channel)
        print outdata

        channel.send('whoami\n')
        outdata, errdata = waitStrems(channel)
        print outdata

    finally:
        if ssh_client is not None:
            ssh_client.close()


def waitStrems(chan):
    time.sleep(1)
    outdata=errdata = &quot;&quot;

    while chan.recv_ready():
        outdata += chan.recv(1000)
    while chan.recv_stderr_ready():
        errdata += chan.recv_stderr(1000)

    return outdata, errdata

if __name__ == &quot;__main__&quot;:
    main()


## 결과
Last login: Thu May 17 01:34:37 2018 from 10.0.2.2
su -
[lahuman@localhost ~]$ su -
Password: 

Last login: Thu May 17 01:35:10 EDT 2018
[root@localhost ~]# 
whoami
root
[root@localhost ~]# 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;세션을 유지한 상태로 명령어를 실행하기 위해서는 channel을 가져오고 channel을 계속 유지 해야 한다.&lt;/p&gt;

&lt;p&gt;각 명령의 결과가 문제 없이 종료 되었는지는&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; while chan.recv_ready():
        outdata += chan.recv(1000)
    while chan.recv_stderr_ready():
        errdata += chan.recv_stderr(1000)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;를 통해서 확인 한다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.paramiko.org/&quot;&gt;paramiko&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ssh.com/ssh/host-key&quot;&gt;host kyes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="python" /><category term="paramiko" /><summary type="html">하나의 ssh 세션에서 작업 하기</summary></entry><entry><title type="html">신경 끄기의 기술</title><link href="https://lahuman.github.io/20180515-phase/" rel="alternate" type="text/html" title="신경 끄기의 기술" /><published>2018-05-15T00:00:00+09:00</published><updated>2018-05-15T00:00:00+09:00</updated><id>https://lahuman.github.io/20180515-phase</id><content type="html" xml:base="https://lahuman.github.io/20180515-phase/">&lt;h1 id=&quot;신경-끄기의-기술&quot;&gt;신경 끄기의 기술&lt;/h1&gt;

&lt;p&gt;신경 끄기의 기술, 마크 맨슨의 책을 읽고 있다.&lt;/p&gt;

&lt;p&gt;포기 해야 할 일(몸짱 되기와 같은)은 신경 쓰지 말고 정말 중요한 것만 신경 쓰라는 내용이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;읽으면서 내가 너무 힘들게 사는건 아닌가?&lt;/strong&gt; 라는 생각을 했다.&lt;/p&gt;

&lt;p&gt;난 특별하지 않다. 평범하다 그것을 받아 들이고, 내게 주어진 일 중 중요한 일에 더 집중하자.&lt;/p&gt;

&lt;h2 id=&quot;참조&quot;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/24/goods/54233937&quot;&gt;신경 끄기의 기술&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="단상" /><summary type="html">마크 맨슨의 책</summary></entry><entry><title type="html">Centos 7.5에서 Python Multiprocess 좀비프로세스 문제</title><link href="https://lahuman.github.io/Centos7.5_python_multiprocess/" rel="alternate" type="text/html" title="Centos 7.5에서 Python Multiprocess 좀비프로세스 문제" /><published>2018-05-10T00:00:00+09:00</published><updated>2018-05-10T00:00:00+09:00</updated><id>https://lahuman.github.io/Centos7.5_python_multiprocess</id><content type="html" xml:base="https://lahuman.github.io/Centos7.5_python_multiprocess/">&lt;h1 id=&quot;centos-75에서-python-multiprocess-좀비-프로세스-문제&quot;&gt;CentOS 7.5에서 Python MultiProcess 좀비 프로세스 문제&lt;/h1&gt;

&lt;h2 id=&quot;환경-정보&quot;&gt;환경 정보&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;OS : CentOS 7.5&lt;/li&gt;
  &lt;li&gt;Language : Python 2.7.5&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;현상&quot;&gt;현상&lt;/h2&gt;
&lt;p&gt;프로그램에서 불규칙적으로 Multiprocess가 종료 되지 않고 남아 있음.
kill -9 {PID} 로 Multiprocess를 종료 시키면, 종료 시점으로 새로운 프로세스가 생성되며 실행 시간은 00:00 으로 변경없이 유지됨.&lt;/p&gt;

&lt;h2 id=&quot;문제점&quot;&gt;문제점&lt;/h2&gt;
&lt;p&gt;Multiprocess는 Memory 자원을 반환 하지 않고 계속 점유 되는 문제 발생&lt;/p&gt;

&lt;h2 id=&quot;코드-샘플&quot;&gt;코드 샘플&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from multiprocessing import Pool

def processing(arge):
    while True:
        print arge
        time.sleep(10)

if __name__ == '__main__':
    while True:
        try:
            pool = Pool(processes=2)

            results = pool.map(processing, [1,2,3,4,5,6,7,8,9])
            pool.close()
            pool.join()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;임시-해결책&quot;&gt;임시 해결책&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;발등에 떨어진 불을 끄기 위한 임시 해결책 입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;특정 시간 이상 좀비 프로세스로 돌고 있을 경우 강제로 kill 하는 프로그램 작성&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#-*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getdefaultencoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setdefaultencoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getdefaultencoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;



&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;commands&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# python_path &amp;amp; name&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;python_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;python_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;realpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# sleep&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#time_sleep_set	= 'day'	# time.sleep(day)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#time_sleep_set	= 'min'	# time.sleep(min)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time_sleep_set&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sec'&lt;/span&gt;	&lt;span class=&quot;c&quot;&gt;# time.sleep(sec)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time_sleep_int&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;chk_kill_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#minutes&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;chk_proc_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Process Name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chk_proc&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chk_proc_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;pid_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getoutput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ps -eo pid,ppid,lstart,command | grep &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chk_proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; | grep -v grep&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;time_chk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chk_kill_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid_time_cmd&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;re_dst_str&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid_time_cmd&lt;/span&gt;

				&lt;span class=&quot;n&quot;&gt;re_pattern&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r'^\s*(\d+)\s+(\d+)\s+(?:\w+)\s+(\w+)\s+(\d{1,2})\s+(\d\d):(\d\d):(\d\d)\s+(\d{4})\s+(.*)'&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;re_compile&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re_dst_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;re_findlen&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findlen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;


					&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;ppid&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_m&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_d&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_h&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_i&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_s&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_y&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re_findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

					&lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_s&lt;/span&gt;
					&lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;H:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;M:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

					&lt;span class=&quot;c&quot;&gt;# if ( ppid == '1' ): continue&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_chk&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
						&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'kill -9 '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# while True:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;os-python-module-등의-환경적인-원인이-있을-수-있다고-생각은-하고-있다-추가적으로-python-version을-올리는-것에-대하여-고민-중이다&quot;&gt;OS, Python, Module 등의 환경적인 원인이 있을 수 있다고 생각은 하고 있다. 추가적으로 Python version을 올리는 것에 대하여 고민 중이다.&lt;/h2&gt;</content><author><name></name></author><category term="centos" /><category term="multiprocess" /><summary type="html">죽여도 살아난다.</summary></entry><entry><title type="html">월요일 그리고 Elasticsearch 머신 러닝</title><link href="https://lahuman.github.io/20180430-phase/" rel="alternate" type="text/html" title="월요일 그리고 Elasticsearch 머신 러닝" /><published>2018-04-30T00:00:00+09:00</published><updated>2018-04-30T00:00:00+09:00</updated><id>https://lahuman.github.io/20180430-phase</id><content type="html" xml:base="https://lahuman.github.io/20180430-phase/">&lt;h1 id=&quot;elasticsearch를-통한-머신-러닝에-대한-내용이-정리-된-링크비디오&quot;&gt;Elasticsearch를 통한 머신 러닝에 대한 내용이 정리 된 링크(비디오)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/kr/webinars/event-logs-in-elasticsearch-and-machine-learning&quot;&gt;Elasticsearch 머신 러닝을 이용한 Web Access 로그 분석&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/kr/videos/machine-learning-for-elasticsearch-with-softbank&quot;&gt;소프트뱅크 Machine Learning 활용 사례&lt;/a&gt; - 현재 나온 머신러닝 레퍼런스 중 가장 자세한 사례입니다. 회사 배경설명, 도입 배경설명, 목표, 활용 방안, 결과, 보완이 필요한 점까지 상세하게 설명이 되어 있는 고객 발표 사례이니 꼭 처음부터 끝까지 다 봐주셨으면 합니다. 일본 고객 사례를 한국어로 더빙하였습니다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/elasticon/conf/2018/sf/the-path-to-intelligent-operation-with-netapp-oncommand-insight&quot;&gt;Netapp 고객 사례&lt;/a&gt; - OnCommand Insight(하이브리드 IT 인프라를 위한 모니터링 제품) 솔루션이 Elastic을 도입하여 어플리케이션, 시스템, 네트워크 및 스토리지 등 다양한 데이터를 분석하고 Machine Learning을 이용해 이상징후 탐지까지 활용한 사례입니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="단상" /><summary type="html">Elasticsearch Machine Learning</summary></entry><entry><title type="html">VirtualBox Net network 사용하기</title><link href="https://lahuman.github.io/VirtualBox_NAT_network/" rel="alternate" type="text/html" title="VirtualBox Net network 사용하기" /><published>2018-04-27T00:00:00+09:00</published><updated>2018-04-27T00:00:00+09:00</updated><id>https://lahuman.github.io/VirtualBox_NAT_network</id><content type="html" xml:base="https://lahuman.github.io/VirtualBox_NAT_network/">&lt;h1 id=&quot;virtualbox-net-network-사용하기&quot;&gt;VirtualBox Net network 사용하기&lt;/h1&gt;

&lt;p&gt;가상 환경에서 &lt;strong&gt;설정 &amp;gt; 네트워크 &amp;gt; NET 네트워크&lt;/strong&gt; 를 선택하면 이름이 없다는 오류가 난다.
VirtualBox의 &lt;strong&gt;환경설정 &amp;gt; 네트워크 &amp;gt; 추가 &amp;gt; 이름 설정&lt;/strong&gt; 을 한후, 가상 환경에서 &lt;strong&gt;설정 &amp;gt; 네트워크 &amp;gt; NET 네트워크&lt;/strong&gt; 를 선택하면 이름을 선택할 수 있다.&lt;/p&gt;

&lt;p&gt;추가적으로 위와 같이 설정을 하면 호스트에서 가상으로 접근이 되지 않는다.&lt;/p&gt;

&lt;p&gt;가상 환경의 설정에서 2번째 네트워크를 추가 하고 &lt;strong&gt;호스트 전용 어댑터&lt;/strong&gt;를 선택한다.
ifconfig 명령어로 호스트의 가상 IP 대역을 확인하고, 다음 명령어를 이용하여 가상서버의 호스트 전용 네트워크를 설정한다.
호스트의 IP 값이 192.168.53.100 일 경우 다음과 같이 설정한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo vi /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo  
iface lo inet loopback

# The primary network interface
auto enp0s3  
iface enp0s3 inet dhcp

# The host-only network interface 신규로 추가
auto enp0s8  
iface enp0s8 inet static  
address 192.168.53.200  
netmask 255.255.255.0  
network 192.168.53.0  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 네트워크를 다음의 명령어로 재시작 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo systemctl restart networking
or  
$ sudo /etc/init.d/networking restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고 자료를 확인하면 자세한 그림과 설명이 되어 있다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://printf.kr/archives/285&quot;&gt;Virtualbox 네트워크 종류와 설정 방법&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.hkwon.me/virtualbox-hoseuteu-jeonyong-eodaebteo-seoljeong-2/&quot;&gt;VirtualBox 호스트 전용 어댑터 설정&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="virtualbox" /><summary type="html">가상환경끼리 통신 가능하게 만들기</summary></entry><entry><title type="html">내가 변해야 남도 변한다.</title><link href="https://lahuman.github.io/20180425-phase/" rel="alternate" type="text/html" title="내가 변해야 남도 변한다." /><published>2018-04-25T00:00:00+09:00</published><updated>2018-04-25T00:00:00+09:00</updated><id>https://lahuman.github.io/20180425-phase</id><content type="html" xml:base="https://lahuman.github.io/20180425-phase/">&lt;h1 id=&quot;다른-사람이-변하기를-원한다면-나부터-변하자&quot;&gt;다른 사람이 변하기를 원한다면, 나부터 변하자&lt;/h1&gt;

&lt;p&gt;요즘 가지는 고민은 &lt;strong&gt;어떻게 효율적으로 협업 할 것인가?&lt;/strong&gt; 이다.&lt;/p&gt;

&lt;p&gt;개인의 자존감, 성취도, 특성 등 여러 가지 요소로 팀원 각자가 원하는 바가 다르다.&lt;/p&gt;

&lt;p&gt;그러던 중 팀원이 좋은 방향으로 변하기를 원하는 나를 보게 되었다.&lt;/p&gt;

&lt;p&gt;이런 물음에 주변 지인이 나에게 답변을 주었다.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;당신이 변하지 않으면, 남도 변하지 않습니다. 당신이 변하면 남도 변합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;변화를 원하신 다면, 먼저 변하세요.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;많은 깨닳음이 있는 답변이었다.&lt;/p&gt;</content><author><name></name></author><category term="단상" /><summary type="html">다른 사람이 변하기를 원한다면, 나부터 변하자</summary></entry><entry><title type="html">개발 수준에 대한 단상</title><link href="https://lahuman.github.io/20180424-phase/" rel="alternate" type="text/html" title="개발 수준에 대한 단상" /><published>2018-04-24T00:00:00+09:00</published><updated>2018-04-24T00:00:00+09:00</updated><id>https://lahuman.github.io/20180424-phase</id><content type="html" xml:base="https://lahuman.github.io/20180424-phase/">&lt;h1 id=&quot;쿠팡에-다니시는-배성혁님이-코틀린-세션에서-하신-말씀&quot;&gt;쿠팡에 다니시는 배성혁님이 코틀린 세션에서 하신 말씀!&lt;/h1&gt;

&lt;p&gt;아쉽게도 올해 KSUG참석은 하지 못하였고, 다녀오신 분들이 SNS에 올리는 내용만 주어 담고 있다.&lt;/p&gt;

&lt;p&gt;오늘 본 짧은 내용은 개발 수준에 대한 내용이었다. 경영진과 개발팀 간의 간격이 좁혀지긴 사실 어려울 것으로 생각된다.&lt;/p&gt;

&lt;p&gt;하지만 &lt;strong&gt;팀이 무엇인지에 대한 고찰&lt;/strong&gt;과 &lt;strong&gt;나에 대한 고찰&lt;/strong&gt;을 하게 된 글귀다.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;남에게 시키는 것과 나도 함께 이끄는 것 그 한 끗 차가 큰 변화를 만들 것이다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;쿠팡-배성혁님-글귀&quot;&gt;쿠팡 배성혁님 글귀&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;개발 조직은 
최하위 개발자에게 
수준을 맞춰줘야 한다.

경영진은
최상위 인재에게
수준을 맞춘다.

‘그래서 잘 안된다’

팀이 무엇인지
잘 표현한 말인 듯

남에게 시키는 것과
나도 함께 이끄는 것
그 한 끗 차가 큰 변화를 만들 것이다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="단상" /><summary type="html">개발팀에서의 수준과 경영진에서의 수준은 다르다.</summary></entry><entry><title type="html">QRadar SDK Module 교체</title><link href="https://lahuman.github.io/qradar_app_sdk_module_change/" rel="alternate" type="text/html" title="QRadar SDK Module 교체" /><published>2018-04-17T00:00:00+09:00</published><updated>2018-04-17T00:00:00+09:00</updated><id>https://lahuman.github.io/qradar_app_sdk_module_change</id><content type="html" xml:base="https://lahuman.github.io/qradar_app_sdk_module_change/">&lt;h1 id=&quot;qradar-sdk를-ubuntu-16x에서-사용하기-위한-모듈-교체-작업&quot;&gt;QRadar SDK를 Ubuntu 16.x에서 사용하기 위한 모듈 교체 작업&lt;/h1&gt;

&lt;p&gt;먼저 &lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/en/SS42VS_7.3.0/com.ibm.appfw.doc/t_appframework_SDKinstall.html&quot;&gt;QRadar SDK&lt;/a&gt;를 받아야 한다.&lt;/p&gt;

&lt;p&gt;설치는 간단하게 압축을 해제 하고 install.sh 을 실행하면된다.&lt;/p&gt;

&lt;p&gt;설치 하고 나서 이후 의존성 문제로 &lt;strong&gt;qradar_app_creator&lt;/strong&gt; 명령어를 실행하면 오류가 발생한다.&lt;/p&gt;

&lt;p&gt;Python 버젼은 2.7.9 이상이라고 되어 있지만 기본적으로 2.7.15가 설치 되어 있다. 상위 버젼이면 호환성에 문제가 없을 것이라 생각했지만, 모듈 오류가 많이 발생하므로 2.7.9를 설치하자&lt;/p&gt;

&lt;p&gt;Python 설치에 필요한 모듈을 함께 설치 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install python-pip python-dev
sudo apt-get install build-essential
sudo apt-get install libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev

wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz
tar -xvf Python-2.7.9.tgz
cd Python-2.7.9/
 ./configure --enable-unicode=ucs4  # 추후 pycrypto 모듈 관련 오류 발생을 예방하기 위해 --enable-unicode=ucs4  처리를 한다.
make
sudo make install
sudo shutdown now -r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;qradar_app_creator&lt;/strong&gt; 명령어를 입력하면 몇개의 모듈이 해당 시스템을 지원하지 않는다는 메시지를 확인 할수 있다.&lt;/p&gt;

&lt;p&gt;관련해서 pip download 를 이용해 해당 모듈을 수동으로 교체 한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip download cffi==1.11.5
sudo cp cffi-1.11.5-cp27-cp27mu-manylinux1_x86_64.whl /usr/local/etc/QRadarAppSDK/src_packages/

pip download cryptography==1.8.1
sudo cp cryptography-1.8.1.tar.gz /usr/local/etc/QRadarAppSDK/src_packages/

pip download pycrypto==2.6.1
sudo cp pycrypto-2.6.1.tar.gz /usr/local/etc/QRadarAppSDK/src_packages/

# 더 있을 경우 pip download를 이용해서 받아 /usr/local/etc/QRadarAppSDK/src_packages/로 옮긴다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막으로 실행 스크립트에서 교체된 모듈의 이름을 변경한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vi /usr/local/bin/qradar_app_creator

# 모듈 명을 바뀐 파일로 변경하면 된다.
&quot;|cffi-1.11.5-cp27-cp27mu-manylinux1_x86_64.whl|cffi-1.11.5-cp27-cp27mu-manylinux1_x86_64.whl|cffi-1.11.5-cp27-cp27mu-manylinux1_x86_64.whl|cffi-1.11.5-cp27-cp27mu-manylinux1_x86_64.whl|workspace&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;모듈 교체는 어려운 작업은 아니지만, 하나한 확인해야 하므로 손이 많이 간다.&lt;/p&gt;

&lt;h2 id=&quot;참고-주소&quot;&gt;참고 주소&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/en/SS42VS_7.3.0/com.ibm.appfw.doc/t_appframework_SDKinstall.html&quot;&gt;QRadar Installing the SDK&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://communities.intel.com/thread/96384&quot;&gt;Python Install&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="QRadar" /><category term="ubuntu" /><summary type="html">Ubuntu 16.x 에서 QRradar SDK 사용하기</summary></entry><entry><title type="html">머피의 월요일의 시작</title><link href="https://lahuman.github.io/20180416-phase/" rel="alternate" type="text/html" title="머피의 월요일의 시작" /><published>2018-04-16T00:00:00+09:00</published><updated>2018-04-16T00:00:00+09:00</updated><id>https://lahuman.github.io/20180416-phase</id><content type="html" xml:base="https://lahuman.github.io/20180416-phase/">&lt;h1 id=&quot;아침-버스를-무려-30분이나-기다렸다-탔다&quot;&gt;아침 버스를 무려 30분이나 기다렸다 탔다.&lt;/h1&gt;

&lt;p&gt;사고로 인하여 늦게 도착한 버스를 차고 출근하니 당연하게 지각이다.&lt;/p&gt;

&lt;p&gt;아침에 팀장이 해달라고 요청한 개똥같은 일이 들어오고.. 월요일 시작이 안좋다.&lt;/p&gt;</content><author><name></name></author><category term="단상" /><summary type="html">출근 버스는 사로고 늦고, 아침부터 일은 개똥같이 들어온다.</summary></entry></feed>