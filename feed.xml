<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://lahuman.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.8.4">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2018-09-29T04:25:03+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">Excel]문장으로 길찾기</title><link href="https://lahuman.github.io/excel_word_map/" rel="alternate" type="text/html" title="Excel]문장으로 길찾기" /><published>2018-09-29T00:00:00+09:00</published><updated>2018-09-29T00:00:00+09:00</updated><id>https://lahuman.github.io/excel_word_map</id><content type="html" xml:base="https://lahuman.github.io/excel_word_map/">&lt;h1 id=&quot;excel을-이용한-문장-길찾기-게임-만들기&quot;&gt;Excel을 이용한 문장 길찾기 게임 만들기&lt;/h1&gt;

&lt;p&gt;아내가 일일이 손으로 문장 길찾기 게임을 만들고 있는 것을 보았다.&lt;/p&gt;

&lt;p&gt;간단하게 프로그램으로 만들어 주기로 했는데 곰곰히 생각해보니 Excel 이면 충분할 것같아서 만들어 보았다.&lt;/p&gt;

&lt;figure&gt;
    
    &lt;a href=&quot;https://lahuman.github.io/assets/img/post_img/word_map.png&quot;&gt;&lt;img src=&quot;https://lahuman.github.io/assets/img/post_img/word_map.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
    
    &lt;figcaption&gt;문장 길찾기&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;VBA를 이용하여 다음과 같은 모듈을 만들었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;10진수 한글의 유니코드 범위를 입력 받아 한글 문자열로 반환 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;VBA 코드는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Function getKoreaWord(src As Long) As String
Dim uCode As String
uCode = Hex(src)
getKoreaWord = ChrW(&quot;&amp;amp;H&quot; &amp;amp; uCode)
End Function
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;한글의 유니코드 범위는 44032~57263 임으로 다음과 같이 사용한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;=getKoreaWord(RANDBETWEEN(44032,57263))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실제 실행 파일은 다음에서 다운 받을 수 있다. 다만 VBA가 포함되어 있어서 xlsm 형식의 파일이다.&lt;/p&gt;

&lt;div&gt;&lt;a href=&quot;https://lahuman.github.io/assets/project/etc/word_map.xlsm&quot; class=&quot;btn btn-info&quot;&gt;word map excel DOWN&lt;/a&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.naver.com/PostView.nhn?blogId=dowahn&amp;amp;logNo=220985326303&quot;&gt;[엑셀VBA]유니코드를 일반 문자열로 변환시켜주는 VBA 사용자 함수&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="excel" /><category term="word" /><category term="map" /><summary type="html">이게 원하는게 맞는지는 모르겠다.</summary></entry><entry><title type="html">Python3.7 설치와 몇가지 새로운 사실 &amp;amp; pip install 시 SSL 오류 처리</title><link href="https://lahuman.github.io/python_3.7_pip_ssl_error/" rel="alternate" type="text/html" title="Python3.7 설치와 몇가지 새로운 사실 &amp; pip install 시 SSL 오류 처리" /><published>2018-09-28T00:00:00+09:00</published><updated>2018-09-28T00:00:00+09:00</updated><id>https://lahuman.github.io/python_3.7_pip_ssl_error</id><content type="html" xml:base="https://lahuman.github.io/python_3.7_pip_ssl_error/">&lt;h1 id=&quot;python37-설치와-새로-알게된-몇가지-사실&quot;&gt;Python3.7 설치와 새로 알게된 몇가지 사실&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Python3.7을 설치 하고 가상환경을 설정하는 것을 테스트 해보았다. 
Python2.X 에서는 virtualenv 라는 모듈을 설치하여야 가상환경을 설정 할 수 있었지만, 3.7에서는 기본으로 제공되었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;python37-소스-설치-하기&quot;&gt;Python3.7 소스 설치 하기&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tecadmin.net/install-python-3-7-on-centos/&quot;&gt;How to Install Python 3.7.0 on CentOS/RHEL 7/6 &amp;amp; Fedora 28-23&lt;/a&gt;
를 확인하고 해당 내역을 따라서 진행 하면 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 필수 모듈 설치
$&amp;gt; yum install gcc openssl-devel bzip2-devel

# Python 3.7 download &amp;amp; 설치
$&amp;gt; cd /usr/src
$&amp;gt; wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz
$&amp;gt; tar xzf Python-3.7.0.tgz
$&amp;gt; cd Python-3.7.0
$&amp;gt; ./configure --enable-optimizations
$&amp;gt; make altinstall
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 설치를 진행하면 다음 모듈이 설치 되지 않았다는 오류 메시지를 &lt;strong&gt;make altinstall&lt;/strong&gt; 를 실행시 만난다.
아래와 같이 두개의 모듈을 추가로 설치 하자.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 누락된 모듈 설치
$&amp;gt; yum install zlib-devel
$&amp;gt; yum install libffi-devel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 완료 메시지를 보면 &lt;strong&gt;pip&lt;/strong&gt;와 몇가지 모듈이 함께 설치 완료 되었다는 것을 확인할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;python37-사용시-처리-사항&quot;&gt;Python3.7 사용시 처리 사항&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;virtualenv 는 python3.7에 기본적으로 설치된다. 다음과 같은 명령어를 이용하면 가상 환경을 생성 할 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# python 3.7에서 가상환경 만들기
# python3.7 -m venv &amp;lt;directory&amp;gt;
$&amp;gt; python3.7 -m venv venv

# 생성된 가상환경 적용하기
$&amp;gt; source venv/bin/activate
(venvv) $&amp;gt;

# 가상환경 나오기
(venvv) $&amp;gt; deactivate
$&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;openssl 을 설치 하지 않은 상태에서 python을 설치할 경우 pip를 이용시 SSL 오류 발생한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 처리 방법은 openssl, openssl-devel 을 설치후 python3.7 재설치
$&amp;gt; yum install openssl opennssl-devel
$&amp;gt; python install cmmand
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참조-자료&quot;&gt;참조 자료&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://tecadmin.net/install-python-3-7-on-centos/&quot;&gt;How to Install Python 3.7.0 on CentOS/RHEL 7/6 &amp;amp; Fedora 28-23&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="python" /><category term="pip" /><category term="ssl" /><summary type="html">Python3.7은 가상환경 관련 모듈이 기본으로 제공되는구나!!</summary></entry><entry><title type="html">오늘의 주제는 방송이다.</title><link href="https://lahuman.github.io/20180928-phase/" rel="alternate" type="text/html" title="오늘의 주제는 방송이다." /><published>2018-09-28T00:00:00+09:00</published><updated>2018-09-28T00:00:00+09:00</updated><id>https://lahuman.github.io/20180928-phase</id><content type="html" xml:base="https://lahuman.github.io/20180928-phase/">&lt;h1 id=&quot;방송도-아무나-하는게-아니기는-하나보다&quot;&gt;방송도 아무나 하는게 아니기는 하나보다.&lt;/h1&gt;

&lt;p&gt;OBS라는 프로그램을 PC에 설치해서 방송을 테스트 해보았다.
방송의 내용은 CENTOS7에서 타임존 설정과 시간 동기화 Python 3.7 설치를 다루었다.&lt;/p&gt;

&lt;p&gt;첫 방송 테스트는 소음으로 망했다. 내 노트북 펜소리 때문에 내 목소리는 들리지도 않았다.&lt;/p&gt;

&lt;p&gt;그래서 이어폰을 이용하여 두번째 방송을 해보았지만 역시 소음이 심하게 들렸다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://obsproject.com/ko&quot;&gt;OBS&lt;/a&gt;이 오디오 필터에 소음 제거를 통해 해당 문제를 완벽하게는 아니라도, 들을만하게 처리 하였다.&lt;/p&gt;

&lt;p&gt;Python3.7을 설치하고 써보면서 알게된 몇가지 사실이 있다.
&lt;strong&gt;이건 다른 포스틍서 상세하게 적겠다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;그리고 오늘은 안드로이드 기기에서 방송을 할 방법을 찾고 있었다.
그래서 찾은 앱이 &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.duapps.recorder&amp;amp;hl=ko&quot;&gt;DU Recorder-Android app&lt;/a&gt; 이다.&lt;/p&gt;

&lt;p&gt;이 앱을 이용하면 안드로이드 화면을 방송/녹화할 수 있다. 성능도 상당히 좋고 편하다.&lt;/p&gt;

&lt;p&gt;어느정도 예행연습이 끝나면 하루 10분 방송을 해볼까 한다.&lt;/p&gt;

&lt;h2 id=&quot;참고-url&quot;&gt;참고 URL&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://obsproject.com/ko&quot;&gt;OBS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.duapps.recorder&amp;amp;hl=ko&quot;&gt;DU Recorder-Android app&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="단상" /><summary type="html">개인 방송이 인기라 나도 한번 해보자 하고 비공개로 몇개 찍어 보았다.</summary></entry><entry><title type="html">추석이 지나갔다.</title><link href="https://lahuman.github.io/20180927-phase/" rel="alternate" type="text/html" title="추석이 지나갔다." /><published>2018-09-27T00:00:00+09:00</published><updated>2018-09-27T00:00:00+09:00</updated><id>https://lahuman.github.io/20180927-phase</id><content type="html" xml:base="https://lahuman.github.io/20180927-phase/">&lt;h1 id=&quot;긴-연휴동안-쉬는게-쉬는게-아니었다&quot;&gt;긴 연휴동안 쉬는게 쉬는게 아니었다.&lt;/h1&gt;

&lt;p&gt;긴 연휴동안 푹 쉬기를 바랬는데, 원하는데로 되지 않았다.&lt;/p&gt;

&lt;p&gt;생각처럼 모든일이 풀리진 않겠지만 아내와 나는 많은 에너지를 쏟고 번아웃이 되었다.&lt;/p&gt;

&lt;p&gt;오늘은 휴가를 낸 첫번째 날로 그냥 집에서 푹 쉬었다.&lt;/p&gt;

&lt;p&gt;아이들은 어린이 집과 유치원에 보내고 나와 아내는 도서관에서 개인적인 일을 보았다.&lt;/p&gt;

&lt;p&gt;나는 CentOS7을 가상머신에 설치 하였다.&lt;/p&gt;

&lt;p&gt;중간에 페퍼민트 라는 OS와 칼리 리눅스를 진행하였지만 둘다 가상머신에서 설치중 오류로 실패 했다.
찾으려면 원인을 찾겠지만 귀찮아서 늘 사용하던 CentOS로 설치 했다.&lt;/p&gt;

&lt;h2 id=&quot;이번주는-내내-힘들겠다&quot;&gt;이번주는 내내 힘들겠다.&lt;/h2&gt;</content><category term="단상" /><summary type="html">긴 연휴가 지나고 나와 아내는 번아웃이 되었다.</summary></entry><entry><title type="html">출근 하면서 생각난 아이디어</title><link href="https://lahuman.github.io/20180920-phase2/" rel="alternate" type="text/html" title="출근 하면서 생각난 아이디어" /><published>2018-09-20T00:00:00+09:00</published><updated>2018-09-20T00:00:00+09:00</updated><id>https://lahuman.github.io/20180920-phase2</id><content type="html" xml:base="https://lahuman.github.io/20180920-phase2/">&lt;h1 id=&quot;로그-데이터-정규화를-머신러닝을-통해-할-수-없을까&quot;&gt;로그 데이터 정규화를 머신러닝을 통해 할 수 없을까??&lt;/h1&gt;

&lt;p&gt;보안 장비 로그는 장비 제작사에서 지정한 형식을 가지고 있다. 따라서 원격관제와 같이 여러 고객사의 보안을 관리하기 위해서는 각 고객사의 장비와 장비의 로그를 정규화라는 작업을 통해 하나의 동일한 형태로 변경해야 한다. 
(추가로 장비의 펌웨어 버전에 따라 로그 형태가 다를 수 있다)&lt;/p&gt;

&lt;p&gt;로그 형태는 기본적인 값인 아이피와 포트 정보를 포함하고 있으며 추가적으로 payload나 url, domain, time 등의 광범위한 내역을 담고 있다.&lt;/p&gt;

&lt;p&gt;정규화는 이 중 꼭 필요한 값을 동일한 형태로 만들기 위해 일반적으로 정규식을 이용한다.&lt;/p&gt;

&lt;p&gt;이때 크게 2가지 문제가 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;정규식을 작성 시 로그 형태 분석 실수로 처리가 제외되는 로그가 발생한다. (인적 실수)&lt;/li&gt;
  &lt;li&gt;장비의 펌웨어 업데이트 또는 교체로 로그 형태 변화로 인한 로그 유실이 발생한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이에 대한 해결을 지금까지는 사람이 모니터링하여 처리하였다.&lt;/p&gt;

&lt;p&gt;유입되는 로그의 정규화 부분을 머신러닝으로 처리할 수 있다면 상당한 비용의 절감을 이룰 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;뻘글&quot;&gt;뻘글&lt;/h2&gt;
&lt;h2 id=&quot;정규식-짜다가&quot;&gt;정규식 짜다가&lt;/h2&gt;</content><category term="단상" /><summary type="html">일이 많아 몸이 피곤하니, 꼼수만 생각나는건가?</summary></entry><entry><title type="html">아직 회사다.</title><link href="https://lahuman.github.io/20180920-phase/" rel="alternate" type="text/html" title="아직 회사다." /><published>2018-09-20T00:00:00+09:00</published><updated>2018-09-20T00:00:00+09:00</updated><id>https://lahuman.github.io/20180920-phase</id><content type="html" xml:base="https://lahuman.github.io/20180920-phase/">&lt;h1 id=&quot;정말-올만에-빡시게-일하는-중&quot;&gt;정말 올만에 빡시게 일하는 중….&lt;/h1&gt;

&lt;p&gt;내일까지 고객사 납품으로 죽을 똥을 싼다.&lt;/p&gt;

&lt;p&gt;이제 끝이 보인다.&lt;/p&gt;

&lt;p&gt;졸리다 졸려…&lt;/p&gt;</content><category term="단상" /><summary type="html">12시가 넘었다. 하지만 아직 회사다</summary></entry><entry><title type="html">추석 전까지 빡시게 일하자!!!</title><link href="https://lahuman.github.io/20180914-phase/" rel="alternate" type="text/html" title="추석 전까지 빡시게 일하자!!!" /><published>2018-09-14T00:00:00+09:00</published><updated>2018-09-14T00:00:00+09:00</updated><id>https://lahuman.github.io/20180914-phase</id><content type="html" xml:base="https://lahuman.github.io/20180914-phase/">&lt;h1 id=&quot;오늘까지-빡시게-하고-다음주는-천천히-하자&quot;&gt;오늘까지 빡시게 하고 다음주는 천천히 하자.&lt;/h1&gt;

&lt;p&gt;이번주는 내내 야근이다.&lt;/p&gt;

&lt;p&gt;차주도 야근을 많이 할 기세..&lt;/p&gt;

&lt;p&gt;이왕 하는거 즐겁게 일하자!!&lt;/p&gt;

&lt;h2 id=&quot;빠샤&quot;&gt;빠샤&lt;/h2&gt;</content><category term="단상" /><summary type="html">야근중</summary></entry><entry><title type="html">함부로 남에게 제품을 추천 하지 말자</title><link href="https://lahuman.github.io/20180913-phase/" rel="alternate" type="text/html" title="함부로 남에게 제품을 추천 하지 말자" /><published>2018-09-13T00:00:00+09:00</published><updated>2018-09-13T00:00:00+09:00</updated><id>https://lahuman.github.io/20180913-phase</id><content type="html" xml:base="https://lahuman.github.io/20180913-phase/">&lt;h1 id=&quot;아는-지인에게-제품을-추천받아-공유했지만&quot;&gt;아는 지인에게 제품을 추천받아 공유했지만…&lt;/h1&gt;

&lt;p&gt;아는 지인에게 특가라는 제품을 소개받았다.&lt;/p&gt;

&lt;p&gt;검색해보니 평균 가격이 20만 원대라서 다른 분들에게 공유했는데..&lt;/p&gt;

&lt;p&gt;욕을 엄청 먹었다.&lt;/p&gt;

&lt;p&gt;사실 그 제품을 잘 모르고 공유한 건 실수한 거 같다.&lt;/p&gt;

&lt;p&gt;제품에 대하여 사용해본 것도 아니었고, 특가라고 하는 건강식품 특징상 온라인의 가격 뻥튀기는 있다는 것을 눈치채고 있어야 했다.&lt;/p&gt;

&lt;h2 id=&quot;조금-우울해짐&quot;&gt;조금 우울해짐&lt;/h2&gt;</content><category term="단상" /><summary type="html">정말 써보고 너무 좋아서 공유 하고 싶어도 참아라.</summary></entry><entry><title type="html">진상을 대하는 방법에 대하여</title><link href="https://lahuman.github.io/20180912-phase/" rel="alternate" type="text/html" title="진상을 대하는 방법에 대하여" /><published>2018-09-12T00:00:00+09:00</published><updated>2018-09-12T00:00:00+09:00</updated><id>https://lahuman.github.io/20180912-phase</id><content type="html" xml:base="https://lahuman.github.io/20180912-phase/">&lt;h1 id=&quot;개인적으로-사람이-가장-중요하다고-생각한다&quot;&gt;개인적으로 사람이 가장 중요하다고 생각한다.&lt;/h1&gt;

&lt;p&gt;계획을 짜고, 일을 하고, 결과를 공유하는 모든 일을 함께 해나가는 동료가 중요하다고 생각한다.&lt;/p&gt;

&lt;p&gt;얼마 전에 어느 분이 물었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;진상인 사람을 만나면 어떻게 할 것이냐고?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;예전이라면 누가 이길지 싸워 보자고 덤빌 수도 있겠지만, 지금은 그냥 일로만 대한다.&lt;/p&gt;

&lt;p&gt;최대한 감정 없이 대하고 이야기하는 부분은 문서화해서 확인받고 처리한다.&lt;/p&gt;

&lt;h2 id=&quot;조금-피곤하지만-확실한-해결책이라-생각한다&quot;&gt;조금 피곤하지만 확실한 해결책이라 생각한다.&lt;/h2&gt;</content><category term="단상" /><summary type="html">얼마전에 받은 질문 중 하나</summary></entry><entry><title type="html">SpringBoot에서 websocket 사용하기</title><link href="https://lahuman.github.io/spring_websocket/" rel="alternate" type="text/html" title="SpringBoot에서 websocket 사용하기" /><published>2018-09-07T00:00:00+09:00</published><updated>2018-09-07T00:00:00+09:00</updated><id>https://lahuman.github.io/spring_websocket</id><content type="html" xml:base="https://lahuman.github.io/spring_websocket/">&lt;h1 id=&quot;springboot에서-websocket-사용하기&quot;&gt;SpringBoot에서 Websocket 사용하기&lt;/h1&gt;

&lt;h2 id=&quot;websocket-이란&quot;&gt;Websocket 이란?&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;서버와 클라이언트 사이에 양방향 통신 채널을 구축할 수 있는 통신 프로토콜이다.
동작 방식은 먼저 HTTP 통신을 연결하고 이후 Upgrade 헤더를 보내 양방향 연결로 업그레이드한다.
Websocket은 최신 브라우저에서는 대부분 지원한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;전체 소스는 참고 내역에 있는 &lt;a href=&quot;https://github.com/callicoder/spring-boot-websocket-chat-demo&quot;&gt;소스&lt;/a&gt;를 확인하면 된다.&lt;/p&gt;

&lt;p&gt;주요 설정은 다음과 같다.&lt;/p&gt;

&lt;h2 id=&quot;1-websocket-configuration&quot;&gt;1. WebSocket Configuration&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;websocketdemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messaging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;simp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MessageBrokerRegistry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.*;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Configuration&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EnableWebSocketMessageBroker&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebSocketConfig&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebSocketMessageBrokerConfigurer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Override&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registerStompEndpoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StompEndpointRegistry&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addEndpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/ws&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;withSockJS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Override&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configureMessageBroker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MessageBrokerRegistry&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setApplicationDestinationPrefixes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/app&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enableSimpleBroker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/topic&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;kbd&gt;@EnableWebSocketMessageBroker&lt;/kbd&gt; 은 websocket 서버를 사용한다는 설정이다.
또한 &lt;kbd&gt;WebSocketMessageBrokerConfigure&lt;/kbd&gt;를 상속 받아 몇몇 메소드를 구현하여 websocket 연결 속성을 설정한다.
&lt;kbd&gt;registerStompEndpoints&lt;/kbd&gt;를 이용하여 클라이언트에서 websocket에 접속하는 endpoint를 등록한다.
&lt;kbd&gt;withSockJS()&lt;/kbd&gt;를 이용시에는 브라우져에서 websocket을 지원하지 않을 경우 fallback 옵션을 활성화 하는데 사용됩니다.&lt;/p&gt;

&lt;p&gt;메소드 이름에 STOMP(Simple Text Oriented Messaging Protocol)라는 단어가 있다. 이는 스프링프레임워크의 STOMP 구현체를 사용한다는 의미다.
STOMP가 필요 한 이유는 websocket은 통신 프로토콜이지 특정 주제에 가입한 사용자에게 메시지를 전송하는 기능을 제공하지 않는다.
이를 쉽게 사용하기 위해 STOMP를 사용한다.&lt;/p&gt;

&lt;p&gt;두변째 메소드&lt;kbd&gt;configureMessageBroker&lt;/kbd&gt;는 한 클라이언트에서 다른 클라이언트로 메시지를 라우팅 할 때 사용하는 브로커를 구성한다.
첫번째 라인에서 정의된 &lt;kbd&gt;/app&lt;/kbd&gt;로 시작하는 메시지만 메시지 헨들러로 라우팅한다고 정의한다.
두번째 라인에서 정의된 &lt;kbd&gt;/topic&lt;/kbd&gt;로 시작하는 주제를 가진 메시지를 핸들러로 라우팅하여 해당 주제에 가입한 모든 클라이언트에게 메시지를 방송한다.&lt;/p&gt;

&lt;h2 id=&quot;2-chatcontroller&quot;&gt;2. ChatController&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;websocketdemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;websocketdemo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ChatMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messaging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MessageMapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messaging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messaging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;messaging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;simp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SimpMessageHeaderAccessor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;springframework&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stereotype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Controller&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ChatController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MessageMapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/chat.sendMessage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/topic/public&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ChatMessage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ChatMessage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chatMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chatMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MessageMapping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/chat.addUser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/topic/public&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ChatMessage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addUser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Payload&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ChatMessage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chatMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                               &lt;span class=&quot;n&quot;&gt;SimpMessageHeaderAccessor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headerAccessor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;headerAccessor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getSessionAttributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chatMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getSender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chatMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;kbd&gt;@MessageMapping&lt;/kbd&gt;는 클라이언트에서 보내는 메시지를 매핑한다. 호출 되는 주소는 &lt;kbd&gt;/app/chart.addUer&lt;/kbd&gt;, &lt;kbd&gt;/app/chat.sendMessage&lt;/kbd&gt;가 된다.&lt;/p&gt;

&lt;h2 id=&quot;3-mainjs&quot;&gt;3. main.js&lt;/h2&gt;

&lt;p&gt;javascript 에서 실제 사용은 다음 같이 사용한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function connect(event) {
    username = document.querySelector('#name').value.trim();

    if(username) {
        usernamePage.classList.add('hidden');
        chatPage.classList.remove('hidden');

        var socket = new SockJS('/ws');
        stompClient = Stomp.over(socket);

        stompClient.connect({}, onConnected, onError);
    }
    event.preventDefault();
}


function onConnected() {
    // Subscribe to the Public Topic
    stompClient.subscribe('/topic/public', onMessageReceived);

    // Tell your username to the server
    stompClient.send(&quot;/app/chat.addUser&quot;,
        {},
        JSON.stringify({sender: username, type: 'JOIN'})
    )
    connectingElement.classList.add('hidden');
}

.... 중략
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;kbd&gt;connect&lt;/kbd&gt;를 통해 클라이언트는 websocket을 연결 합니다.
연결에 성공하면 &lt;kbd&gt;/topic/public&lt;/kbd&gt; 주제에 가입하여 메시지를 주고 받습니다.&lt;/p&gt;

&lt;h2 id=&quot;참고-내역&quot;&gt;참고 내역&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/callicoder/spring-boot-websocket-chat-demo&quot;&gt;callicoder/spring-boot-websocket-chat-demo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.callicoder.com/spring-boot-websocket-chat-example/&quot;&gt;Building a chat application with Spring Boot and WebSocket&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://d2.naver.com/helloworld/1336&quot;&gt;WebSocket과 Socket.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="websocket" /><summary type="html">어떤 일로 websocket을 확인해야 하는데, 실제로 사용해보기는 처음이다.</summary></entry></feed>
