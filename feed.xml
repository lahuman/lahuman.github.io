<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2017-12-04T10:44:11+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">Python을 이용하여 원격 서버에 로그 전송</title><link href="https://lahuman.github.io/syslog_write_python/" rel="alternate" type="text/html" title="Python을 이용하여 원격 서버에 로그 전송  " /><published>2017-12-02T00:00:00+09:00</published><updated>2017-12-02T00:00:00+09:00</updated><id>https://lahuman.github.io/syslog_write_python</id><content type="html" xml:base="https://lahuman.github.io/syslog_write_python/">&lt;h1 id=&quot;원격지-로그-전송&quot;&gt;원격지 로그 전송&lt;/h1&gt;

&lt;p&gt;Python으로 특정 원격지 서버에 로그 전송이 가능하다.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;먼저 rsyslog에서 해당 통신이 가능하도록 설정을 변경 해야 한다.
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim /etc/rsyslog.conf

# UDP 514 포트로 통신 가능하도록 다음 2 LINE 주석 제거
$ModLoad imudp
$UDPServerRun 514

# 로그타입과 저장 위치 설정
local3.*        /var/log/my-logfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 rsyslog에 대한 서비스를 재기동 한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service rsyslog restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막으로 Python 소스는 다음과 같다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# -*- coding: utf-8 -*-
import logging
import logging.handlers

logger = logging.getLogger('myLogger')
logger.setLevel(logging.INFO)

#add handler to the logger
handler = logging.handlers.SysLogHandler(address = ('SERVER_IP',514), facility=logging.handlers.SysLogHandler.LOG_LOCAL3)

#add formatter to the handler
formatter = logging.Formatter('Python: { &quot;loggerName&quot;:&quot;%(name)s&quot;, &quot;asciTime&quot;:&quot;%(asctime)s&quot;, &quot;pathName&quot;:&quot;%(pathname)s&quot;, &quot;logRecordCreationTime&quot;:&quot;%(created)f&quot;, &quot;functionName&quot;:&quot;%(funcName)s&quot;, &quot;levelNo&quot;:&quot;%(levelno)s&quot;, &quot;lineNo&quot;:&quot;%(lineno)d&quot;, &quot;time&quot;:&quot;%(msecs)d&quot;, &quot;levelName&quot;:&quot;%(levelname)s&quot;, &quot;message&quot;:&quot;%(message)s&quot;}')

handler.formatter = formatter
logger.addHandler(handler)

logger.info(&quot;Test Message&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해당 소스를 실행하면 /var/log/my-logfile 파일에 로그가 쌓이는 것을 확인 할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3968669/how-to-configure-logging-to-syslog-in-python&quot;&gt;How to configure logging to syslog in Python?&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="python" /><category term="log" /><summary type="html">원격 서버로 로그 전송</summary></entry><entry><title type="html">Elasticdump 를 이용한 데이터 백업과 리스토어</title><link href="https://lahuman.github.io/elastic_dump/" rel="alternate" type="text/html" title="Elasticdump 를 이용한 데이터 백업과 리스토어 " /><published>2017-12-01T00:00:00+09:00</published><updated>2017-12-01T00:00:00+09:00</updated><id>https://lahuman.github.io/elastic_dump</id><content type="html" xml:base="https://lahuman.github.io/elastic_dump/">&lt;h1 id=&quot;elasticdump를-이용한-데이터-백업과-리스토어&quot;&gt;Elasticdump를 이용한 데이터 백업과 리스토어&lt;/h1&gt;

&lt;p&gt;elasticsearch의 데이터를 다른 곳으로 이관 하는 작업을 해야 한다.
&lt;br /&gt;
이때 사용 가능한 프로그램이 &lt;a href=&quot;https://github.com/taskrabbit/elasticsearch-dump&quot;&gt;elasticdump&lt;/a&gt; 이다.
&lt;br /&gt;
elasticdump는 현재 3.3.1 버젼으로 Elasticsearch 5.x 버젼을 지원하고 있다.
&lt;br /&gt;
지금 사용하는 elasticsearch 버젼이 2.x여서 해당 버젼을 지원하는 elsticdump 2.4.2를 설치 해야 한다.&lt;/p&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;

&lt;p&gt;설치는 가이드에 나온 것과 같이 npm 을 설치 하고 elasticdump 모듈을 설치 해야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# npm은 설치 되어 있다고 가정 한다.
npm install elasticdump

# git 에서 코드 download
git clone https://github.com/taskrabbit/elasticsearch-dump.git
cd elasticsearch-dump
# v2.4.2 으로 변경
git checkout tags/v2.4.2
# 버전 확인
./bin/elasticdump --version
2.4.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;데이터-백업&quot;&gt;데이터 백업&lt;/h2&gt;

&lt;p&gt;백업되는 데이터 타입은 크게 3가지로 나누어 진다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;analyzer&lt;/li&gt;
  &lt;li&gt;mapping&lt;/li&gt;
  &lt;li&gt;data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기본적으로 데이터를 넣기 위해서는 최소한의 데이터 맵핑이 있어야 한다.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;elasticdump 는 Elasticsearch to Ealsticsearch 를 지원하며, File 로 저장 리스토어도 가능하다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Copy an index from production to staging with analyzer and mapping:
elasticdump \
  --input=http://production.es.com:9200/my_index \
  --output=http://staging.es.com:9200/my_index \
  --type=analyzer
elasticdump \
  --input=http://production.es.com:9200/my_index \
  --output=http://staging.es.com:9200/my_index \
  --type=mapping
elasticdump \
  --input=http://production.es.com:9200/my_index \
  --output=http://staging.es.com:9200/my_index \
  --type=data

# Backup index data to a file:
elasticdump \
  --input=http://production.es.com:9200/my_index \
  --output=/data/my_index_mapping.json \
  --type=mapping
elasticdump \
  --input=http://production.es.com:9200/my_index \
  --output=/data/my_index.json \
  --type=data

# Backup and index to a gzip using stdout:
elasticdump \
  --input=http://production.es.com:9200/my_index \
  --output=$ \
  | gzip &amp;gt; /data/my_index.json.gz

# Backup the results of a query to a file
elasticdump \
  --input=http://production.es.com:9200/my_index \
  --output=query.json \
  --searchBody '{&quot;query&quot;:{&quot;term&quot;:{&quot;username&quot;: &quot;admin&quot;}}}'

# Copy a single shard data:
elasticdump \
  --input=http://es.com:9200/api \
  --output=http://es.com:9200/api2 \
  --params='{&quot;preference&quot; : &quot;_shards:0&quot;}'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;searchBody를 이용하면 원하는 목록 가져올 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/taskrabbit/elasticsearch-dump&quot;&gt;elasticdump&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="elasticsearch" /><category term="elasticdump" /><summary type="html">Elasticsearch 백업 &amp; 리스토어</summary></entry><entry><title type="html">내부 서비스만 가능한 PORT를 원격지 호출 가능하도록 변경</title><link href="https://lahuman.github.io/delegate_port_forward/" rel="alternate" type="text/html" title="내부 서비스만 가능한 PORT를 원격지 호출 가능하도록 변경" /><published>2017-11-30T00:00:00+09:00</published><updated>2017-11-30T00:00:00+09:00</updated><id>https://lahuman.github.io/delegate_port_forward</id><content type="html" xml:base="https://lahuman.github.io/delegate_port_forward/">&lt;h1 id=&quot;tor-proxy-포트-9050을-원격에서-접속-하는-방법&quot;&gt;Tor Proxy 포트 9050을 원격에서 접속 하는 방법&lt;/h1&gt;

&lt;p&gt;netstat 로 특정 포트를 확인 하면 2개의 IP:PORT가 표출 되는데, 첫번째 IP가 127.0.0.1 일 경우, 오직 로컬(localhost-loopback interface)에서만 접근 이 가능하다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo netstat -ntlup | grep 9050
tcp        0      0 127.0.0.1:9050          0.0.0.0:*               LISTEN      683/tor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Tor에서 제공되는 Proxy 9050 port는 socks5 protocol로 로컬에서만 서비스 된다.
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;delegate-설정&quot;&gt;DeleGate 설정&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://delegate.hpcc.jp/delegate/&quot;&gt;일본&lt;/a&gt;에서 제작된 것으로 보이며, 2014년 10월에 9.9.13으로 마지막 UPDATE 된 프로그램이다.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;기초 사용법은 &lt;a href=&quot;http://www.delegate.org/delegate/tutorial/&quot;&gt;Delegate 사이트&lt;/a&gt;에 잘 나와있다.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;설치는 &lt;a href=&quot;ftp://delegate.hpcc.jp/pub/DeleGate/bin/&quot;&gt;BINARY 형식을 다운&lt;/a&gt;받아 압축을 풀면 추가 설치할 필요는 없다.
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# download 9.9.13
$ wget ftp://delegate.hpcc.jp/pub/DeleGate/bin/linux/latest/linux2.6-dg9_9_13.tar.gz
# 압축 해제
$ tar xvzf linux2.6-dg9_9_13.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행은 설치된 디렉터리의 bin/dg9_9_13 을 실행 하면된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 설치된 디렉터리로 이동
$ cd DGROOT/bin/
# 메일 정보를 작성하지 않을 경우 다음의 오류 발생
# ERROR! ADMIN=&quot;your_mail_address&quot; must be specified.
$ vim dg9_9_13.conf
# ADMIN 찾아 주석 제거후, 메일 주소 작성
ADMIN=Email.address
# 저장 후 종료
# 실행 -P제공PORT SERVER=서버타입(HTTP,FTP,SSH ETC..) SOCKS=포워딩대상정보
./dg9_9_13 -P8890 SERVER=socks5 SOCKS=localhost:9050
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;처리된 결과를 확인하면 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tcp        0      0 0.0.0.0:8890            0.0.0.0:*               LISTEN      6069/./dg9_9_13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;외부에서 8890 포트로 Proxy요청을 보내면 tor proxy를 사용 할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://superuser.com/questions/423563/convert-http-requests-to-socks5&quot;&gt;Convert HTTP requests to SOCKS5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.delegate.org/delegate/&quot;&gt;DeleGate Support Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="delegate" /><category term="port forward" /><summary type="html">Port forward 프로그램</summary></entry><entry><title type="html">Python 에서 Mysql DB Pool 선택시 유의사항</title><link href="https://lahuman.github.io/python_connection_pool/" rel="alternate" type="text/html" title="Python 에서 Mysql DB Pool 선택시 유의사항" /><published>2017-11-29T00:00:00+09:00</published><updated>2017-11-29T00:00:00+09:00</updated><id>https://lahuman.github.io/python_connection_pool</id><content type="html" xml:base="https://lahuman.github.io/python_connection_pool/">&lt;h1 id=&quot;python에서-mysql-db-pool을-테스트-해보았다&quot;&gt;Python에서 Mysql DB Pool을 테스트 해보았다.&lt;/h1&gt;

&lt;p&gt;우선 테스트를 위해서 알아야할 기초 지식은 Porcess와 Thread 이다.
&lt;br /&gt;
기본적으로 Tomcat 서버는 하나의 Porcess에서 여러개의 Request를 thread 기반으로 처리 한다. 
&lt;br /&gt;
단순하게 하나의 Porcess에서 DB Pool을 사용한다고 생각 하면된다.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;테스트는 다음 2개을 해보았다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.mysql.com/downloads/connector/python/&quot;&gt;mysql-connector-python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sqlalchemy.org/&quot;&gt;SQLAlchemy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;처음에는 mysql-connector-python 이 내가 정확하게 원하는 기능만을 담고 있어서 사용하기 위한 테스트를 진행 하였다.
&lt;br /&gt;
하지만 mysql-connector-python의 경우 pool 갯수 이상의 connection을 요구 할 경우 다음과 같은 오류가 발생 한다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql.connector.errors.PoolError: Failed getting connection&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; pool exhausted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 검색을 통하여 SQLAlchemy 을 사용하면 되는 것을 확인하고 테스트 결과 원하는 처리가 되었다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://m.blog.naver.com/PostView.nhn?blogId=parkjy76&amp;amp;logNo=220794146424&amp;amp;proxyReferer=https%3A%2F%2Fwww.google.co.kr%2F&quot;&gt;connection pool&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="python" /><category term="mysql" /><summary type="html">Mysql connector Pool은 이상하다.</summary></entry><entry><title type="html">오늘은 맥 개발 환경 설정을 해보았다.</title><link href="https://lahuman.github.io/20171127-phase/" rel="alternate" type="text/html" title="오늘은 맥 개발 환경 설정을 해보았다." /><published>2017-11-27T00:00:00+09:00</published><updated>2017-11-27T00:00:00+09:00</updated><id>https://lahuman.github.io/20171127-phase</id><content type="html" xml:base="https://lahuman.github.io/20171127-phase/">&lt;h1 id=&quot;개인-성향은-아무것도-안깔고-쓰다가-필요하면-하나씩-깔아-보는-건데&quot;&gt;개인 성향은 아무것도 안깔고 쓰다가 필요하면 하나씩 깔아 보는 건데…&lt;/h1&gt;

&lt;p&gt;맥을 개발용으로 처음 쓰려고 하니, 뭐 부터 시작해야 하는지 몰라 일단 인터넷에서 검색한 개발 환경을 따라가 보았다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;다른건 모르겠고, vim 화면이 이뻐졌다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;일단 열심히 써보자!&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://subicura.com/2017/11/22/mac-os-development-environment-setup.html&quot;&gt;본격 macOS에 개발 환경 구축하기&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="단상" /><summary type="html">새로운 프로그램을 잔뜩 깔아 버림</summary></entry><entry><title type="html">Python에서 virualenv 과 virtualenvwrapper 설치하기</title><link href="https://lahuman.github.io/python_virualenv/" rel="alternate" type="text/html" title="Python에서 virualenv 과 virtualenvwrapper 설치하기" /><published>2017-11-24T00:00:00+09:00</published><updated>2017-11-24T00:00:00+09:00</updated><id>https://lahuman.github.io/python_virualenv</id><content type="html" xml:base="https://lahuman.github.io/python_virualenv/">&lt;h1 id=&quot;virualenv-와-virtualenvwrapper&quot;&gt;virualenv 와 virtualenvwrapper&lt;/h1&gt;

&lt;h2 id=&quot;virualenv&quot;&gt;virualenv&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;여러개의 Python 프로젝트를 진행할때 의존성 문제를 해결 하기 위하여 가상환경을 구성하는 모듈 이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;virtualenvwrapper&quot;&gt;virtualenvwrapper&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;virualenv 를 감싸서 쉽게 관리 하기 위한 모듈이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install virtualenv virtualenvwrapper
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;virtualenvwrapper-설정&quot;&gt;virtualenvwrapper 설정&lt;/h2&gt;

&lt;h3 id=&quot;bash_profile-에-설정&quot;&gt;~/.bash_profile 에 설정&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Create a backup of your .bash_profile
cp ~/.bash_profile ~/.bash_profile-org

# Be careful with this command
printf '\n%s\n%s\n%s' '# virtualenv' 'export WORKON_HOME=~/virtualenvs' \
'source /usr/local/bin/virtualenvwrapper.sh' &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;virtual-환경-사용&quot;&gt;virtual 환경 사용&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source ~/.bash_profile

mkdir -p $WORKON_HOME

mkvirtualenv api

# Exit the 'api' virtual environment
deactivate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;virtualenv-사용-팁&quot;&gt;virtualenv 사용 팁&lt;/h3&gt;

&lt;p&gt;구성된 가상 환경 실행 방법&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;workon api
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가상환경 종료 방법&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;가상-환경에-설치된-모듈-정보-저장&quot;&gt;가상 환경에 설치된 모듈 정보 저장&lt;/h2&gt;

&lt;p&gt;우서 requests 모듈을 설치 한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install requests
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가상 환경에 필요한 모듈을 모두 설치 한 이후, 다음 명령으로 환경에 대한 정보를 저장한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다른 곳에서 해당 환경에 대한 설치는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://exponential.io/blog/2015/02/10/install-virtualenv-and-virtualenvwrapper-on-mac-os-x/&quot;&gt;Install virtualenv and virtualenvwrapper on Mac OS X&lt;/a&gt;
&lt;a href=&quot;http://docs.python-guide.org/en/latest/dev/virtualenvs/&quot;&gt;Pipenv &amp;amp; Virtual Environments&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="python" /><summary type="html">python과 pip는 이미 설치되어 있는 상태에서 시작</summary></entry><entry><title type="html">이제 나도 맥 사용자!!!</title><link href="https://lahuman.github.io/20171123-phase/" rel="alternate" type="text/html" title="이제 나도 맥 사용자!!!" /><published>2017-11-23T00:00:00+09:00</published><updated>2017-11-23T00:00:00+09:00</updated><id>https://lahuman.github.io/20171123-phase</id><content type="html" xml:base="https://lahuman.github.io/20171123-phase/">&lt;h1 id=&quot;오늘부터-맥으로-업무를-시작-한다&quot;&gt;오늘부터 맥으로 업무를 시작 한다.&lt;/h1&gt;

&lt;p&gt;오늘 해야 할 일도 해야하고 기존 노트북도 포멧 해서 정리 해야 한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;귀찮은 일이 있긴 하지만, 새로운 시작을 하는 것은 언제나 즐겁다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;오늘도-활기-차게&quot;&gt;오늘도 활기 차게&lt;/h2&gt;</content><author><name></name></author><category term="단상" /><summary type="html">맥을 잘 써보자</summary></entry><entry><title type="html">설계를 무엇으로 할까?</title><link href="https://lahuman.github.io/20171122-phase/" rel="alternate" type="text/html" title="설계를 무엇으로 할까?" /><published>2017-11-22T00:00:00+09:00</published><updated>2017-11-22T00:00:00+09:00</updated><id>https://lahuman.github.io/20171122-phase</id><content type="html" xml:base="https://lahuman.github.io/20171122-phase/">&lt;h1 id=&quot;어떻게-설계-해야-할까&quot;&gt;어떻게 설계 해야 할까?&lt;/h1&gt;

&lt;p&gt;사공이 많으면 배가 산으로 간다고, 설계를 어떤 방식으로 할까에 대한 고민으로 하루를 보낸다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이 고민이 앞으로 나에게 많은 도움이 되는 고민이었으면 좋겠다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;요즘 업무시간에 집중이 잘 안되는데 재미가 없어서 그런걸까?&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;재미재미오재미&quot;&gt;재미재미오재미&lt;/h2&gt;</content><author><name></name></author><category term="단상" /><summary type="html">요구사항에 대한 명세가 끝났다.</summary></entry><entry><title type="html">맥북 프로를 받다.</title><link href="https://lahuman.github.io/20171121-phase/" rel="alternate" type="text/html" title="맥북 프로를 받다." /><published>2017-11-21T00:00:00+09:00</published><updated>2017-11-21T00:00:00+09:00</updated><id>https://lahuman.github.io/20171121-phase</id><content type="html" xml:base="https://lahuman.github.io/20171121-phase/">&lt;h1 id=&quot;맥북-2014-mid를-받았다&quot;&gt;맥북 2014 MID를 받았다.&lt;/h1&gt;

&lt;p&gt;우선 맥북을 쓸일이 생겨서 즐겁다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;맥북이 좋기 보다 남들이 많이 쓰니까 써버고 싶어서 구매한 적도 있으나, 금방 실증나서 팔아 버렸다.&lt;br /&gt;
&lt;strong&gt;사실 가성비가 떨어져서 내 스타일은 아니었다&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;회사 부장님이 쓰시다가, 윈도우 PC로 교체를 원해 내가 쓰던 노트북과 교환 하기로 하고 받았다&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;받고 보니 액정 코팅이 다 벗겨져서 실망 중이었는데, 다행이 해당 문제는 무상 AS가 되어 수리를 맡기었다.&amp;lt;br /.&lt;/p&gt;

&lt;p&gt;회사에서 맥북을 쓰는 날이 오는구나!!!&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;간절히-원한건-아니고-그냥-한번-받아보고는-싶었다&quot;&gt;간절히 원한건 아니고 그냥 한번 받아보고는 싶었다&lt;/h2&gt;</content><author><name></name></author><category term="단상" /><summary type="html">남이 쓰던거긴 하지만, 회사에서 맥북을 받을 날이 오다니!!!</summary></entry><entry><title type="html">아침의 에너지가 사라졌다.</title><link href="https://lahuman.github.io/20171116-phase/" rel="alternate" type="text/html" title="아침의 에너지가 사라졌다." /><published>2017-11-16T00:00:00+09:00</published><updated>2017-11-16T00:00:00+09:00</updated><id>https://lahuman.github.io/20171116-phase</id><content type="html" xml:base="https://lahuman.github.io/20171116-phase/">&lt;h1 id=&quot;무엇을-할-것인지가-명확했는데-지금은&quot;&gt;무엇을 할 것인지가 명확했는데 지금은…&lt;/h1&gt;

&lt;p&gt;머리속이 멍하다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내가 무엇을 하는지 모르겠다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그리고 졸리다…..&lt;/p&gt;

&lt;h2 id=&quot;아오-피곤해&quot;&gt;아오 피곤해&lt;/h2&gt;</content><author><name></name></author><category term="단상" /><summary type="html">머리속이 멍하다...</summary></entry></feed>