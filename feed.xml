<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://lahuman.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.8.4">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2020-09-30T07:37:13+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">자바 열공 중!</title><link href="https://lahuman.github.io/20200927/" rel="alternate" type="text/html" title="자바 열공 중!" /><published>2020-09-27T00:00:00+09:00</published><updated>2020-09-27T00:00:00+09:00</updated><id>https://lahuman.github.io/20200927</id><content type="html" xml:base="https://lahuman.github.io/20200927/">&lt;h1 id=&quot;한국에서는-아직까지-java--springframework-가-대세입니다&quot;&gt;한국에서는 아직까지 JAVA + Springframework 가 대세입니다.&lt;/h1&gt;

&lt;p&gt;하지만… 최근 3년간은 python과 nodejs를 주로 사용하고 있습니다.&lt;/p&gt;

&lt;p&gt;방화벽 로그 데이터를 분석하고 분류하기 위해서 python을 사용하였고,&lt;/p&gt;

&lt;p&gt;현재는 팀의 주축 언어가 nodejs를 사용하고 있다.&lt;/p&gt;

&lt;p&gt;꼭 JAVA가 답은 아니지만, 이직 시장을 보면 JAVA를 빼 놓고 이야기 할 수 없다.&lt;/p&gt;

&lt;p&gt;당장 이직을 하려는 것은 아니지만, 언젠가를 위해서는 계속 JAVA를 공부해야 한다고 생각한다.&lt;/p&gt;

&lt;p&gt;다행이 JAVA 언어의 발전이 nodejs를 따라가고 있다.&lt;/p&gt;

&lt;p&gt;생각보다 쉽게 이해되는 것도 있고, 왜 이렇게 돌아서 써야 하는지 이해 못할때도 있다.&lt;/p&gt;

&lt;h2 id=&quot;그래도-오랜만에-보는-java는-재미있다&quot;&gt;그래도 오랜만에 보는 JAVA는 재미있다.&lt;/h2&gt;</content><category term="단상" /><summary type="html">최근 3년간 자바로 프로젝트를 하지 않았다. :(</summary></entry><entry><title type="html">딸아이와 나눔에 대하여 이야기 하였습니다.</title><link href="https://lahuman.github.io/20200926/" rel="alternate" type="text/html" title="딸아이와 나눔에 대하여 이야기 하였습니다." /><published>2020-09-26T00:00:00+09:00</published><updated>2020-09-26T00:00:00+09:00</updated><id>https://lahuman.github.io/20200926</id><content type="html" xml:base="https://lahuman.github.io/20200926/">&lt;h1 id=&quot;딸아이와-나는-운이-좋았다&quot;&gt;딸아이와 나는 운이 좋았다.&lt;/h1&gt;

&lt;p&gt;우리는 운이 좋다.&lt;/p&gt;

&lt;p&gt;우리를 사랑하는 부모님과 안정적인 환경덕에 큰 부족함 없이 커간다.&lt;/p&gt;

&lt;p&gt;배를 곪거나, 병이 있어도 치료받지 못하는 환경에 사는 친구들이 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;나와 딸아이의 행운과 행복을 힘든 친구들과 나누면 어떨까?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;딸아이는 긍정적으로 생각해본다고 합니다.&lt;/p&gt;

&lt;p&gt;마음이 착한 딸아이가 나눌수 있는게 무엇일지 생각하고 고민 하는게 이쁘네요.&lt;/p&gt;

&lt;h2 id=&quot;마음이-아름다운-사람&quot;&gt;마음이 아름다운 사람&lt;/h2&gt;</content><category term="단상" /><summary type="html">우리는 운이 좋았다. 우리의 행운과 행복을 다른 사람과 나누면 어떨까?</summary></entry><entry><title type="html">많은 이들이 떠나간다.</title><link href="https://lahuman.github.io/20200925/" rel="alternate" type="text/html" title="많은 이들이 떠나간다." /><published>2020-09-25T00:00:00+09:00</published><updated>2020-09-25T00:00:00+09:00</updated><id>https://lahuman.github.io/20200925</id><content type="html" xml:base="https://lahuman.github.io/20200925/">&lt;h1 id=&quot;잘가-타이&quot;&gt;잘가 타이&lt;/h1&gt;

&lt;p&gt;처음 나에게 ReactJS를 알려주고, 함께 소규모 프로젝트를 5개를 진행하였고, 1년 이상 함께 하던 베트남 개발자가 오늘을 마지막으로 다른 회사로 이직을 하였습니다.&lt;/p&gt;

&lt;p&gt;떠나는 친구에게 잘가라고 인사하고 그동안 고마웠다고 이야기 했습니다.&lt;/p&gt;

&lt;p&gt;누군가 떠나고, 또 다른 누군가는 새롭게 만나면서 살아갑니다.&lt;/p&gt;

&lt;h2 id=&quot;오늘은-아내와-함께-맥주-한잔-해야겠습니다&quot;&gt;오늘은 아내와 함께 맥주 한잔 해야겠습니다.&lt;/h2&gt;</content><category term="단상" /><summary type="html">1년 이상 함께 일하던 베트남 개발자가 오늘 이직을 하였습니다.</summary></entry><entry><title type="html">자택근무에 적응이 잘되어 갑니다.</title><link href="https://lahuman.github.io/20200924/" rel="alternate" type="text/html" title="자택근무에 적응이 잘되어 갑니다." /><published>2020-09-24T00:00:00+09:00</published><updated>2020-09-24T00:00:00+09:00</updated><id>https://lahuman.github.io/20200924</id><content type="html" xml:base="https://lahuman.github.io/20200924/">&lt;h1 id=&quot;번아웃이-한번-지나가고-폭풍일을-했습니다&quot;&gt;번아웃이 한번 지나가고 폭풍일을 했습니다.&lt;/h1&gt;

&lt;p&gt;번아웃이 언제 왔냐는 듯이 폭풍 일을 했습니다.&lt;/p&gt;

&lt;p&gt;개인 프로젝트 2개를 빡시게 진행하고 또 회사 일도 열심히 하였습니다.&lt;/p&gt;

&lt;p&gt;특히 오늘은 “행봇” 프로젝트의 리펙토링을 진행하였습니다.&lt;/p&gt;

&lt;p&gt;평소 조회 시간이 &lt;code class=&quot;highlighter-rouge&quot;&gt;20초 정도가 걸리는 목록조회를 1초&lt;/code&gt;로 줄였습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;인덱스 생성&lt;/li&gt;
  &lt;li&gt;네트워크 통신 데이터 경량화&lt;/li&gt;
  &lt;li&gt;조회 기간 최소화&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;UI는 리액트로 많이 하는데 “행봇”은 뷰로 되어 있어서 하나씩 까면서 수정하였습니다.&lt;/p&gt;

&lt;h2 id=&quot;바닥을-치고-나니-최고점을-찍네요&quot;&gt;바닥을 치고 나니 최고점을 찍네요.&lt;/h2&gt;</content><category term="단상" /><summary type="html">집에서 어떻게 일해야 하는지 알고, 더 잘하게 되네요.</summary></entry><entry><title type="html">워크플레이스 게시글 반응 조회</title><link href="https://lahuman.github.io/workplace_post_reaction/" rel="alternate" type="text/html" title="워크플레이스 게시글 반응 조회" /><published>2020-09-20T00:00:00+09:00</published><updated>2020-09-20T00:00:00+09:00</updated><id>https://lahuman.github.io/workplace_post_reaction</id><content type="html" xml:base="https://lahuman.github.io/workplace_post_reaction/">&lt;h1 id=&quot;workplace-게시물-반응-조회&quot;&gt;&lt;a href=&quot;https://work.workplace.com/&quot;&gt;Workplace&lt;/a&gt; 게시물 반응 조회&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;워크플레이스의 관리자에서는 특정 게시물의 상세 반응 정보를 제공하지 안습니다.
때문에 이벤트성 게시물에 대한 반응정보를 요청받으면, GRAPH API를 이용해서 excel 형태로 제공했었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;워크플레이스에서 작성된 게시물에 대한 반응 정보에 대하여 아래 그림처럼 표기해줍니다.
반응 정보는 게시물의 반응 정보와 댓글에 대한 반응 정보로 나뉩니다.
모든 반응 정보는 excel 형식으로 다운로드가능합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Screen&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;게시물-정보-조회&quot;&gt;게시물 정보 조회&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;게시물 ID를 입력하거나, 게시물의 주소를 넣으면 자동으로 게시물 ID로 변환합니다.
&lt;img src=&quot;https://github.com/lahuman/wp-reaction/blob/master/screenshot.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;게시물-반응-상세-조회&quot;&gt;게시물 반응 상세 조회&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/lahuman/wp-reaction/blob/master/screenshot_1.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;게시물-댓글-정보-조회&quot;&gt;게시물 댓글 정보 조회&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/lahuman/wp-reaction/blob/master/screenshot_2.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;게시물-댓글-상세-조회&quot;&gt;게시물 댓글 상세 조회&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/lahuman/wp-reaction/blob/master/screenshot_3.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;사용된 프로그램과 설정&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#workplace&quot;&gt;Workplace&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dockerfile&quot;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#version&quot;&gt;Version&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;설치를 위해서는 기본적으로 NODEJS 12.x 이상의 버젼이 필요합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;backend&quot;&gt;Backend&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://swagger.io/specification/&quot;&gt;Oas 3.0&lt;/a&gt; 기반으로 작성되었습니다.&lt;/li&gt;
  &lt;li&gt;PATH : &lt;strong&gt;report_backend&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;.env 설정은 _env 파일을 .env로 변경하여서 Key에 알맞은 값을 설정 하면 됩니다.
또는 아래 샘플을 이용하셔요.
ANALYTICS_ACCESS_KEY는 workplace 관리자 화면에서 생성한 맞춤 통합의 토큰 값입니다
해당 통합은 게시물, 댓글 사용자의 정보를 조회하는 권한을 주어야 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NODE_ENV=deploment
SERVER_PORT=10010
ANALYTICS_ACCESS_KEY=
WP_API_HOST=https://graph.facebook.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;실행&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm run start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;서버가 문제 없이 기동이 되면 &lt;a href=&quot;http://localhost:10010/docs&quot;&gt;Swagger UI&lt;/a&gt;을 확인하세요.&lt;/p&gt;

&lt;h3 id=&quot;frontend&quot;&gt;Frontend&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;ReactJS&lt;/a&gt;로 작성되어 있습니다.&lt;/li&gt;
  &lt;li&gt;PATH : &lt;strong&gt;report_frontend&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;.env 설정은 _env 파일을 .env로 변경하여서 Key에 알맞은 값을 설정 하면 됩니다.
또는 아래 샘플을 이용하셔요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;REACT_APP_API=http://localhost:10010/api # API SERVER 주소
REACT_APP_WP_URL=https://{domain}.workplace.com # workplace 주소
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;실행&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install
# npm run start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;workplace&quot;&gt;&lt;a href=&quot;https://work.workplace.com/&quot;&gt;Workplace&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://work.workplace.com/&quot;&gt;Workplace&lt;/a&gt;은 페이스북에서 개발한 엔터프라이즈 연결 플랫폼입니다. 
그룹 사용, 인스턴스 메시징 및 뉴스 피드를 포함합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;게시물의 반응을 확인하기 위해서 관리자 페이지에서 맞춤 통합을 생성해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/lahuman/wp-reaction/blob/master/wp_admin_panel.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;통합 생성후 다음 3개의 통합 권한(그룹 콘텐츠 읽기, 사용자 이메일 읽기, 그룹 멤버 읽기)을 할당해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/lahuman/wp-reaction/blob/master/wp_admin_auth.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;docker image 생성 파일 제공&lt;/li&gt;
  &lt;li&gt;Dockerfile 참조&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;이미지 생성&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# docker build -t ${image-name}:${version} .

$ docker build -t wp-reaction:1.0 .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;이미지 실행&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# docker run -p 8888:80 --rm ${image-name}:${version}

$ docker run -p 8888:80 --rm wp-reaction:1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://lahuman.github.io/reactjs-dockerfile/&quot;&gt;Dockerfile 더 자세히 알아보기&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;version&quot;&gt;Version&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;v1.0 : workplace 게시물 반응 정보 조회&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://badges.mit-license.org&quot;&gt;&lt;img src=&quot;http://img.shields.io/:license-mit-blue.svg?style=flat-square&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://opensource.org/licenses/mit-license.php&quot;&gt;MIT license&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Copyright 2020 © &lt;a href=&quot;https://lahuman.github.io&quot; target=&quot;_blank&quot;&gt;lahuman&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><category term="workplace" /><category term="post" /><category term="reaction" /><summary type="html">워크플레이스의 게시글 반응을 제공하는 서비스 개발</summary></entry><entry><title type="html">JIRA REPORT</title><link href="https://lahuman.github.io/jira_work_log_report/" rel="alternate" type="text/html" title="JIRA REPORT" /><published>2020-09-15T00:00:00+09:00</published><updated>2020-09-15T00:00:00+09:00</updated><id>https://lahuman.github.io/jira_work_log_report</id><content type="html" xml:base="https://lahuman.github.io/jira_work_log_report/">&lt;h1 id=&quot;jira-work-log-report-git-바로가기&quot;&gt;&lt;a href=&quot;https://github.com/lahuman/jira-report&quot;&gt;Jira Work log Report GIT 바로가기&lt;/a&gt;&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;지라에서 작성한 work log를 아래 그림과 같이 날짜 기준으로 표기해 줍니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Screen&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/lahuman/jira-report/blob/master/snapshot.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;사용된 프로그램과 설정시 중요 내용&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jiracloud&quot;&gt;JiraCloud&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dockerfile&quot;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#license&quot;&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;설치를 위해서는 기본적으로 NODEJS 12.x 이상의 버젼이 필요합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;backend&quot;&gt;Backend&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://swagger.io/specification/&quot;&gt;Oas 3.0&lt;/a&gt; 기반으로 작성되었습니다.&lt;/li&gt;
  &lt;li&gt;PATH : &lt;strong&gt;report_backend&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;.env 설정은 _env 파일을 .env로 변경하여서 Key에 알맞은 값을 설정 하면 됩니다.
또는 아래 샘플을 이용하셔요.
TOKEN_KEY는 API 토큰입니다. JIRA CLOUD에 가입이 되어 있다면, API 토큰은 &lt;a href=&quot;https://id.atlassian.com/manage-profile/security/api-tokens&quot;&gt;여기에서&lt;/a&gt;에서 생성이 가능합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;JIRA_HOST=https://lahuman.atlassian.net # jira host 정보
JIRA_ID=lahuman@emaim.com # JIRA ID
TOKEN_KEY=abcde # JIRA API TOKEN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;실행&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm run start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;서버가 문제 없이 기동이 되면 &lt;a href=&quot;http://localhost:8080/docs&quot;&gt;Swagger UI&lt;/a&gt;을 확인하세요.&lt;/p&gt;

&lt;h3 id=&quot;frontend&quot;&gt;Frontend&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;ReactJS&lt;/a&gt;로 작성되어 있습니다.&lt;/li&gt;
  &lt;li&gt;PATH : &lt;strong&gt;report_frontend&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;.env 설정은 _env 파일을 .env로 변경하여서 Key에 알맞은 값을 설정 하면 됩니다.
또는 아래 샘플을 이용하셔요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;REACT_APP_API_URL=http://localhost:8080  # backend server 주소
REACT_APP_API_JIRA_BROWSE=https://lahuman.atlassian.net/browse/ #jira의 browse 주소
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;실행&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm instlal
# npm run start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jiracloud&quot;&gt;JiraCloud&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.atlassian.com/ko/software/free#plan-and-track&quot;&gt;JIRA Cloud&lt;/a&gt;는 무료로 사용이 가능한 플랜이 있습니다
가입을 하면 다음과 같이 사용이 가능합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/lahuman/jira-report/blob/master/jira_cloud.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://lahuman.atlassian.net&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;docker image 생성 파일 제공&lt;/li&gt;
  &lt;li&gt;Dockerfile 참조&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;이미지 생성&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# docker build -t ${image-name}:${version} .

$ docker build -t jira-report:1.0 .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;이미지 실행&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# docker run -p 8888:80 --rm ${image-name}:${version}

$ docker run -p 8888:80 --rm jira-report:1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://lahuman.github.io/reactjs-dockerfile/&quot;&gt;Dockerfile 더 자세히 알아보기&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://badges.mit-license.org&quot;&gt;&lt;img src=&quot;http://img.shields.io/:license-mit-blue.svg?style=flat-square&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://opensource.org/licenses/mit-license.php&quot;&gt;MIT license&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Copyright 2020 © &lt;a href=&quot;https://lahuman.github.io&quot; target=&quot;_blank&quot;&gt;lahuman&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><category term="jira" /><category term="worklog" /><category term="timetracking" /><summary type="html">JIRA work log를 Time tracking 형식으로 도식화 처리</summary></entry><entry><title type="html">번아웃이 훅 온다.</title><link href="https://lahuman.github.io/20200914/" rel="alternate" type="text/html" title="번아웃이 훅 온다." /><published>2020-09-14T00:00:00+09:00</published><updated>2020-09-14T00:00:00+09:00</updated><id>https://lahuman.github.io/20200914</id><content type="html" xml:base="https://lahuman.github.io/20200914/">&lt;h1 id=&quot;번아웃이-온다&quot;&gt;번아웃이 온다.&lt;/h1&gt;

&lt;p&gt;주말내내 회사일을 했다.&lt;/p&gt;

&lt;p&gt;급하다는 이야기를 듣고 주말도 반납하고 일을 했다.&lt;/p&gt;

&lt;p&gt;그러고 월요일이 되니 잘했으니 다음 일을 하자고 한다. 그것도 2개 3개를 이야기 하니 맥이 풀리고 숨이 막힌다.&lt;/p&gt;

&lt;p&gt;그리고 주말내내 일한게 후회가 된다.&lt;/p&gt;

&lt;p&gt;그냥 아이들과 더 놀아줄껄…&lt;/p&gt;

&lt;p&gt;보상을 바라고 주말에 일을 한건 아니지만, 이렇게 숨막히게 일을 몰아줄지는 몰랐다.&lt;/p&gt;

&lt;p&gt;이게 회사의 문제인지, 관리의 문제인지… 그것도 아니면 내가 문제인지 생각하게 된다.&lt;/p&gt;

&lt;p&gt;다들 적당히 조용히 일하는데, 혼자 나서서 잘난척 하는건 아닌지…&lt;/p&gt;

&lt;h2 id=&quot;나대지말고-적당히-일하자-싶은-생각이-문득-든다&quot;&gt;나대지말고 적당히 일하자 싶은 생각이 문득 든다.&lt;/h2&gt;</content><category term="단상" /><summary type="html">일이 끝나고 다음일이 오는게 아니라 파도 오듯이 미친듯 밀려온다.</summary></entry><entry><title type="html">WSL 에서 JAVA SPRINGFRAMEWORK를 VSCODE로 구동해보자</title><link href="https://lahuman.github.io/wsl_vscode_java_springframework/" rel="alternate" type="text/html" title="WSL 에서 JAVA SPRINGFRAMEWORK를 VSCODE로 구동해보자" /><published>2020-09-05T00:00:00+09:00</published><updated>2020-09-05T00:00:00+09:00</updated><id>https://lahuman.github.io/wsl_vscode_java_springframework</id><content type="html" xml:base="https://lahuman.github.io/wsl_vscode_java_springframework/">&lt;h1 id=&quot;wsl-에서-java-springframework를-vscode로-구동해보자&quot;&gt;WSL 에서 JAVA SPRINGFRAMEWORK를 VSCODE로 구동해보자&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://zianlog.tistory.com/m/entry/VS-Code%EC%97%90%EC%84%9C-WSL-Remote%ED%99%98%EA%B2%BD%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-Java%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0?category=853895&quot;&gt;VS Code에서 WSL Remote환경을 이용하여 Java개발 환경 구성하기&lt;/a&gt;에 정리가 잘되어 있어서 따로 추가 작성하지는 않습니다.&lt;/p&gt;

&lt;p&gt;사용해본 경험만 작성하면 다음과 같습니다.&lt;/p&gt;

&lt;h2 id=&quot;강점&quot;&gt;강점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;정말 가벼운 개발 환경&lt;/li&gt;
  &lt;li&gt;maven, debuging 지원&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;약점&quot;&gt;약점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;가볍기만한 개발환경
    &lt;ul&gt;
      &lt;li&gt;개발할때 손이 많이 간다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;초기 구축시 손이 많이감&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;

&lt;p&gt;현재 사용하는 노트북이 i5 cpu에 4GB 메모리를 가지고 있습니다.
IntelliJ나 Elipse를 사용하기에는 살짝쿵 메모리가 부족한데 간단한 개발 한다고 하면 추천 합니다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zianlog.tistory.com/m/entry/VS-Code%EC%97%90%EC%84%9C-WSL-Remote%ED%99%98%EA%B2%BD%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-Java%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0?category=853895&quot;&gt;VS Code에서 WSL Remote환경을 이용하여 Java개발 환경 구성하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="wsl" /><category term="java" /><category term="vscode" /><summary type="html">가벼운 개발 툴 그러나, 손이 많이 갑니다.</summary></entry><entry><title type="html">react-staripts build에서 메모리 설정 하는 방법</title><link href="https://lahuman.github.io/react_build_heap_momory/" rel="alternate" type="text/html" title="react-staripts build에서 메모리 설정 하는 방법" /><published>2020-09-02T00:00:00+09:00</published><updated>2020-09-02T00:00:00+09:00</updated><id>https://lahuman.github.io/react_build_heap_momory</id><content type="html" xml:base="https://lahuman.github.io/react_build_heap_momory/">&lt;h1 id=&quot;react-staripts-build에서-메모리-설정-하는-방법&quot;&gt;react-staripts build에서 메모리 설정 하는 방법&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; 명령을 날리자 다음과 같은 오류가 발생하였습니다.&lt;/p&gt;

&lt;h3 id=&quot;오류&quot;&gt;오류&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[service@ip-10-52-00-00 project]$ npm run build

&amp;gt; project@0.1.0 build /home/service/project
&amp;gt; react-scripts build

Creating an optimized production build...

&amp;lt;--- Last few GCs ---&amp;gt;
n [29108:0x45b8410]    54463 ms: Mark-sweep 479.1 (483.6) -&amp;gt; 478.3 (483.3) MB, 402.1 / 0.0 ms  (+ 67.4 ms in 21 steps since start of marking, biggest step 12.2 ms, walltime since start of marking 503 ms) (average mu = 0.133, current mu = 0.067) allocation f[29108:0x45b8410]    54947 ms: Mark-sweep 479.3 (483.3) -&amp;gt; 478.7 (483.8) MB, 435.5 / 0.0 ms  (+ 39.2 ms in 14 steps since start of marking, biggest step 4.6 ms, walltime since start of marking 484 ms) (average mu = 0.078, current mu = 0.019) allocation fa

&amp;lt;--- JS stacktrace ---&amp;gt;

==== JS stack trace =========================================

    0: ExitFrame [pc: 0x13cf019]
Security context: 0x1b71cb9008d1 &amp;lt;JSObject&amp;gt;
    1: SourceNode_walk [0x1294ddf74e79] [/home/service/project/node_modules/source-map/lib/source-node.js:~221] [pc=0x3a5fedf8af45](this=0x0243dcd9f6a9 &amp;lt;SourceNode map = 0x3369f2e15c99&amp;gt;,0x17faadf40119 &amp;lt;JSFunction (sfi = 0x333914477ba1)&amp;gt;)
    2: SourceNode_walk [0x1294ddf74e79] [/home/service/project/node_modules/source-map/lib/source-nod...

FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
 1: 0xa093f0 node::Abort() [node]
 2: 0xa097fc node::OnFatalError(char const*, char const*) [node]
 3: 0xb842ae v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]
 4: 0xb84629 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]
 5: 0xd30fe5  [node]
 6: 0xd31676 v8::internal::Heap::RecomputeLimits(v8::internal::GarbageCollector) [node]
 7: 0xd3def5 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [node]
 8: 0xd3eda5 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [node]
 9: 0xd4185c v8::internal::Heap::AllocateRawWithRetryOrFail(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [node]
10: 0xd0830b v8::internal::Factory::NewFillerObject(int, bool, v8::internal::AllocationType, v8::internal::AllocationOrigin) [node]
11: 0x1049f4e v8::internal::Runtime_AllocateInYoungGeneration(int, unsigned long*, v8::internal::Isolate*) [node]
12: 0x13cf019  [node]
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! project@0.1.0 build: `react-scripts build`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the project@0.1.0 build script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/service/.npm/_logs/2020-09-02T10_23_38_254Z-debug.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;heap 메모리 부족이라 일반적으로는 다음 명령어로 처리 했습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; node --max_old_space_size=4096 app.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하지만 create-react-app 으로 생성한 프로젝트라 build 명령이 다음과 같았습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;scripts&quot;: {
    &quot;start&quot;: &quot;react-scripts start&quot;,
    &quot;build&quot;: &quot;react-scripts build&quot;,
    &quot;test&quot;: &quot;react-scripts test&quot;,
    &quot;eject&quot;: &quot;react-scripts eject&quot;
  },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;검색을 해보니 react-scripts 가 &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules/.bin/react-scripts&lt;/code&gt;에 있었습니다.&lt;/p&gt;

&lt;p&gt;따라서 다음과 같이 메모리 옵션을 주면 됩니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$&amp;gt; node --max_old_space_size=4096 node_modules/.bin/react-scripts build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 메모리를 더 할당해서 실행을 하게 됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;라고 했지만 제대로 동작 하지 않았습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;추가-처리-내역입니다&quot;&gt;추가 처리 내역입니다.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot;&gt;dotenv&lt;/a&gt; 모듈이 설치 되어 있어야 합니다.&lt;/p&gt;

&lt;p&gt;.env 파일에 아래 내용을 추가해주세요.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NODE_OPTIONS=&quot;--max-old-space-size=4096&quot; # 메모리 할당합니다.
GENERATE_SOURCEMAP=false # .map 파일을 생성하지 않는 옵션입니다. build시 메모리 사용을 줄입니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/44046366/increase-javascript-heap-size-in-create-react-app-project&quot;&gt;Increase JavaScript Heap size in create-react-app project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="reactjs" /><category term="build" /><category term="memory" /><summary type="html">npm run build 대신 node --max_old_space_size=4096 node_modules/.bin/react-scripts build 를 사용하세요</summary></entry><entry><title type="html">수연이가 JETSON NANO CASE를 만들어 주었다!</title><link href="https://lahuman.github.io/20200829/" rel="alternate" type="text/html" title="수연이가 JETSON NANO CASE를 만들어 주었다!" /><published>2020-08-29T00:00:00+09:00</published><updated>2020-08-29T00:00:00+09:00</updated><id>https://lahuman.github.io/20200829</id><content type="html" xml:base="https://lahuman.github.io/20200829/">&lt;h1 id=&quot;오늘-간간히-가지고-놀고-있는-jetson-nano에-fan을-부착하였습니다&quot;&gt;오늘 간간히 가지고 놀고 있는 Jetson nano에 fan을 부착하였습니다.&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.nvidia.com/embedded/jetson-nano-developer-kit&quot;&gt;Jetson Nano Developer Kit&lt;/a&gt;을 간간히 가지고 놀 때, 조금만 오래 가지고 놀면 발열이 심해서 Fan을 구매 하였습니다.&lt;/p&gt;

&lt;p&gt;Fan을 연결하고 보니까 기존 상자에 넣을 수 없었습니다.&lt;/p&gt;

&lt;p&gt;케이스를 사야 하나 고민을 하는 와중에 금손 수연이에게 기존 상자를 활용할 수 없을까 물어보니
바로 뚝딱 만들어 주었습니다.&lt;/p&gt;

&lt;p&gt;아주 만족스러운 케이스가 탄생하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/jetson_nano_case.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;대만족&quot;&gt;대만족&lt;/h2&gt;
&lt;h2 id=&quot;금손아내&quot;&gt;금손아내&lt;/h2&gt;</content><category term="단상" /><summary type="html">금손 아내를 자랑합니다.</summary></entry></feed>
