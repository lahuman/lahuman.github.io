<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="https://lahuman.github.io/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.8.4">Jekyll</generator><link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lahuman.github.io/" rel="alternate" type="text/html" /><updated>2021-11-21T21:13:22+09:00</updated><id>https://lahuman.github.io/</id><title type="html">lahuman</title><subtitle>열심히 사는 아저씨</subtitle><entry><title type="html">CentOS 에서 puppeteer 실행시 libxkbcommon.so.0를 못찾을때 처리 방법</title><link href="https://lahuman.github.io/puppeteer_libxkbcommon/" rel="alternate" type="text/html" title="CentOS 에서 puppeteer 실행시 libxkbcommon.so.0를 못찾을때 처리 방법" /><published>2021-11-19T00:00:00+09:00</published><updated>2021-11-19T00:00:00+09:00</updated><id>https://lahuman.github.io/puppeteer_libxkbcommon</id><content type="html" xml:base="https://lahuman.github.io/puppeteer_libxkbcommon/">&lt;h1 id=&quot;centos-에서-puppeteer-실행시-libxkbcommonso0를-못찾을때-처리-방법&quot;&gt;CentOS 에서 puppeteer 실행시 libxkbcommon.so.0를 못찾을때 처리 방법&lt;/h1&gt;

&lt;p&gt;CentOS에서 node 기반의 puppeteer를 실생하 다음과 같은 오류를 만났다&lt;/p&gt;

&lt;h3 id=&quot;발생-에러-로그&quot;&gt;발생 에러 로그&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UnhandledPromiseRejectionWarning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Failed&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;launch&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;brows&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;er&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;applications&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;teamstokengen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node_modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;puppeteer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chromium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linux&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;901912&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shared&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;libraries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;libxkbcommon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;so&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cannot&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;shared&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;such&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;directory&lt;/span&gt; 

&lt;span class=&quot;nx&quot;&gt;TROUBLESHOOTING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;puppeteer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;puppeteer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blob&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;docs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;troubleshooting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;md&lt;/span&gt;

 &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClose&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;applications&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;teamstokengen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node_modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;puppeteer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;puppeteer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BrowserRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;203&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anonymous&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;applications&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;teamstokengen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node_modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uppeteer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cjs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;puppeteer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BrowserRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;193&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;68&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;326&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;416&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onend&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;194&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;326&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;endReadableNT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_stream_readable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1223&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;processTicksAndRejections&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;internal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task_queues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;84&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UnhandledPromiseRejectionWarning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Unhandled&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;originated&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;either&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;throwing&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inside&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;without&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rejecting&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;was&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handled&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;To&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;termin&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ate&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unhandled&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rejection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CLI&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`--unhandl ed-rejections=strict`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;://&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nodejs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#cli_unhandled_rejecti ons_mode). (rejection id: 1) (node:16300) [DEP0018] DeprecationWarning: Unhandled promise rejections are depr ecated. In the future, promise rejections that are not handled will terminate th e Node.js process with a non-zero exit code.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;해결방법으로는 다음 모듈을 설치하면된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ yum install libxkbcommon-x11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;원인으로는 x11 라이브러리 부재 문제로 실행이 안되었다.&lt;/p&gt;

&lt;h2 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/66795309/how-to-solve-puppeteer-failed-to-launch-the-browser-process&quot;&gt;How to solve Puppeteer: failed to launch the browser process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="puppeteer" /><category term="libxkbcommon" /><category term="centos" /><summary type="html">puppeteer 실행시 발생하는 오류</summary></entry><entry><title type="html">지난 3년간 gsshop에서의 경험을 공유 합니다.</title><link href="https://lahuman.github.io/3years/" rel="alternate" type="text/html" title="지난 3년간 gsshop에서의 경험을 공유 합니다." /><published>2021-11-14T00:00:00+09:00</published><updated>2021-11-14T00:00:00+09:00</updated><id>https://lahuman.github.io/3years</id><content type="html" xml:base="https://lahuman.github.io/3years/">&lt;h1 id=&quot;지난-3년을-되돌아-보며&quot;&gt;지난 3년을 되돌아 보며…&lt;/h1&gt;

&lt;h2 id=&quot;0-지난-3년을-되돌아-보며-어떤-업무를-했는지에-대한-기록&quot;&gt;0. 지난 3년을 되돌아 보며, 어떤 업무를 했는지에 대한 기록&lt;/h2&gt;

&lt;h3 id=&quot;2018--2019년도&quot;&gt;2018 ~ 2019년도&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;“생방송 대시보드” 서비스 개발 :: 현재 상품의 상담원， ARS 콜， 모바일 주문 고객 반응을 확인&lt;/li&gt;
  &lt;li&gt;“상품 360” 서비스 개발  ::  신상품 등록은 어떤 것들이 되는지， 지금 많이 판매되고 있는 상품을 확인&lt;/li&gt;
  &lt;li&gt;“심의포탈” 서비스 개발 :: 내가 진행하는 방송 전에 관련 아이템의 심의 주의사항을 확인하고 방송 종료 후 심의 결과를 확인&lt;/li&gt;
  &lt;li&gt;“디모 (디지털툴 모음)” 서비스 개발 :: 현업이 사용하는 디지털 툴을 직무별로 모아서 확인&lt;/li&gt;
  &lt;li&gt;“Auth몬” 서비스 개발 :: 클라우드 서비스에 인증/권한 기능을 제공&lt;/li&gt;
  &lt;li&gt;“Q-FIT” 서비스 개발 :: QA활동 데이터， 품질 지표를 종합하여， 상품군별 협력업체 현황을 확인&lt;/li&gt;
  &lt;li&gt;“Trend몬” 서비스 개발 :: 인스타그램에서 트렌드 파악에 도움이 되는 정보를 확인&lt;/li&gt;
  &lt;li&gt;“직매입대시보드” 프로토타입 개발 :: 지속적인 직매입 확대를 위해 쉽고 빠른 제고 현황을 확인을 지원&lt;/li&gt;
  &lt;li&gt;“Shopee” 프로토타입 개발 :: 동남아권에서 가장 유명한 쇼핑몰의 인기 상품 정보를 제공하여 해외 사업부의 상품 소싱을 지원&lt;/li&gt;
  &lt;li&gt;“LMS몬” 서비스 개발 :: 고객의 LMS 수신이후 구매까지 되었는지에 대한 데이터를 제공&lt;/li&gt;
  &lt;li&gt;클라우드 구조 개선
    &lt;ul&gt;
      &lt;li&gt;클라우드 서비스에 레가시 데이터를 API로 제공하는 51Collector 개발&lt;/li&gt;
      &lt;li&gt;클라우드 서비스 배포에 대한 CI/CD 구성 진행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2020년도&quot;&gt;2020년도&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;상품 360 사용성 개선
    &lt;ul&gt;
      &lt;li&gt;저화질이미지 조회 및 교체&lt;/li&gt;
      &lt;li&gt;키워드검색 기능&lt;/li&gt;
      &lt;li&gt;조회편의기능: 로그인， 검색조건저장&lt;/li&gt;
      &lt;li&gt;베스트상품캐시처리&lt;/li&gt;
      &lt;li&gt;실시간실적 배치 속도개선&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;행봇(통합접수 프로세스)
    &lt;ul&gt;
      &lt;li&gt;행봇 백엔드 서비스 개발&lt;/li&gt;
      &lt;li&gt;워크플레이스， Jira 연동 기능 개발&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HTML5 UI 컴포넌트 분석
    &lt;ul&gt;
      &lt;li&gt;(Miplatform 대안 기술 적용) - MiPlatform 임베디드 브라우저 검증&lt;/li&gt;
      &lt;li&gt;React 라이브러리 비교 (Polyfill 호환성 해결， 성능 개선)&lt;/li&gt;
      &lt;li&gt;기간계 디자인 시스템 필요성 논의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;개발서버 Kubernetes 구축 (15개 서비스 활용)&lt;/li&gt;
  &lt;li&gt;AWS 클라우드 표준 아키텍쳐 적용
    &lt;ul&gt;
      &lt;li&gt;신규 클라우드 환경 구축&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;상품평 통합 허브 구축
    &lt;ul&gt;
      &lt;li&gt;이슈 키워드 기반 상품평 분석&lt;/li&gt;
      &lt;li&gt;Issue Finder 신규 화면 추가&lt;/li&gt;
      &lt;li&gt;이슈 키워드별 상품평 조회 API 개발&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;상품속성(초개인화큐레이션用)관리 v1.0
    &lt;ul&gt;
      &lt;li&gt;상품속성 태그 관리 기능 개발&lt;/li&gt;
      &lt;li&gt;상품속성 대상 상품 목록&lt;/li&gt;
      &lt;li&gt;상품별 상품속성 상세&lt;/li&gt;
      &lt;li&gt;상품속성 마이그레이션 (1，2차)&lt;/li&gt;
      &lt;li&gt;상품속성 인터페이스 (아이겐)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Workplace 운영
    &lt;ul&gt;
      &lt;li&gt;신규 계정 생성&lt;/li&gt;
      &lt;li&gt;계정 동기화 문제 처리&lt;/li&gt;
      &lt;li&gt;Workplace 반응 조회 서비스 개발&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2021년도&quot;&gt;2021년도&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;OSS 통합 관리 시스템
    &lt;ul&gt;
      &lt;li&gt;업무 플로어 기획 &amp;amp; 정의&lt;/li&gt;
      &lt;li&gt;화면 프로토타입 구성 &amp;amp; 검증&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TONG 기능 추가 :: 봇 &amp;amp; 메일 &amp;amp; SMS 발송 API
    &lt;ul&gt;
      &lt;li&gt;Workplace 대화방 생성&lt;/li&gt;
      &lt;li&gt;Workplace 대화 상대 초대/강퇴 기능&lt;/li&gt;
      &lt;li&gt;메일 발송 기능 개발&lt;/li&gt;
      &lt;li&gt;발송 Audit 기능 개발&lt;/li&gt;
      &lt;li&gt;clientId / secretKey 추가&lt;/li&gt;
      &lt;li&gt;TONG SDK 개발 (node， java)&lt;/li&gt;
      &lt;li&gt;SMS 발송 기능 개발&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;배치툴 개선
    &lt;ul&gt;
      &lt;li&gt;배치 Jenkins 설정
        &lt;ul&gt;
          &lt;li&gt;권한 처리&lt;/li&gt;
          &lt;li&gt;Grouping 처리&lt;/li&gt;
          &lt;li&gt;SSO 연동 처리&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Spring batch 샘플 작성
        &lt;ul&gt;
          &lt;li&gt;Spring batch Meta 정보 저장 처리&lt;/li&gt;
          &lt;li&gt;Spring batch Meta Dashboard 개발&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Spring batch starterpack 소스 작성&lt;/li&gt;
      &lt;li&gt;가이드 문서 작성&lt;/li&gt;
      &lt;li&gt;사용자 관리 지원&lt;/li&gt;
      &lt;li&gt;프로젝트 관리 지원&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기간계 디자인 시스템
    &lt;ul&gt;
      &lt;li&gt;GuiSelect / GuiDatePicker / GuiDateRange 등 주요 엘리먼트 추가&lt;/li&gt;
      &lt;li&gt;Typescript 적용&lt;/li&gt;
      &lt;li&gt;소스 배포 설정&lt;/li&gt;
      &lt;li&gt;Template 예제 작성 &amp;amp; public repository 사용&lt;/li&gt;
      &lt;li&gt;GuiIcon 자동 생성 처리&lt;/li&gt;
      &lt;li&gt;컴포넌트 이미지 다운로드 기능 개발&lt;/li&gt;
      &lt;li&gt;MUI 5.0 적용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;행봇 운영
    &lt;ul&gt;
      &lt;li&gt;검색 품질 카테고리 추가&lt;/li&gt;
      &lt;li&gt;DB 이관 작업 (AWS ==&amp;gt; IDC)&lt;/li&gt;
      &lt;li&gt;행봇 고도화 진행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;클라우드 구조 개선
    &lt;ul&gt;
      &lt;li&gt;MongoDB 서버 이관 &amp;amp; 데이터 마이그레이션&lt;/li&gt;
      &lt;li&gt;EC2 서버 신규 VPC 이관 &amp;amp; 보안 OS 적용&lt;/li&gt;
      &lt;li&gt;RDS 서버 이관 &amp;amp; 데이터 마이그레이션&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;워크플레이스 운영
    &lt;ul&gt;
      &lt;li&gt;장애 문의 &amp;amp; 확인 &amp;amp; 테스트&lt;/li&gt;
      &lt;li&gt;Workplace group 데이터 추출&lt;/li&gt;
      &lt;li&gt;신규 계정 추가&lt;/li&gt;
      &lt;li&gt;이벤트 지원&lt;/li&gt;
      &lt;li&gt;장애 요청 처리&lt;/li&gt;
      &lt;li&gt;계정 생성 지원&lt;/li&gt;
      &lt;li&gt;계정 동기화 지원&lt;/li&gt;
      &lt;li&gt;메일 미발송 처리 재처리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OSS 스퀘어 분석 &amp;amp; 설계
    &lt;ul&gt;
      &lt;li&gt;Backend core 구축&lt;/li&gt;
      &lt;li&gt;BOT 처리 구현&lt;/li&gt;
      &lt;li&gt;첨부파일 처리&lt;/li&gt;
      &lt;li&gt;Backend For Frontend 구축&lt;/li&gt;
      &lt;li&gt;보안 OTP 연동 처리&lt;/li&gt;
      &lt;li&gt;Activity 추가 (댓글 기능 개발)&lt;/li&gt;
      &lt;li&gt;의뢰 목록 활성화 처리&lt;/li&gt;
      &lt;li&gt;일정 색상 변경&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TEAMS 봇 확인
    &lt;ul&gt;
      &lt;li&gt;TEAMS API 확인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;신규 MongoDB 구축 진행
    &lt;ul&gt;
      &lt;li&gt;데이터 마이그레이션 진행&lt;/li&gt;
      &lt;li&gt;구 MongoDB 종료&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;합병으로 발생한 문제 지원
    &lt;ul&gt;
      &lt;li&gt;Workplace SCIM API 확인&lt;/li&gt;
      &lt;li&gt;AuthMon 로그인 실패&lt;/li&gt;
      &lt;li&gt;행봇 계정 오류 지원&lt;/li&gt;
      &lt;li&gt;역삼 근무 직원의 행봇 접근 문제 지원&lt;/li&gt;
      &lt;li&gt;SSO 연동 변경&lt;/li&gt;
      &lt;li&gt;workplace 계정 수동 처리&lt;/li&gt;
      &lt;li&gt;이노봇 창작촌 2차 인증 문제 처리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CMS 대시보드 분석 설계
    &lt;ul&gt;
      &lt;li&gt;CMS 대시보드 구축 진행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-지난-3년의-내-경험은&quot;&gt;1. 지난 3년의 내 경험은?&lt;/h2&gt;

&lt;p&gt;지난 3년간 대부분 3~5 Page 범위의 MVP(Minimum Viable Product, 이하 MVP)를 개발하였습니다. 
아쉬운 부분은 과반수의 프로젝트는 많이 사용되지 않아 종료되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;물론 현재까지 사용되고 있는 서비스도 있으나, 서비스의 질을 높이기보다 계속 새로운 MVP를 개발하고 있습니다. 
이 부분에서 스스로 소비되고 있음을 느꼈습니다. 또한 작은 서비스를 계속 개발하면서 개발자로서 발전 가능한 한계를 느끼고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;2-회사에서-배운-것--새로-배운-것-경험한-것&quot;&gt;2. 회사에서 배운 것 : 새로 배운 것, 경험한 것&lt;/h2&gt;

&lt;p&gt;애자일, 스크럼, 디자인 싱킹 등의 문화에 대하여 배웠습니다. 
스탠퍼드 대학에서 제공하는 교육과 GS 내의 문제를 해결하는 52g 활동과 2주간 빠르게 MVP를 만들어서 고객에게 리뷰하는 스크럼 등을 해보면서 빠르게 실패하고, 문제의 본질을 이해하는 게 얼마나 중요한지를 배웠습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그리고 NodeJS와 ReactJS, 서버 관리(AWS), CI/CD(빌드, 배포), Swagger(API 문서화), JIRA/confluence, 기간계 디자인 시스템, 배치 센터 등 개발부터 서버 관리 운영까지의 DevOps 역할도 배웠습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이외에도 해커톤, 북클럽, 뭉클, 상상초월, 서문래 프로젝트 등의 여러 이벤트를 경험하면서 동료들과 함께 하는 즐거움을 배웠습니다.&lt;/p&gt;

&lt;h2 id=&quot;3-결과적으로&quot;&gt;3. 결과적으로&lt;/h2&gt;

&lt;p&gt;나에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;GSSHOP&lt;/code&gt;은 정말 &lt;code class=&quot;highlighter-rouge&quot;&gt;매력적인 회사&lt;/code&gt;입니다.&lt;/p&gt;

&lt;p&gt;지난 3년간 많은 것을 배웠습니다. 특히 &lt;code class=&quot;highlighter-rouge&quot;&gt;좋은 동료&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;스스로 발전할 수 있는 기회&lt;/code&gt;를 받았습니다.&lt;/p&gt;

&lt;p&gt;GSSHOP에서는 다른 사람이 아닌 나 자신을 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;본인의 미래를 결정하고 발전&lt;/code&gt;해나갈 수 있는 장소라 생각합니다.&lt;/p&gt;</content><category term="정리" /><summary type="html">입사 3주년 기념 정리</summary></entry><entry><title type="html">ssh tunneling으로 port forword</title><link href="https://lahuman.github.io/ssh_tunneling/" rel="alternate" type="text/html" title="ssh tunneling으로 port forword" /><published>2021-10-21T00:00:00+09:00</published><updated>2021-10-21T00:00:00+09:00</updated><id>https://lahuman.github.io/ssh_tunneling</id><content type="html" xml:base="https://lahuman.github.io/ssh_tunneling/">&lt;h1 id=&quot;ssh-tunneling으로-port-forword&quot;&gt;ssh tunneling으로 port forword&lt;/h1&gt;

&lt;p&gt;특정 서비스 DBMS에 접근을 해야 하는 일이 있는데, 기본적으로 DBMS에 접근 가능한 서버는 외부에서 접근이 불가능한 상태입니다.&lt;/p&gt;

&lt;p&gt;그래서 ssh에서 제공하는 터널링을 이용해서 DBMS에 접근해보려고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/post_img/ssh_tunneling.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mac, Linux 에서는 아래 명령어를 이용하면 쉽게 터널링을 할수 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# ssh ID@GateServer -N -L localPort:DBMS:ServicePort
$ ssh ec2-user@1.2.3.4 -N -L 13306:1.2.3.5:3306
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-N&lt;/code&gt; 옵션은 리모트로 명령어 실행을 하지 않는다는 의미 이며, &lt;code class=&quot;highlighter-rouge&quot;&gt;-L&lt;/code&gt; 옵션은 로컬 포트와 GATESERVER 포트를 연결하는 역활을 합니다.&lt;/p&gt;

&lt;p&gt;여기서는 GATEServer에서 DBMS와 연결하도록 설정하였습니다.&lt;/p&gt;

&lt;p&gt;이렇게 ssh 명령어로 port forward를 사용가능합니다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://devbin.kr/ssh-tunneling-%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-port-forwarding%EC%9D%84-%ED%95%B4%EB%B3%B4%EC%9E%90/&quot;&gt;SSH tunneling 을 이용하여 Port forwarding을 해보자&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://explainshell.com/explain?cmd=ssh+-L+-N+-f+-l&quot;&gt;explainshell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="ssh" /><category term="tunneling" /><summary type="html">PC 특정 port를 ssh를 통해서 특정 서버의 port와 연결해서 사용하기</summary></entry><entry><title type="html">인증서버 구축기 - 4</title><link href="https://lahuman.github.io/auth_server_4/" rel="alternate" type="text/html" title="인증서버 구축기 - 4" /><published>2021-10-05T00:00:00+09:00</published><updated>2021-10-05T00:00:00+09:00</updated><id>https://lahuman.github.io/auth_server_4</id><content type="html" xml:base="https://lahuman.github.io/auth_server_4/">&lt;h1 id=&quot;인증-서비스-화면-작업-진행기&quot;&gt;인증 서비스 화면 작업 진행기&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;오랫만에 인증서버 코드를 확인하여서 화면을 구성하였습니다. 진행 한 내역은 아래와 같습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;backend : nodejs + express + jwt + swagger&lt;/li&gt;
  &lt;li&gt;frontend : ReactJS + Material-ui 5.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;소스-바로가기&quot;&gt;&lt;a href=&quot;https://github.com/lahuman/AuthServer&quot;&gt;소스 바로가기&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;데모-확인하기&quot;&gt;데모 확인하기&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/pxI4fXrNChI&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;실제로-사용하기-위해서-추가-구현해야할-사항들&quot;&gt;실제로 사용하기 위해서 추가 구현해야할 사항들&lt;/h2&gt;

&lt;p&gt;간단한 예제로 만든 프로젝트이며, 실운영에서는 몇가지 추가 사항을 고려해야 합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;보안 처리
    &lt;ul&gt;
      &lt;li&gt;토큰에 대한 vaild&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;리플래쉬 토큰 처리
    &lt;ul&gt;
      &lt;li&gt;JWT는 기본적으로 제공하지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ROLE에 따른 처리 방안
    &lt;ul&gt;
      &lt;li&gt;URL 기반&lt;/li&gt;
      &lt;li&gt;method 기반
        &lt;h2 id=&quot;기존-진행-내역-확인하기&quot;&gt;기존 진행 내역 확인하기&lt;/h2&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://lahuman.github.io/auth_server_1/&quot;&gt;인증서버 구축기 - 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lahuman.github.io/auth_server_2/&quot;&gt;인증서버 구축기 - 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lahuman.github.io/auth_server_3/&quot;&gt;인증서버 구축기 - 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="node" /><category term="auth" /><summary type="html">기존 작업에 이어서 화면 작업 진행</summary></entry><entry><title type="html">wsl2의 node 기반에서 프로젝트 sqlite3 실행하기</title><link href="https://lahuman.github.io/sqlite3_node_wsl2/" rel="alternate" type="text/html" title="wsl2의 node 기반에서 프로젝트 sqlite3 실행하기" /><published>2021-09-22T00:00:00+09:00</published><updated>2021-09-22T00:00:00+09:00</updated><id>https://lahuman.github.io/sqlite3_node_wsl2</id><content type="html" xml:base="https://lahuman.github.io/sqlite3_node_wsl2/">&lt;h1 id=&quot;wsl2의-node기반-프로젝트에서-sqlite3를-사용하기-위해서-설치되어야-할-라이브러리와-설정-리빌드가-필요합니다&quot;&gt;wsl2의 node기반 프로젝트에서 sqlite3를 사용하기 위해서 설치되어야 할 라이브러리와 설정, 리빌드가 필요합니다.&lt;/h1&gt;

&lt;p&gt;먼저 sqlite3를 사용하기 위해서는 다음 라이브러리가 설치되어 있어야 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;make&lt;/li&gt;
  &lt;li&gt;g++&lt;/li&gt;
  &lt;li&gt;python2 or python3&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;라이브러리-설치-하기&quot;&gt;라이브러리 설치 하기&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt install make g++ python3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;node에서-python3를-사용하도록-설정합니다&quot;&gt;node에서 python3를 사용하도록 설정합니다.&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm config set python python3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;node-gyp-rebuild&quot;&gt;node-gyp rebuild&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm rebuild node-gyp
$ npm install sqlite3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 하면, sqlite3가 오류없이 설치되어서 사용할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/58073775/error-with-node-pre-gyp-when-installing-sqlite3&quot;&gt;Error with node-pre-gyp when installing sqlite3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="wsl2" /><category term="sqlite3" /><summary type="html">wsl2는 ubuntu 이미지에 python3가 설치되어 있는 환경입니다.</summary></entry><entry><title type="html">어려운 문제를 만나면 어떻게 하나요?</title><link href="https://lahuman.github.io/20210914/" rel="alternate" type="text/html" title="어려운 문제를 만나면 어떻게 하나요?" /><published>2021-09-14T00:00:00+09:00</published><updated>2021-09-14T00:00:00+09:00</updated><id>https://lahuman.github.io/20210914</id><content type="html" xml:base="https://lahuman.github.io/20210914/">&lt;h1 id=&quot;어려운-문제를-만나면-어떻게-하나요&quot;&gt;어려운 문제를 만나면 어떻게 하나요?&lt;/h1&gt;

&lt;p&gt;어려운 문제를 만나면 엉킨 실타래를 풀 듯이 천천히 작은 부분을 해결하도록 노력합니다.&lt;/p&gt;

&lt;p&gt;조금씩 문제의 윤곽을 확인하며, 어떻게 풀어야 할지 생각하면서 해결할 실마리를 찾습니다.&lt;/p&gt;

&lt;p&gt;포기하지 않고 계속 시도를 해서 문제를 해결합니다.&lt;/p&gt;

&lt;p&gt;이게 제가 어려운 문제를 만났을때 해결하는 방법입니다.&lt;/p&gt;</content><category term="단상" /><summary type="html">실패하고 시도하고를 계속 반복합니다.</summary></entry><entry><title type="html">게으른 날들을 보내고 있다.</title><link href="https://lahuman.github.io/20210905/" rel="alternate" type="text/html" title="게으른 날들을 보내고 있다." /><published>2021-09-05T00:00:00+09:00</published><updated>2021-09-05T00:00:00+09:00</updated><id>https://lahuman.github.io/20210905</id><content type="html" xml:base="https://lahuman.github.io/20210905/">&lt;h1 id=&quot;공부도-안하고-아이들과-함께-게임을-하고-딩굴거리고-있습니다&quot;&gt;공부도 안하고, 아이들과 함께 게임을 하고 딩굴거리고 있습니다.&lt;/h1&gt;

&lt;p&gt;코로나로 인해서 멈춘 일상에서 바쁘게 발버둥 치다가, 잠시 쉬고 있습니다.&lt;/p&gt;

&lt;p&gt;의미 있게 쉬고 싶어서 뭘하고 놀지 고민하는 중입니다.&lt;/p&gt;

&lt;p&gt;아이들과 즐겁게 보내고 싶은데, 아이들은 집에서 딩굴거리기를 좋아하네요.
(아빠를 닮았…)&lt;/p&gt;

&lt;p&gt;이번주 까지는 딩굴 거려보렵니다!&lt;/p&gt;</content><category term="단상" /><summary type="html">쉬는 시간</summary></entry><entry><title type="html">꿈과 책과 힘과 벽</title><link href="https://lahuman.github.io/20210829/" rel="alternate" type="text/html" title="꿈과 책과 힘과 벽" /><published>2021-08-29T00:00:00+09:00</published><updated>2021-08-29T00:00:00+09:00</updated><id>https://lahuman.github.io/20210829</id><content type="html" xml:base="https://lahuman.github.io/20210829/">&lt;h1 id=&quot;요즘-잔나비의-노래에-빠져있습니다&quot;&gt;요즘 잔나비의 노래에 빠져있습니다.&lt;/h1&gt;

&lt;p&gt;아내를 따라 듣기 시작한 가수인데, 가사가 매력적이고 목소리도 너무 좋네요.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/watch?v=SJUWooZnfVQ&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;가사를 곱씹으며 일요일을 마무리 합니다.&lt;/p&gt;

&lt;h2 id=&quot;가사&quot;&gt;가사&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;해가 뜨고 다시 지는 것에
연연하였던 나의 작은방
텅 빈 마음 노랠 불러봤자
누군가에겐 소음일 테니
꼭 다문 입 그 새로 삐져나온
보잘것없는 나의 한숨에
나 들으라고 내쉰 숨이 더냐
아버지 내게 물으시고
제 발 저려 난 답할 수 없었네

우리는 우리는
어째서
어른이 된 걸까
하루하루가
참 무거운 짐이야
더는 못 갈 거야

꿈과 책과 힘과 벽 사이를
눈치 보기에 바쁜 나날들
소년이여 야망을 가져라
무책임한 격언 따위에
저 바다를 호령하는 거야
어처구니없던 나의 어린 꿈
가질 수 없음을 알게 되던 날
두드러기처럼 돋은 심술이
끝내 그 이름 더럽히고 말았네

우리는 우리는
어째서
어른이 된 걸까
하루하루가
참 무거운 짐이야
더는 못 간대두

멈춰 선 남겨진
날 보면
어떤 맘이 들까
하루하루가
참 무서운 밤인 걸
잘도 버티는 넌

하루하루가
참 무서운 밤인 걸

자고 나면 괜찮아질 거야
하루는 더 어른이 될 테니
무덤덤한 그 눈빛을 기억해
어릴 적 본 그들의 눈을
우린 조금씩 닮아야 할 거야

소스: Musixmatch

작사: 김도형 / 유영현 / 최정훈
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><category term="단상" /><summary type="html">잔나비 노래에 빠져있다.</summary></entry><entry><title type="html">Google Cloud 서비스 계정으로 Google API 사용하기</title><link href="https://lahuman.github.io/googleapis/" rel="alternate" type="text/html" title="Google Cloud 서비스 계정으로 Google API 사용하기" /><published>2021-08-19T00:00:00+09:00</published><updated>2021-08-19T00:00:00+09:00</updated><id>https://lahuman.github.io/googleapis</id><content type="html" xml:base="https://lahuman.github.io/googleapis/">&lt;h1 id=&quot;google-cloud-서비스-계정으로-google-api-사용하기&quot;&gt;Google Cloud 서비스 계정으로 Google API 사용하기&lt;/h1&gt;

&lt;p&gt;Google Sheet API를 사용하기 위해서 Google cloud console에서 서비스 계정을 만들어 진행하는 과정을 정리합니다.&lt;/p&gt;

&lt;h2 id=&quot;준비-사항&quot;&gt;준비 사항&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://console.cloud.google.com/&quot;&gt;Google cloud console&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;google-cloud-console-에서-프로젝트--서비스-계정-생성-처리&quot;&gt;&lt;a href=&quot;https://console.cloud.google.com/&quot;&gt;Google cloud console&lt;/a&gt; 에서 프로젝트 &amp;amp; 서비스 계정 생성 처리&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Project&lt;/code&gt; 생성&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT MENU&lt;/code&gt; » &lt;code class=&quot;highlighter-rouge&quot;&gt;APIs &amp;amp; Services&lt;/code&gt; 선택&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ENABLE APIS AND SERVICES.&lt;/code&gt; 클릭&lt;/li&gt;
  &lt;li&gt;API 항목에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Sheets API&lt;/code&gt; 활성화 처리&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LEFT MENU&lt;/code&gt; »  &lt;code class=&quot;highlighter-rouge&quot;&gt;APIs &amp;amp; Services&lt;/code&gt; » &lt;code class=&quot;highlighter-rouge&quot;&gt;Credentials&lt;/code&gt; » &lt;code class=&quot;highlighter-rouge&quot;&gt;Manage service accounts&lt;/code&gt; » &lt;code class=&quot;highlighter-rouge&quot;&gt;Create Service Accounts&lt;/code&gt; 선택&lt;/li&gt;
  &lt;li&gt;계정 정보 입력 후 계정 생성 완료(2, 3 단계는 옵션이라 그냥 완료 하면 됩니다.)&lt;/li&gt;
  &lt;li&gt;생성된 계정(email) 정보 클릭 » &lt;code class=&quot;highlighter-rouge&quot;&gt;KEYS&lt;/code&gt; 선택&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ADD KEY&lt;/code&gt; » &lt;code class=&quot;highlighter-rouge&quot;&gt;Create new key&lt;/code&gt; 선택&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; TYPE 선택 하여 파일 다운로드&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;첨부된 파일의 형태는 아래와 같습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;type&quot;: &quot;service_account&quot;,
  &quot;project_id&quot;: &quot;keen-clarity-323809&quot;,
  &quot;private_key_id&quot;: &quot;cd53576f5c47b2b654605c8a7528cabd87bdee93&quot;,
  &quot;private_key&quot;: &quot;-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQClhKfQF6zmI34T\nuetB4vZullnrXI65fkH1/YusnE/uU1rzmWPNarBqhbxzGeSJf0xedVvSW4cNavkG\nDHu3+inlbbieX9xh++2lNGpYwA5BsXPA3xD1lcaWyc71gk6V6kVtHJMFSocLCYZ/\nDCvGfYEcCiZRsrro1M6AuGy6Nug1qld7utCHJY8OwBp/KLyCmpmhXZE5qim8eul/\nLssM2QizCVxegXS3sH6BCUBZOJVVFXvfNveXc23TWvBQJP85/vaJARjVOJeNJbFQ\nObPOdvEo9RYEfmkrIaaFq/natGP/buBYLdPNnS6+x+6fKRyT5rm1q5LUrpyYKadi\nl40HJFNNAgMBAAECggEAHScTQ5SX8GT59NF/PTiTfQDgT5Ma1FMHnSMOMdXKQkjO\nMS+oI2sSLYDmo0NBPHJ+afiztoZGcDeSKt2SAOJ/9Jfxt3tc3qk3vyxPOtiA6lMt\n9x+S5h5+PtrGp/lOjBsaJVCuGHV6+Zew57mmECzUy7KB80vOnem1gXh6NgYruh/A\ntOATcB7BVk7DEDu7mUAM4BPBWb946WeCUr1L4ZD5VM8YdLAydTCGL39/6TKIDAGl\njDEe+x9IK6DTjm0JHsY9orTDzBLzMCRulOLeAIFzZxpnUnihafk/IQ9+l8SH+rkM\nc/008CMOnUpySLx6wwdCvz+TOhucW1a2RfbGYFUExQKBgQDivirN1jvMzzyQIu8U\nzaNsNPVNIMktLSUNzQEnZsMUGXBUfnAszi3OAHY6NYSEJjYMBFThIvuHqhZCUStV\nNPFTzuHx6mg5Oi4QQC8iW/x9mbeQNBsTiY/nZomgnVS8Kko2SKmINxOf1WkGFcyV\nKk+porKTIkW/m7AEsYLzby07wwKBgQC64BkyQib1sxS1hMVhP3l+A+m7OdbWLDDO\nDRJpxHNZW/Svs1egSF2wNqPZFKJ/LHwAPKxNaBCnfQMjxweDY9VzKBIwXl3boJ7m\nvRulzFsBTwRtYG9QKXYLRhvyZRHFs12XV3KISAy5X+kWG7JeZOj4jeAr0N0Qun6F\n9M+THYMTrwKBgAWTv+HIPzhOcKLq+Q598GMc+lunTst5rMumGz0o3euEpKqvYXr4\np0/F2yKbZmMJvZKWGLBg9+biXCHNdU9nOfhhwlT8+wtNTwy/R2mE8bT1LvqxDWlx\nnMSIVSJKPGdUcvba2rCrCiSIT0kDCEEzBTqa8eGEmkqYPcAfzaTHO0mZAoGADGJD\naTA3ErsuWSUWS26AZ5hsycp4cTL2fQEiwj2Rg09ztJ0G5olFJCNK0lzqs9DH2uAq\nburBh8fiCGHtHojkIUB7jBcE00Qeo53OkjsroLeSzIjCd6Z3uyGHQpXuCpLrVdcm\nsN9NcI9pi9yEAntfcPE99MlfjPc+4TOq+c3P3OMCgYB6YFCFBNpPdYqc8EkQ8OUc\nA2MDWRcCW9oKYvu2zvDLjq9zkznUMcW5PaPql1nIEfNW9LNzn/Bc3nSQ1iHaulGZ\nZjaCKdD6pftkMYC73FWIZXIsvmyC8T7TvRvFppdBHjPcSurOJi6ot74MHKhFudm6\nezS2Wh+8ABQ+ucrWUxpMOw==\n-----END PRIVATE KEY-----\n&quot;,
  &quot;client_email&quot;: &quot;sheetapi@keen-clarity-323809.iam.gserviceaccount.com&quot;,
  &quot;client_id&quot;: &quot;114733049967179666126&quot;,
  &quot;auth_uri&quot;: &quot;https://accounts.google.com/o/oauth2/auth&quot;,
  &quot;token_uri&quot;: &quot;https://oauth2.googleapis.com/token&quot;,
  &quot;auth_provider_x509_cert_url&quot;: &quot;https://www.googleapis.com/oauth2/v1/certs&quot;,
  &quot;client_x509_cert_url&quot;: &quot;https://www.googleapis.com/robot/v1/metadata/x509/sheetapi%40keen-clarity-323809.iam.gserviceaccount.com&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;동영상으로-따라-하기&quot;&gt;동영상으로 따라 하기&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/pb4t5tKXe7E&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;읽거나-쓰려는-sheet에-권한-부여-하기&quot;&gt;읽거나 쓰려는 sheet에 권한 부여 하기&lt;/h3&gt;

&lt;p&gt;Google sheet에서 Share 버튼을 누른 이후, 생성한 서비스 계정에 READ/WRITE 권한을 부여 해야됩니다.&lt;/p&gt;

&lt;h2 id=&quot;sheet-글-읽기&quot;&gt;sheet 글 읽기&lt;/h2&gt;

&lt;p&gt;다음 라이브러리를 설치 해야 합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install –save googleapis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sheet-읽고-쓰는-예제-코드&quot;&gt;sheet 읽고 쓰는 예제 코드&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import { google, Auth } from 'googleapis';
class SheetApi {
    auth: Auth.GoogleAuth = new google.auth.GoogleAuth({
        keyFile: &quot;credentials.json&quot;, //the key file
        //url to spreadsheets API
        scopes: &quot;https://www.googleapis.com/auth/spreadsheets&quot;,
    });
    
    writeSheet() {
        //Auth client Object
        const authClientObject = await this.auth.getClient();
        //Google sheets instance
        const googleSheetsInstance = google.sheets({ version: &quot;v4&quot;, auth: authClientObject });
        const spreadsheetId = &quot;sheetId&quot;;

        //write data into the google sheets
        await googleSheetsInstance.spreadsheets.values.append({
            auth, //auth object
            spreadsheetId, //spreadsheet id
            range: &quot;Sheet1!A:B&quot;, //sheet name and range of cells
            valueInputOption: &quot;USER_ENTERED&quot;, // The information will be passed according to what the usere passes in as date, number or text
            resource: {
                values: [[&quot;첫번째 A 열 데이터&quot;, &quot;1열 B열&quot;], [&quot;두번째 A 열 데이터&quot;, &quot;2열 B열&quot;]],
            },
        });
    }

    readSheet() {
        //Auth client Object
        const authClientObject = await this.auth.getClient();
        //Google sheets instance
        const googleSheetsInstance = google.sheets({ version: &quot;v4&quot;, auth: authClientObject });
        const spreadsheetId = &quot;sheetId&quot;;

        //Read front the spreadsheet
        const { data: { values } } = await googleSheetsInstance.spreadsheets.values.get({
            auth: this.auth, //auth object
            spreadsheetId, // spreadsheet id
            range: &quot;DATA!A:B&quot;, //range of cells to read from.
        });

        return values;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.section.io/engineering-education/google-sheets-api-in-nodejs/&quot;&gt;Getting Started with Google Sheets API in Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="google" /><category term="sheet" /><summary type="html">Google Cloud 서비스 계정 생성 부터 sheet API를 활용한 조회 처리</summary></entry><entry><title type="html">onPaste contentEditable 을 이용한 이미지 붙여 넣기 처리</title><link href="https://lahuman.github.io/onPaste_contentEditable/" rel="alternate" type="text/html" title="onPaste contentEditable 을 이용한 이미지 붙여 넣기 처리" /><published>2021-08-08T00:00:00+09:00</published><updated>2021-08-08T00:00:00+09:00</updated><id>https://lahuman.github.io/onPaste_contentEditable</id><content type="html" xml:base="https://lahuman.github.io/onPaste_contentEditable/">&lt;h1 id=&quot;onpaste-contenteditable-을-이용한-이미지-붙여-넣기-처리&quot;&gt;onPaste contentEditable 을 이용한 이미지 붙여 넣기 처리&lt;/h1&gt;

&lt;p&gt;페이스북 댓글창에서 클립보드에 저장(Ctrl+C) 된 이미지를 붙여넣기(Ctrl+V)를 하면, 이미지가 업로드 되는 것을 확인 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;이를 구현 하기 위해서는 우선 다음 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/onpaste&quot;&gt;HTMLElement.onpaste&lt;/a&gt; 이벤트에 대하여 알아야합니다.&lt;/p&gt;

&lt;p&gt;간단하게 요약하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;붙여넣기를 처리&lt;/code&gt;할때 호출되는 이벤트 인데요. 붙여넣는 이벤트에서 이미지일 경우 업로드 처리를 하면 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;구현하기&quot;&gt;구현하기&lt;/h2&gt;

&lt;p&gt;구현은 React.js기반으로 구현 하였습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import React from &quot;react&quot;;
import axios from &quot;axios&quot;;
import MockAdapter from &quot;axios-mock-adapter&quot;;
import &quot;./styles.css&quot;;

// 서버 없이 테스트를 위해서 axios-mock-adapter 사용
const mock = new MockAdapter(axios);
mock.onPost(&quot;/fileupload&quot;).reply(200, {
  seq: 1
});

// 원래 소스는 `&amp;lt;img src=&quot;/download/${seq}&quot; width=&quot;100%&quot;/&amp;gt;`;
const buildImageHtml = (seq) =&amp;gt;
  `&amp;lt;img src=&quot;https://lahuman.github.io/assets/img/logo.png&quot; width=&quot;100%&quot;/&amp;gt;`;

export default function App() {
  const comment = React.useRef();

  const fileUpload = async (blob) =&amp;gt; {
    const formData = new FormData();
    formData.append(&quot;file&quot;, blob);
    const { data: fileInfo } = await axios.post(`/fileupload`, formData);
    return fileInfo;
  };

  const focusMoveWithFile = () =&amp;gt; {
    comment.current.focus();
    if (
      typeof window.getSelection !== &quot;undefined&quot; &amp;amp;&amp;amp;
      typeof document.createRange !== &quot;undefined&quot;
    ) {
      const range = document.createRange();
      range.selectNodeContents(comment.current);
      range.collapse(false);
      const sel = window.getSelection();
      if (!sel) return;
      sel.removeAllRanges();
      sel.addRange(range);
    }
  };

  return (
    &amp;lt;div
      ref={comment}
      contentEditable=&quot;true&quot;
      className=&quot;comment&quot;
      suppressContentEditableWarning
      onPaste={async (event) =&amp;gt; {
        // event.preventDefault(); 이 없을 경우 upload와 상관 없이 이미지가 붙음
        event.preventDefault();
        const item = event.clipboardData.items[0];
        if (item.type.indexOf(&quot;image&quot;) === 0) {
          const blob = item.getAsFile();
          const { seq } = await fileUpload(blob);
          const text = `${comment.current.innerHTML}${buildImageHtml(seq)}`;
          comment.current.innerHTML = text;
          focusMoveWithFile();
        } else {
          // 이미지가 아닐 경우 text로 처리 
          const paste = event.clipboardData.getData(&quot;text&quot;);
          if (paste) {
            const selection = window.getSelection();
            if (!selection) return;
            if (selection &amp;amp;&amp;amp; !selection.rangeCount) return;
            selection?.deleteFromDocument();
            selection?.getRangeAt(0).insertNode(document.createTextNode(paste));
          }
        }
      }}
      placeholder=&quot;글을 작성해주세요 (글 작성 꿀팁 : 여기에 이미지를 Ctrl+C, Ctrl+V로 바로 붙여넣기 할 수 있어요!)&quot;
    /&amp;gt;
  );
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;예제-바로가기&quot;&gt;&lt;a href=&quot;https://codesandbox.io/s/comment-with-image-upload-tewvt?file=/src/App.js:0-2089&quot;&gt;예제 바로가기&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;기능은 생각보다 어렵지 않았고 재미있었다.&lt;/p&gt;

&lt;h2 id=&quot;참고자료&quot;&gt;참고자료&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/onpaste&quot;&gt;HTMLElement.onpaste&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="onpaste" /><category term="contentEditable" /><summary type="html">클립보드의 이미지를 업로드 후 화면 표기 처리</summary></entry></feed>
