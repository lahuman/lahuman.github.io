<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator>
<link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" />
<link href="https://lahuman.github.io/" rel="alternate" type="text/html" />
<updated>2017-03-17T10:04:38+09:00</updated>
<id>https://lahuman.github.io/</id>
<subtitle>열심히 사는 아저씨</subtitle>
<entry>
<title>Maven-site-plugin 사용법</title>
<link href="https://lahuman.github.io/how-to-use-maven-site-plugin/" rel="alternate" type="text/html" title="Maven-site-plugin 사용법" />
<published>2017-03-17T00:00:00+09:00</published>
<updated>2017-03-17T00:00:00+09:00</updated>
<id>https://lahuman.github.io/how-to-use-maven-site-plugin</id>
<content type="html" xml:base="https://lahuman.github.io/how-to-use-maven-site-plugin/">&lt;h1 id=&quot;apache-maven-site-plugin&quot;&gt;Apache Maven Site Plugin&lt;/h1&gt;
&lt;p&gt;Site 플러그인은 프로젝트의 사이트를 생성하는데 사용된다. 또한 프로젝트 POM 에 대한 설정에 대한 리포트를 만들어 준다.
현재 Maven-site-plugin 의 버젼은 3이며, &lt;a href=&quot;https://maven.apache.org/plugins-archives/maven-site-plugin-2.4/index.html&quot;&gt;maven&lt;/a&gt; 2.2.1이 필요하다.&lt;/p&gt;

&lt;h1 id=&quot;httpsmavenapacheorgpluginsmaven-site-pluginusagehtml&quot;&gt;&lt;a href=&quot;https://maven.apache.org/plugins/maven-site-plugin/usage.html&quot;&gt;사용법&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;먼저 사용하려는 프로젝트는 Maven 프로젝트이어야 하며, pom.xml에 maven-site-plugin과 maven-project-info-reports-plugin을 추가 해야 한다.&lt;/p&gt;

&lt;p&gt;이후, &lt;reporting&gt; XML 설정을 아래 와 같이 추가 하면 된다.&lt;/reporting&gt;&lt;/p&gt;

&lt;h2 id=&quot;pomxml-&quot;&gt;pom.xml 설정&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&amp;gt;&lt;/span&gt;
  ...
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;pluginManagement&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-site-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.6&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-project-info-reports-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.9&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pluginManagement&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;reporting&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-project-info-reports-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.9&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/reporting&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;사이트 생성&lt;/h2&gt;
&lt;p&gt;프로젝트 사이트와 리포트를 생성하는 명령어는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&amp;gt; &lt;/span&gt;mvn site
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;위의 명령은 기본적으로 &lt;kbd&gt;/target/site/&lt;/kbd&gt; 디렉토리에 결과를 저장한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pom.xml 에서 maven-site-plugin 설정을 하지 않으면 오류가 난다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;section-1&quot;&gt;출처&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://maven.apache.org/plugins/maven-site-plugin/&quot;&gt;https://maven.apache.org/plugins/maven-site-plugin/&lt;/a&gt;&lt;/p&gt;
</content>
<category term="Maven-site-plugin" />
<summary>MAVEN reporting</summary>
</entry>
<entry>
<title>예시) WEB 개발자 모집 공고</title>
<link href="https://lahuman.github.io/20160316-recruiting-info/" rel="alternate" type="text/html" title="예시) WEB 개발자 모집 공고" />
<published>2017-03-16T00:00:00+09:00</published>
<updated>2017-03-16T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160316-recruiting-info</id>
<content type="html" xml:base="https://lahuman.github.io/20160316-recruiting-info/">&lt;h1 id=&quot;web---&quot;&gt;예시) WEB 개발자 모집 공고&lt;/h1&gt;

&lt;p&gt;얼마전 팀원분의 요청으로 WEB 개발자 모집 공고를 작성하였다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;적당히 여기 저기서 긁어 모아서 읽어본 후, 정리를 하였는데 읽어 보면 그럴듯 하다.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;[수행업무]&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;관제 업무 시스템과 솔루션 개발을 진행&lt;/li&gt;
  &lt;li&gt;추가 개발은 dhtmlx와 spring framework를 이용하여 개발 예정&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;주요 업무
    &lt;ul&gt;
      &lt;li&gt;보안 솔루션 관련 개발 업무&lt;/li&gt;
      &lt;li&gt;SPA 기반의 UI 개발&lt;/li&gt;
      &lt;li&gt;REST API 및 외부시스템 연동&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;직무 자격요건
    &lt;ul&gt;
      &lt;li&gt;해당 분야 3년 이상의 경험 또는 그에 준하는 능력&lt;/li&gt;
      &lt;li&gt;소스관리(Svn/Gif/…)에 대한 이해/경험&lt;/li&gt;
      &lt;li&gt;성능 튜닝 경험&lt;/li&gt;
      &lt;li&gt;다양한 환경을 고려한 개발 경험&lt;/li&gt;
      &lt;li&gt;Java/Spring/ORM 기술 기반에서의 API/Back-end 개발에 대한 익숙함&lt;/li&gt;
      &lt;li&gt;Data Modeling 경험&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-1&quot;&gt;[자격 요건]&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;학력 : 무관&lt;/li&gt;
  &lt;li&gt;경력 : 관련경력 3년 이상&lt;/li&gt;
  &lt;li&gt;사용기술 : javascript, java, spring, dhtmlx, maven, gulp 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-2&quot;&gt;[공통 자격요건]&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;팀원과 깊은 신뢰를 형셩/유지해 나가는데 노력을 아끼지 않으시는 분&lt;/li&gt;
  &lt;li&gt;구성원이 이끌어 나가는 팀 문화를 만들 분&lt;/li&gt;
  &lt;li&gt;새로운 것, 모르는 것을 두려워 하지 않으며 배운 것을 공유하는 것을 즐기시는 분&lt;/li&gt;
  &lt;li&gt;자기개발에 노력을 기울이고 팀원들과 같이 성장해 나가실 분&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-3&quot;&gt;[우대사항]&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;자료구조/알고리즘/디자인패턴/리팩토링에 대한 깊은 이해와 활동 경험&lt;/li&gt;
  &lt;li&gt;Full-stack 개발 경험&lt;/li&gt;
  &lt;li&gt;CI 적용 및 테스트 자동화 경험&lt;/li&gt;
  &lt;li&gt;오픈 소스 발전에 이바지한 경험&lt;/li&gt;
&lt;/ul&gt;
</content>
<category term="모집공고" />
<category term="예시" />
<summary>모집공고 예시</summary>
</entry>
<entry>
<title>[2016.03.15] 단상 - 손글씨</title>
<link href="https://lahuman.github.io/20160315-phase/" rel="alternate" type="text/html" title="[2016.03.15] 단상 - 손글씨" />
<published>2017-03-15T00:00:00+09:00</published>
<updated>2017-03-15T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160315-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160315-phase/">&lt;h1 id=&quot;section&quot;&gt;손글씨&lt;/h1&gt;

&lt;p&gt;나는 악필이다. 그래서 글씨를 잘쓰는 사람이 많이 부럽다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;또 그림을 잘 그리는 사람도 부럽다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;악필인 이유는 성격 때문이라고 생각한다. 급한 마음에 빠르게 휘갈겨 놓은 내 글씨를 보면, 내가 작성한 코드와 같다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;{% highlight text %}
적당하게 일하고 좀 더 느긋하게 쉬어라. 
현명한 사람은 느긋하게 인생을 보냄으로써 진정한 행복을 누리는 것이다. 
- 그라시안
{% endhighlight %}&lt;/p&gt;

&lt;p class=&quot;image-right&quot;&gt;&lt;img src=&quot;https://lahuman.github.io/assets/img/phase/handwrite.jpg&quot; alt=&quot;Hand Write&quot; /&gt;&lt;/p&gt;

</content>
<category term="단상" />
<summary>단상</summary>
</entry>
<entry>
<title>[2016.03.13] 육아 - 아이와 함께 자라기</title>
<link href="https://lahuman.github.io/20160313-phase/" rel="alternate" type="text/html" title="[2016.03.13] 육아 - 아이와 함께 자라기" />
<published>2017-03-13T00:00:00+09:00</published>
<updated>2017-03-13T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160313-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160313-phase/">&lt;h1 id=&quot;section&quot;&gt;아이와 함께 자라기&lt;/h1&gt;

&lt;p&gt;육아를 시작 하면서 많은 것을 포기한다고 생각하고, 아이와 놀아준다는 것은 쉽지 않다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;관점을 조금만 바꾸면 아이와 함께 생각하고, 아이와 함께 노는 것은 즐거워 질수 있다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;나는 아직 어른이 아니다. 아이와 함께 고민하고 성장 하도록 노력하자.&lt;br /&gt;&lt;/p&gt;

</content>
<category term="육아" />
<summary>육아</summary>
</entry>
<entry>
<title>[JAVASCRIPT] - 주소창의 parameter 제거</title>
<link href="https://lahuman.github.io/javascript-remove-url-parameter/" rel="alternate" type="text/html" title="[JAVASCRIPT] - 주소창의 parameter 제거" />
<published>2017-03-09T00:00:00+09:00</published>
<updated>2017-03-09T00:00:00+09:00</updated>
<id>https://lahuman.github.io/javascript-remove-url-parameter</id>
<content type="html" xml:base="https://lahuman.github.io/javascript-remove-url-parameter/">&lt;h1 id=&quot;javascript----parameter-&quot;&gt;[JAVASCRIPT] - 주소창의 parameter 제거&lt;/h1&gt;

&lt;p&gt;보통은 주소창에 parameter 값이 다음과 같이 표출된다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://lahuman.github.io/posts/?lang=ko&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;이때 해당 주소에서 parameter 값만 제거 하고 싶을 경우 다음의 스크립트를 이용하면 간단히 처리 할 수 있다.&lt;/p&gt;

&lt;p&gt;{% highlight javascript %}
history.replaceState({}, null, location.pathname);
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;parameter가 제거된 값은 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://lahuman.github.io/posts/&lt;/code&gt;&lt;/p&gt;

</content>
<category term="javascript" />
<category term="parameter" />
<summary>주소창의 parameter 제거</summary>
</entry>
<entry>
<title>[2016.03.08] 기초 - 병렬 처리 용어 설명</title>
<link href="https://lahuman.github.io/20160308-phase/" rel="alternate" type="text/html" title="[2016.03.08] 기초 - 병렬 처리 용어 설명" />
<published>2017-03-08T00:00:00+09:00</published>
<updated>2017-03-08T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160308-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160308-phase/">&lt;h1 id=&quot;section&quot;&gt;병렬 처리 용어 설명&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;다중 프로그래밍(Multi Programming)
    &lt;ul&gt;
      &lt;li&gt;배치 처리 방식에서 CPU 처리시간을 낭비하지 않고 사용하기 위해 한 프로그램이 입출력을 시작하여 끝나기를 기다리는 동안, 계산 수행이 필요한 다른 프로그램을 실행하는 방법&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다중 프로세싱(Multi Processing)
    &lt;ul&gt;
      &lt;li&gt;두 개 이상의 프로세서로 구성되어 동시에 여러 개의 작업을 처리할 수 있는 시스템&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;선점(Preemption)
    &lt;ul&gt;
      &lt;li&gt;클라이언트를 서비스하는 도중 일시 중지시키고 다른 클라이언트를 서비스하는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;명령어 수준 병렬(ILP) 구조
    &lt;ul&gt;
      &lt;li&gt;하나의 프로그램을 구성하는 명령을 병렬 실행할 수 있도록 하는 프로세서 구조&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;공유 메모리 구조
    &lt;ul&gt;
      &lt;li&gt;모든 처리 노드들이 전체 주소 공간을 공유하며 직접 접근할 수 있는 구조&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분산 메모리 구조
    &lt;ul&gt;
      &lt;li&gt;각 처리노드가 독자적인 주소 공간을 가지며, 다른 노드의 기억 장치에 접근하기 위해서는 정해진 절차와 방법에 따라야 하는 구조&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</content>
<category term="용어설명" />
<summary>용어설명</summary>
</entry>
<entry>
<title>Redis 설치 및 Cluster 구성</title>
<link href="https://lahuman.github.io/redis-cluster-install/" rel="alternate" type="text/html" title="Redis 설치 및 Cluster 구성" />
<published>2017-03-06T00:00:00+09:00</published>
<updated>2017-03-06T00:00:00+09:00</updated>
<id>https://lahuman.github.io/redis-cluster-install</id>
<content type="html" xml:base="https://lahuman.github.io/redis-cluster-install/">&lt;h1 id=&quot;redis---cluster-&quot;&gt;Redis 설치 및 Cluster 구성&lt;/h1&gt;

&lt;h2 id=&quot;section&quot;&gt;1. 계정을 생성 한다.&lt;/h2&gt;

&lt;p&gt;{% highlight bash %}
$&amp;gt; adduser redis
{% endhighlight %}&lt;/p&gt;

&lt;h2 id=&quot;open-file---limit--&quot;&gt;2. open file 갯수에 대한 Limit 을 변경한다.&lt;/h2&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; vi /etc/security/limits.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis soft nofile 65535
redis hard nofile 65535
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;3. 메모리 스와핑을 최소로 사용하도록 설정을 한다.&lt;/h2&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; sysctl -w vm.swappiness=1&lt;/p&gt;

&lt;p&gt;이후 재기동 이후 반영을 위해&lt;/p&gt;

&lt;p&gt;$&amp;gt;vi /etc/sysctl.conf 
    vm.swappiness=1&lt;/p&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;4. 메모리를 다 사용해도 충분한 메모리가 있는 것처럼 처리 한다.&lt;/h2&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; sysctl -w vm.overcommit_memory=1&lt;/p&gt;

&lt;p&gt;이후 재기동 이후 반영을 위해&lt;/p&gt;

&lt;p&gt;$&amp;gt; vi /etc/sysctl.conf
    vm.overcommit_memory=1 추가&lt;/p&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;5. 네트워크 연결 개수를 설정 한다.&lt;/h2&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; sysctl -w net.core.somaxconn=65535&lt;/p&gt;

&lt;p&gt;이후 재기동 이후 반영을 위해&lt;/p&gt;

&lt;p&gt;$&amp;gt; vi /etc/rc.local
    sysctl -w net.core.somaxconn=65535&lt;/p&gt;

&lt;p&gt;{% endhighlight %}&lt;/p&gt;

&lt;h2 id=&quot;system-hang----thp----&quot;&gt;6. System Hang 을 막기 위해 THP 사용 안하도록 설정 한다.&lt;/h2&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/enabled&lt;/p&gt;

&lt;p&gt;이후 재기동 이후 반영을 위해&lt;/p&gt;

&lt;p&gt;$&amp;gt; vi /etc/rc.local
    echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/enabled
{% endhighlight %}&lt;/p&gt;

&lt;h2 id=&quot;redis----redis--&quot;&gt;7. Redis 설치 - redis 계정으로 진행&lt;/h2&gt;
&lt;p&gt;{% highlight bash %}
# Source Download
$&amp;gt; wget http://download.redis.io/releases/redis-3.2.6.tar.gz
# 압축 헤제
$&amp;gt; tar xvzf redis-3.2.6.tar.gz
# 해제된 디렉토리 이동
$&amp;gt; cd redis-3.2.6
# 설치 진행
$&amp;gt; make&lt;/p&gt;

&lt;h1 id=&quot;section-4&quot;&gt;에러 발생시 다음 진행&lt;/h1&gt;
&lt;p&gt;$&amp;gt; yum install gcc-c++
$&amp;gt; make distclean
$&amp;gt; make&lt;/p&gt;

&lt;h1 id=&quot;usrlocalbin----root--&quot;&gt;/usr/local/bin에 실행 파일 복사됨, root 권한 필요&lt;/h1&gt;
&lt;p&gt;$&amp;gt; make install
{% endhighlight %}&lt;/p&gt;

&lt;h2 id=&quot;cluster-&quot;&gt;8. Cluster 구성&lt;/h2&gt;

&lt;h3 id=&quot;conf-file-&quot;&gt;8.1 Conf File 수정&lt;/h3&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; vi redis conf
    #원격 서버에서 접속 가능하게 설정하려면 no로 지정
    protected-mode no
    tcp-keepalive 60
    loglevel notice
    logfile “/var/log/redis/redis_5543.log”&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;daemonize yes
#포트 지정
port 5543
#bind 127.0.0.1를 주석 처리
# bind 127.0.0.1 
#비밀번호 지정
requirepass &amp;lt;password&amp;gt;
masterauth &amp;lt;password&amp;gt;
#yes로 설정시 클러스터 모드, no로 설정시 standalone 모드로 시작
cluster-enabled yes 
#클러스터의 상태를 기록하는 바이너리 파일 경로
cluster-config-file nodes_5543.conf 
#레디스 노드가 다운되었는지 판단하는 시간 단위는 millisecond.
cluster-node-timeout 3000 
#다운 시도 횟수 
cluster-slave-validity-factor 2 
#위치 지정
pidfile /var/run/redis/redis_5543.pid 
dbfilename dump-5543.rdb
# appendonly 는 변경시 해당 명령을 저장해 두었다가, 복구시 저장된 명령을 순서대로 실행하는 옵션
appendonly yes  {% endhighlight %}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;8.2 인스턴스 시작&lt;/h3&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt;  $REDIS_BIN/redis-server $REDIS_NODE_CONF/redis-${port}.conf&lt;/p&gt;

&lt;p&gt;#7000 ~ 7002 까지 인스턴스 실행 예
$&amp;gt; $REDIS_BIN/redis-server $REDIS_NODE_CONF/redis-7000.conf
$&amp;gt; $REDIS_BIN/redis-server $REDIS_NODE_CONF/redis-7001.conf
$&amp;gt; $REDIS_BIN/redis-server $REDIS_NODE_CONF/redis-7002.conf
{% endhighlight %}&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;8.3 인스턴스별 슬롯 할당&lt;/h3&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; redis-cli -c -h 124.66.185.75 -p 7000 -a &lt;password&gt; cluster addslots {0..5460}
$&amp;gt; redis-cli -c -h 124.66.185.75 -p 7001 -a &lt;password&gt; cluster addslots {5461..10922}
$&amp;gt; redis-cli -c -h 124.66.185.75 -p 7002 -a &lt;password&gt; cluster addslots {10923..16383}
{% endhighlight %}&lt;/password&gt;&lt;/password&gt;&lt;/password&gt;&lt;/p&gt;

&lt;h3 id=&quot;epoch-&quot;&gt;8.4 epoch 설정&lt;/h3&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; redis-cli -c -h 124.66.185.75 -p 7000 -a &lt;password&gt; cluster set-config-epoch 1
$&amp;gt; redis-cli -c -h 124.66.185.75 -p 7001 -a &lt;password&gt; cluster set-config-epoch 2
$&amp;gt; redis-cli -c -h 124.66.185.75 -p 7002 -a &lt;password&gt; cluster set-config-epoch 3
{% endhighlight %}&lt;/password&gt;&lt;/password&gt;&lt;/password&gt;&lt;/p&gt;

&lt;h3 id=&quot;meet-nodes&quot;&gt;8.5 meet nodes&lt;/h3&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; redis-cli -c -h 124.66.185.75 -p 7000 -a &lt;password&gt; cluster meet 124.66.185.75 7001
$&amp;gt; redis-cli -c -h 124.66.185.75 -p 7002 -a &lt;password&gt; cluster meet 124.66.185.75 7001
{% endhighlight %}&lt;/password&gt;&lt;/password&gt;&lt;/p&gt;

&lt;h3 id=&quot;salve-&quot;&gt;8.6 salve 추가&lt;/h3&gt;

&lt;h4 id=&quot;meet-slave-to-master&quot;&gt;8.6.1 meet slave to master&lt;/h4&gt;
&lt;p&gt;{% highlight bash %}
$&amp;gt; redis-cli -c -h 124.66.185.75 -p 7002 -a &lt;password&gt; cluster meet 124.66.185.71 6000
{% endhighlight %}&lt;/password&gt;&lt;/p&gt;

&lt;h4 id=&quot;regist-slave-to-master&quot;&gt;8.6.2 regist slave to master&lt;/h4&gt;
&lt;p&gt;{% highlight bash %}
#node-id 는 70002의 노드 ID 이어야 한다.
$&amp;gt; redis-cli -c -h 124.66.185.71 -p 6000 -a &lt;password&gt; cluster replicate &lt;node-id&gt;
{% endhighlight %}&lt;/node-id&gt;&lt;/password&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-7&quot;&gt;참고 자료&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.redisgate.com/redis/cluster/cluster_cmd_intro.php&quot;&gt;http://www.redisgate.com/redis/cluster/cluster_cmd_intro.php&lt;/a&gt; &lt;br /&gt;
&lt;a href=&quot;http://knight76.tistory.com/entry/redis-AOF-appendonlyfile&quot;&gt;http://knight76.tistory.com/entry/redis-AOF-appendonlyfile&lt;/a&gt; &lt;br /&gt;
&lt;a href=&quot;http://knight76.tistory.com/entry/redis-%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%84%A4%EC%A0%95-%EA%B4%80%EB%A0%A8-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94-%EC%BD%94%EB%93%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%98%A4%EB%B2%84%EC%BB%A4%EB%B0%8B-THP&quot;&gt;http://knight76.tistory.com/entry/redis-%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%84%A4%EC%A0%95-%EA%B4%80%EB%A0%A8-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94-%EC%BD%94%EB%93%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%98%A4%EB%B2%84%EC%BB%A4%EB%B0%8B-THP&lt;/a&gt; &lt;br /&gt;&lt;/p&gt;

</content>
<category term="Redis" />
<category term="install" />
<category term="cluster" />
<summary>레디스 설치 클러스터 구성</summary>
</entry>
<entry>
<title>[2016.03.06] 짧은 생각 - TDD</title>
<link href="https://lahuman.github.io/20160306-phase/" rel="alternate" type="text/html" title="[2016.03.06] 짧은 생각 - TDD" />
<published>2017-03-06T00:00:00+09:00</published>
<updated>2017-03-06T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160306-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160306-phase/">&lt;h1 id=&quot;tdd---test-driven-development&quot;&gt;TDD - Test Driven Development&lt;/h1&gt;

&lt;p&gt;테스트 주도 개발은 매우 짧은 개발 사이클을 반복하는 소프트웨어 개발 프로세스 중 하나이다. &lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;개발 순서는 다음과 같다.&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;새로운 함수를 정의하는 자동화된 테스트 케이스를 작성&lt;/li&gt;
  &lt;li&gt;케이스를 통과하기 위한 최소한의 양의 코드를 생성&lt;/li&gt;
  &lt;li&gt;새 코드를 표준에 맞도록 리팩토링&lt;/li&gt;
  &lt;li&gt;변경 사항 발생시 2~3 번을 반복&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;TDD를 활용한 개발을 해본적이 없다. 빨리 빨리라는 암시 때문인지 늘 만들기 바쁘고, 개발이 완료 하고 운영시에는 불안함을 감출수 없었다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;앞으론 TDD를 활용하기 위해 노력 해보자!&lt;/p&gt;

</content>
<category term="단상" />
<summary>단상</summary>
</entry>
<entry>
<title>[2016.03.03] 짧은 생각 - 개발 방법론</title>
<link href="https://lahuman.github.io/20160303-phase/" rel="alternate" type="text/html" title="[2016.03.03] 짧은 생각 - 개발 방법론" />
<published>2017-03-03T00:00:00+09:00</published>
<updated>2017-03-03T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160303-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160303-phase/">&lt;h1 id=&quot;section&quot;&gt;개발 방법론&lt;/h1&gt;

&lt;p&gt;많은 개발 방법론이 있지만, SI프로젝트에서 가장 많이 쓰이는 건 Waterfall Model(폭포수 개발 방법론)으로 불리는 방법을 사용한다. &lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;순서는 다음과 같다.&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;요구사항 분석&lt;/li&gt;
  &lt;li&gt;시스템&amp;amp;소프트웨어 아키텍처 설계&lt;/li&gt;
  &lt;li&gt;구현과 유닛 테스트&lt;/li&gt;
  &lt;li&gt;통합과 시스템 테스트&lt;/li&gt;
  &lt;li&gt;운영&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;해당 개발 방법론의 단점은 변경에 수행이 어렵다고 하지만, 실제 프로젝트에서의 변경은 매번 발생한다. &lt;br /&gt;
또한 변경에 따른 &lt;kbd&gt;재설계&lt;/kbd&gt;를 하는 게 아니라 구현 단계에서 땜빵을 한다.&lt;br /&gt;
이는 곧 기술 부채로 이어지고 운영시점이 되면 걷잡을수 없을 정도가 되고 만다.&lt;/p&gt;

&lt;p&gt;CBD(Component Based Development)방법론을 따르는 프로젝트에서도 일해 보았지만 Waterfall Model과 다른건 산출물뿐이었다.&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;일정에 쫓기게 되어 급하게 개발 하고 늘 후회하였다.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
<category term="단상" />
<summary>단상</summary>
</entry>
<entry>
<title>[2016.03.01] 짧은 생각 - 소프트웨어 공학</title>
<link href="https://lahuman.github.io/20160301-phase/" rel="alternate" type="text/html" title="[2016.03.01] 짧은 생각 - 소프트웨어 공학" />
<published>2017-03-01T00:00:00+09:00</published>
<updated>2017-03-01T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160301-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160301-phase/">&lt;h1 id=&quot;section&quot;&gt;소프트웨어 공학 이란&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;소프트웨어 공학은 소프트웨어 생산의 모든 관점을 다루는 공학 분야이다.&lt;/li&gt;
  &lt;li&gt;소프트웨어는 프로그램과 관련 문서 및 실행에 필요한 데이터를 포함한다.&lt;/li&gt;
  &lt;li&gt;좋은 소프트웨어 제품이 되기 위해서는 유지보수성, 신뢰성(dependability), 보안성, 효율성 및 수용성(acceptability)이 보장되어야 한다.&lt;/li&gt;
  &lt;li&gt;소프트웨어 프로세스는 소프트웨어 개발과 관련한 모든 활동을 포함하며 기본적으로 명세, 개발, 검증(validation)과 진화 (evolution)로 이루어진다.&lt;/li&gt;
  &lt;li&gt;시스템의 유형에 따라 개발에 사용되는 도구와 기술이 달라질 수 있다.&lt;/li&gt;
  &lt;li&gt;소프트웨어공학의 기본 개념은 모든 유형의 소프트웨어 시스템에 적용될 수 있다.&lt;/li&gt;
  &lt;li&gt;소프트웨어 엔지니어는 기술적 책무 외에도 윤리적 책임의식을 가져야 한다.&lt;/li&gt;
&lt;/ul&gt;

</content>
<category term="단상" />
<summary>단상</summary>
</entry>
</feed>
