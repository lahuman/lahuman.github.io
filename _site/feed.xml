<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator>
<link href="https://lahuman.github.io/feed.xml" rel="self" type="application/atom+xml" />
<link href="https://lahuman.github.io/" rel="alternate" type="text/html" />
<updated>2017-05-08T09:33:56+09:00</updated>
<id>https://lahuman.github.io/</id>
<subtitle>열심히 사는 아저씨</subtitle>
<entry>
<title>[2017-05-08]단상 - 도박사의 오류</title>
<link href="https://lahuman.github.io/20160508-phase/" rel="alternate" type="text/html" title="[2017-05-08]단상 - 도박사의 오류" />
<published>2017-05-08T00:00:00+09:00</published>
<updated>2017-05-08T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160508-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160508-phase/">&lt;h1 id=&quot;section&quot;&gt;도박사의 오류&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;도박사의 오류(賭博師─誤謬)&lt;/strong&gt;는 서로 독립적으로 일어나는 확률적 사건이 서로 확률에 영향을 미친다는 착각에서 기인한 논리적 오류로, 도박사들이 성격의 특성상 앞에서 일어난 사건과 그 뒤에 일어날 사건이 서로 독립되어 있다는 확률 이론의 가정을 받아들이지 않기 때문에 ‘도박사의 오류’라고 한다&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;큰 예로, &lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;동전을 던져서 앞면이 5회 나오면 그 다음은 뒷면이 나올 확률이 높아질 것으로 착각&lt;/li&gt;
  &lt;li&gt;윶을 던져서 도, 개, 걸만 계속 나오면 그 다음은 윶이 나올 확률이 높아질 것으로 착각&lt;/li&gt;
  &lt;li&gt;주사위를 던져 2가 5번 연속으로 나오면 그 뒤에 던질때는 다시 2가 나올 확률이 낮아진다는 착각&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이와 같은 착각들은 꼭 도박이 아니라도 일어난다. &lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;확률에 목매지 말고, 확실하게 만들자.&lt;/h2&gt;

&lt;h2 id=&quot;section-2&quot;&gt;출처&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%8F%84%EB%B0%95%EC%82%AC%EC%9D%98_%EC%98%A4%EB%A5%98&quot;&gt;도박사의 오류&lt;/a&gt;&lt;/p&gt;
</content>
<category term="단상" />
<summary>독립적으로 일어나는 확률적 사건이 서로 확률에 영향을 미친다는 착각</summary>
</entry>
<entry>
<title>[2017-05-04]단상 - 연휴</title>
<link href="https://lahuman.github.io/20160504-phase/" rel="alternate" type="text/html" title="[2017-05-04]단상 - 연휴" />
<published>2017-05-04T00:00:00+09:00</published>
<updated>2017-05-04T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160504-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160504-phase/">&lt;h1 id=&quot;section&quot;&gt;긴 연휴동안 생각도 마음도 정리 하다.&lt;/h1&gt;

&lt;p&gt;긴 연휴동안 생각과 마음을 정리 하였다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;가족과 즐거운 시간을 보내기도 하고, 아내와 오랜만에 데이트를 하기도 하였다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;가족과 함께 하는 시간이 길어지니, 마음이 안정되고 생각이 깊어 진다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;모든 일에 적당한 휴식은 꼭 필요 하다.&lt;/h2&gt;
</content>
<category term="단상" />
<summary>긴 연휴동안 오랜만에 느끼는 행복</summary>
</entry>
<entry>
<title>[2017-04-27]단상 - 인성</title>
<link href="https://lahuman.github.io/20160427-phase/" rel="alternate" type="text/html" title="[2017-04-27]단상 - 인성" />
<published>2017-04-27T00:00:00+09:00</published>
<updated>2017-04-27T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160427-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160427-phase/">&lt;h1 id=&quot;section&quot;&gt;실력도 중요 하지만 인성이 더 중요 하다.&lt;/h1&gt;

&lt;p&gt;회사 생활을 오래 하게 되면 직급도 오르고 아래 사람을 평가 하거나 지시 할 수 있는 힘을 가지게 된다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;군대와 비슷하게 회사 생활에서도 힘을 가진 상급자가 하급자를 함부로 대하거나 할 수 있다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이건 기본적인 인성의 문제라고 생각 한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;머리가 희끗하신 분이 젋은 친구와 서로 존대 하며 대화 하는게 이상한가?&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;난 그렇지 않다고 생각 한다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;나이는 숫자에 불과 하다. 회사 내의 팀에서 직급 역시 마찬 가지다. 서로 원활하게 소통이 되어야 시너지도 발생하고 업무 효율도 오른다.&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;본인이 상급자가 되었을때, 하급자를 시킬 생각 보다는 함께 일할 생각을 하자.&lt;/h1&gt;
</content>
<category term="단상" />
<summary>기본적인 인성이 안된 사람과는 상종 말자</summary>
</entry>
<entry>
<title>[2017-04-26]단상 - Linux Socket 연결 개수 초과 오류</title>
<link href="https://lahuman.github.io/20160426-phase/" rel="alternate" type="text/html" title="[2017-04-26]단상 - Linux Socket 연결 개수 초과 오류" />
<published>2017-04-26T00:00:00+09:00</published>
<updated>2017-04-26T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160426-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160426-phase/">&lt;h1 id=&quot;linux-socket----&quot;&gt;Linux Socket 연결 개수 초과 오류&lt;/h1&gt;

&lt;p&gt;장애가 났다, &lt;strong&gt;특정 연계 시스템과 연결이 안되었가 시간이 지나면 다시 연결이 되는&lt;/strong&gt; 이상한 장애 였습니다.&lt;br /&gt;
방화벽 문제도 아니고 네트워크 문제도 였습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;원인은 소켓 연결 최대 개수가 1024(기본값) 으로 되어 있었고, &lt;br /&gt;
서버에서 많은 소켓 연결을 사용하여 발생하는 문제 였습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이전에 비슷한 장애를 겪었던 경험과, 함께 일하는 분의 도움, 구글 검색으로 다음과 같이 해결 하였습니다.&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 프로세스가 가질수 있는 최대 소켓 &amp;amp; 파일 개수(open files 행 확인)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ulimit&lt;/span&gt; -a

&lt;span class=&quot;c&quot;&gt;# 프로세스가 가질수 있는 최대 소켓 &amp;amp; 파일 개수 증가&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ulimit&lt;/span&gt; -SHn 65535
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;it------------&quot;&gt;IT에서 일을 하면서 개발 뿐만이 아니라 서버에 대한 지식도 필요하다는 것을 많이 느낀다.&lt;/h2&gt;

&lt;h1 id=&quot;section&quot;&gt;참고 자료&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://meetup.toast.com/posts/53&quot;&gt;리눅스 서버의 TCP 네트워크 성능을 결정짓는 커널 파라미터 이야기 -TOAST&lt;/a&gt;&lt;/p&gt;
</content>
<category term="단상" />
<summary>ulimit 명령어를 이용한 소캣 연결 개수 늘리기</summary>
</entry>
<entry>
<title>[2017-04-25]단상 - 요구사항 명세서 (SRS)</title>
<link href="https://lahuman.github.io/20160425-phase/" rel="alternate" type="text/html" title="[2017-04-25]단상 - 요구사항 명세서 (SRS)" />
<published>2017-04-25T00:00:00+09:00</published>
<updated>2017-04-25T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160425-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160425-phase/">&lt;h1 id=&quot;section&quot;&gt;프로젝트를 진행하면서 가장 종요한 문서&lt;/h1&gt;

&lt;p&gt;요구사항 명세서는 결국 우리가 만들어야 할 모든 것을 담고 있는 명세서 입니다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;따라서 프로젝트 초반 분석 과정에서 가장 공을 들이고, 이후 프로젝트 종료 까지 모든 작업에 마킹 되어야 합니다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Software_requirements_specification&quot;&gt;요구사항명세서-WIKI&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;요구사항 명세서만 잘써도 반은 먹고 들어간다.&lt;/h2&gt;
</content>
<category term="단상" />
<summary>Software Requirement Specification</summary>
</entry>
<entry>
<title>[JDK7]WatchService 간단한 샘플 만들기</title>
<link href="https://lahuman.github.io/JDK7-Watcherservice-example/" rel="alternate" type="text/html" title="[JDK7]WatchService 간단한 샘플 만들기" />
<published>2017-04-24T00:00:00+09:00</published>
<updated>2017-04-24T00:00:00+09:00</updated>
<id>https://lahuman.github.io/JDK7-Watcherservice-example</id>
<content type="html" xml:base="https://lahuman.github.io/JDK7-Watcherservice-example/">&lt;h1 id=&quot;watchservice---&quot;&gt;WatchService 간단한 샘플 만들기&lt;/h1&gt;

&lt;p&gt;함께 일하는 분의 요청으로 JDK7 부터 제공되는 File WatcherService를 이용한 디렉토리 변경 내역을 출력하는 샘플을 작성 하였습니다. &lt;br /&gt;&lt;/p&gt;

&lt;div&gt;&lt;a href=&quot;https://github.com/lahuman/FileWatcherSample&quot; class=&quot;btn btn-warning&quot;&gt;Source 바로가기&lt;/a&gt;&lt;/div&gt;

&lt;h2 id=&quot;notice&quot;&gt;Notice&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;JRE 1.7 이상이 설치 되어 있어야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;function&quot;&gt;Function&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;특정 디렉토리 Watching&lt;/li&gt;
  &lt;li&gt;추가/삭제/변경 내역 출력&lt;/li&gt;
  &lt;li&gt;Thread 를 이용한 계속적인 감시를 지원&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;update-history&quot;&gt;Update history&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2015.04.24
    &lt;ul&gt;
      &lt;li&gt;최초 배포&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dzone.com/articles/how-watch-file-system-changes&quot;&gt;https://dzone.com/articles/how-watch-file-system-changes&lt;/a&gt;&lt;/p&gt;
</content>
<category term="jdk7" />
<category term="watcher" />
<summary>Toy Poject : WatchService useing JDK7</summary>
</entry>
<entry>
<title>[2017-04-21]현실의 공포는 마음에 그리는 공포만큼 두렵지 않다</title>
<link href="https://lahuman.github.io/20160421-phase/" rel="alternate" type="text/html" title="[2017-04-21]현실의 공포는 마음에 그리는 공포만큼 두렵지 않다" />
<published>2017-04-21T00:00:00+09:00</published>
<updated>2017-04-21T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160421-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160421-phase/">&lt;h1 id=&quot;section&quot;&gt;두려워 말라&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;현실의 공포는 마음에 그리는 공포만큼 두렵지 않다 - 셰익스피어&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;두려운 일을 마음으로 계속 그리면 더욱 두려워 아무 것도 할수 없게 된다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;하지만 현실과 마주하게 되면 생각보다 두렵지 않는 경우가 대부분이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;상상을 하여 두려움을 더 키우기 보다, 현실적으로 어떻게 할 것인가를 결정하고 한발씩 나아가자&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;난 오늘도 한발 나아가기 위해 노력 하는 중이다.&lt;/h1&gt;
</content>
<category term="단상" />
<summary>셰익스피어</summary>
</entry>
<entry>
<title>[2017-04-20]단상 - 전문가</title>
<link href="https://lahuman.github.io/20160420-phase/" rel="alternate" type="text/html" title="[2017-04-20]단상 - 전문가" />
<published>2017-04-20T00:00:00+09:00</published>
<updated>2017-04-20T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160420-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160420-phase/">&lt;h1 id=&quot;section&quot;&gt;전문가&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;명사로, 어떤 특정한 부문을 오로지 연구하여 그에 관한 지식이나 경험이 풍부한 사람. 또는, 그 일을 담당하고 있는 사람.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;짧은 시간동안 책만 읽는다고 전문가가 되지않는다. &lt;br /&gt;
해당 분야를 적어도 5년 이상은 경험 하고 연구해야 전문가가 아닐까? &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;워낙 뛰어난 사람들만 있어서 그런지 단 2~3개월 만에 전문가가 되어 나타는 사람들이 있다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;나는 전문가인가?&lt;/h2&gt;

&lt;p&gt;JAVA 웹 개발을 10년 넘도록 진행 하였지만, 내가 아는 부분은 아주 미비 하다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;자동차에 비유를 하자면, 운전 하는 사람이지 자동차를 만들거나 수리를 하는 사람은 아니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;물론 오랜 기간 운전을 하였고, 길도 나름 잘 알고 있다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;운전을 하다 보면 자동차가 고장이 나거나, 문제가 발생할 경우가 많다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이럴 경우 어떻게 수리 해야 하는지를 배워나가고 있다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;발전 속도&lt;/h2&gt;

&lt;p&gt;자동차 지금은 하이브리드, 전기차가 나오는 세상이다. &lt;br /&gt;
계속 변화 하듯 개발 역시 계속 변화 한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;빠른 변화 속도를 따라가지 못하며 도태 된다. &lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-3&quot;&gt;열심히 노력 하자&lt;/h1&gt;
</content>
<category term="단상" />
<summary>명사로서의 의미와 업무에서 사용되는 의미의 차이</summary>
</entry>
<entry>
<title>[2017-04-19]단상 - Convention over Configuration 개념</title>
<link href="https://lahuman.github.io/20160419-phase/" rel="alternate" type="text/html" title="[2017-04-19]단상 - Convention over Configuration 개념" />
<published>2017-04-19T00:00:00+09:00</published>
<updated>2017-04-19T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160419-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160419-phase/">&lt;h1 id=&quot;convention-over-configuration&quot;&gt;Convention over Configuration&lt;/h1&gt;

&lt;p&gt;Convention over Configuration(이하 CoC)의 단어상의 근본적인 의미는 개발자는 단지 애플리케이션에서 관습적이지 않은 면만 정의할 필요가 있다는 것이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;큰 예로 도메인 정의서와 같이 테이블 명과 컬럼 명에 대한 관례를 따라 작성하면 자연스럽게 모델에 대응 될 것이다.&lt;br /&gt;
그러면 개발자들은 이 관례를 벗어나는 테이블이나 컬럼에 대응하는 도메인을 작성하고 집중 하면 될것이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이와 같이 기능들에 일치하는 관례에 따라 툴을 사용해 개발을 하면 설정 파일을 작성할 필요없이 이러한 장점을 누릴 수 있다.&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;활용&lt;/h1&gt;

&lt;p&gt;대부분의 현대적 프레임워크(Spring, Ruby on Rails, JUnit, ETC… 등)에서는 CoC적인 접근 방식을 사용하고 있다.&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;참고 문헌&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://homo-ware.tistory.com/50&quot;&gt;http://homo-ware.tistory.com/50&lt;/a&gt;&lt;/p&gt;
</content>
<category term="단상" />
<summary>CoC에 대한 간단한 개념</summary>
</entry>
<entry>
<title>[2017-04-18]단상 - 아이디어 정리 방법</title>
<link href="https://lahuman.github.io/20160418-phase/" rel="alternate" type="text/html" title="[2017-04-18]단상 - 아이디어 정리 방법" />
<published>2017-04-18T00:00:00+09:00</published>
<updated>2017-04-18T00:00:00+09:00</updated>
<id>https://lahuman.github.io/20160418-phase</id>
<content type="html" xml:base="https://lahuman.github.io/20160418-phase/">&lt;h2 id=&quot;section&quot;&gt;마인드 맵&lt;/h2&gt;

&lt;p&gt;마인드 맵을 이용 하여 아이디어 정리를 하는 방법은 많이 사용되는 방법이다.&lt;br /&gt;
개인적으로 사용하는 마인드 맵은 &lt;a href=&quot;http://okmindmap.com/&quot;&gt;OKMindmap&lt;/a&gt;이다.&lt;br /&gt;
온라인으로 작성하고 쉽게 공유할 수 있다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpstrellocom&quot;&gt;&lt;a href=&quot;https://trello.com&quot;&gt;트렐로&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;보드를 이용한 아이디어를 정리하는 툴이다. &lt;br /&gt;
WILL(해야 할 일), DOING(진행 중인 일), DONE(마친 일) 등으로 관리를 하거나, &lt;br /&gt;
&lt;a href=&quot;https://www.slideshare.net/einsub/ss-14963659&quot;&gt;스크럼&lt;/a&gt;을 작성할 때도 사용된다.&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;휴대폰 메모&lt;/h2&gt;

&lt;p&gt;언제 어디서든 할 수 있는 방법이다.&lt;br /&gt;
요즘 휴대폰 없는 사람은 없을 테니, 꼭 메모가 아닌 녹음이나 음성을 글로 변환하는 방식을 이용해도 된다.&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;종이와 펜&lt;/h2&gt;

&lt;p&gt;개인적으로 가장 좋아하는 방식이다.&lt;br /&gt;
고전적이지만, 내 경우에는 글을 쓰면서 다시 한번 생각하여 아이디어가 발전하도록 도와준다.&lt;br /&gt;
그림을 그리기도 하고, 순서도를 그리기도 한다.&lt;br /&gt;
참고 자료에 나오는 &lt;a href=&quot;https://brunch.co.kr/@dol74/27&quot;&gt;MECE 프레임워크&lt;/a&gt;를 이용하는 것도 좋은 방안이 된다.&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;참고 자료&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://okmindmap.com/&quot;&gt;OKMindmap&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.slideshare.net/einsub/ss-14963659&quot;&gt;스크럼&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://brunch.co.kr/@dol74/27&quot;&gt;MECE 프레임워크&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
</content>
<category term="단상" />
<summary>쏟아나는 아이디어 정리 법</summary>
</entry>
</feed>
